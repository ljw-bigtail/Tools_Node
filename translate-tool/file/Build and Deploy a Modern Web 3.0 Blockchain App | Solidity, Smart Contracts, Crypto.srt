1
00:00:00,240 --> 00:00:06,159
web 3.0 has the potential to change the

2
00:00:03,439 --> 00:00:08,320
internet as we know it forever you're

3
00:00:06,160 --> 00:00:10,639
still early in catching the trend right

4
00:00:08,320 --> 00:00:13,440
now and building your first blockchain

5
00:00:10,638 --> 00:00:16,158
application acquire the skills get a

6
00:00:13,439 --> 00:00:19,278
high paying job or create your own web

7
00:00:16,160 --> 00:00:21,679
3.0 projects that can make you money

8
00:00:19,278 --> 00:00:24,478
hello there and welcome to a project

9
00:00:21,679 --> 00:00:27,919
video where you'll build and deploy a

10
00:00:24,480 --> 00:00:30,560
modern real world web 3.0 blockchain

11
00:00:27,920 --> 00:00:32,639
application and let me tell you i

12
00:00:30,559 --> 00:00:35,839
haven't been this excited for a video

13
00:00:32,640 --> 00:00:38,079
for a long time with a stunning design

14
00:00:35,840 --> 00:00:41,040
connected to the blockchain metamask

15
00:00:38,079 --> 00:00:42,960
pairing interaction with smart contracts

16
00:00:41,039 --> 00:00:45,999
sending ethereum through the blockchain

17
00:00:42,960 --> 00:00:49,599
network writing solidity code and much

18
00:00:46,000 --> 00:00:51,360
more crypt is the best web 3.0

19
00:00:49,600 --> 00:00:53,840
blockchain application that you can

20
00:00:51,359 --> 00:00:56,397
currently find on youtube you might be

21
00:00:53,840 --> 00:00:59,120
wondering what are the prerequisites for

22
00:00:56,399 --> 00:01:02,559
building such a fantastic website don't

23
00:00:59,119 --> 00:01:06,157
worry this course is entirely beginner

24
00:01:02,558 --> 00:01:08,559
friendly no web 3.0 blockchain or

25
00:01:06,159 --> 00:01:11,119
solidity knowledge required think of

26
00:01:08,560 --> 00:01:12,399
this as your first real blockchain

27
00:01:11,118 --> 00:01:14,719
application

28
00:01:12,400 --> 00:01:17,840
we're going to start easy and then move

29
00:01:14,719 --> 00:01:21,199
to more complex topics i will explain

30
00:01:17,840 --> 00:01:23,840
every step of the way in this video

31
00:01:21,200 --> 00:01:26,640
you'll learn how to connect a regular

32
00:01:23,840 --> 00:01:29,118
react.js application to the blockchain

33
00:01:26,640 --> 00:01:32,319
and pair it to your ethereum wallet

34
00:01:29,118 --> 00:01:34,797
using metamask you'll also learn how to

35
00:01:32,319 --> 00:01:37,359
write smart contracts on the ethereum

36
00:01:34,799 --> 00:01:38,479
network using the solidity programming

37
00:01:37,359 --> 00:01:41,437
language

38
00:01:38,478 --> 00:01:44,397
essentially in this single video you'll

39
00:01:41,438 --> 00:01:47,838
learn how to create a full-fledged web

40
00:01:44,399 --> 00:01:50,639
3.0 application that allows users to

41
00:01:47,840 --> 00:01:52,880
send transactions through the blockchain

42
00:01:50,640 --> 00:01:55,758
each transaction will then be paired

43
00:01:52,879 --> 00:01:57,199
with a gif and it will be forever stored

44
00:01:55,759 --> 00:01:59,520
on the blockchain

45
00:01:57,200 --> 00:02:01,600
to support this video leave a like

46
00:01:59,519 --> 00:02:03,199
comment and subscribe

47
00:02:01,599 --> 00:02:06,078
it shouldn't take more than a few

48
00:02:03,200 --> 00:02:09,280
seconds and i really appreciate it

49
00:02:06,078 --> 00:02:13,039
if this video reaches 20 000 likes i'm

50
00:02:09,280 --> 00:02:14,959
recording a second web 3.0 video

51
00:02:13,039 --> 00:02:16,719
in the end we'll also deploy the

52
00:02:14,959 --> 00:02:18,318
application so that you can share it

53
00:02:16,719 --> 00:02:21,438
with your friends put it on your

54
00:02:18,318 --> 00:02:23,999
portfolio and get a job you can also

55
00:02:21,439 --> 00:02:26,799
turn this into a real web 3.0

56
00:02:24,000 --> 00:02:29,200
application that other people can use

57
00:02:26,800 --> 00:02:30,800
please allow me to give you a quick demo

58
00:02:29,199 --> 00:02:33,118
of the application that you're going to

59
00:02:30,800 --> 00:02:35,439
build in this video

60
00:02:33,120 --> 00:02:38,238
as you can see we didn't only include

61
00:02:35,439 --> 00:02:40,317
the web 3.0 functionality and leave the

62
00:02:38,239 --> 00:02:43,120
page with no styles you're going to

63
00:02:40,318 --> 00:02:45,838
build a modern fully responsive website

64
00:02:43,120 --> 00:02:47,919
that's going to look like this so once

65
00:02:45,840 --> 00:02:50,399
somebody joins the application they need

66
00:02:47,919 --> 00:02:52,399
to click connect wallet button

67
00:02:50,400 --> 00:02:54,480
this is immediately going to trigger a

68
00:02:52,400 --> 00:02:56,720
meta mask connection and it's going to

69
00:02:54,479 --> 00:02:58,958
ask us which account do we want to

70
00:02:56,719 --> 00:03:01,518
connect in this case that's going to be

71
00:02:58,959 --> 00:03:03,518
account 1 so let's click next

72
00:03:01,519 --> 00:03:05,599
and let's click connect

73
00:03:03,519 --> 00:03:07,999
instantly you'll notice that the address

74
00:03:05,598 --> 00:03:09,998
of our account is right here on this

75
00:03:08,000 --> 00:03:12,400
nice ethereum card

76
00:03:10,000 --> 00:03:14,878
and if we open up metamask you'll be

77
00:03:12,400 --> 00:03:15,1000
able to see that our account is now

78
00:03:14,878 --> 00:03:18,639
connected

79
00:03:16,000 --> 00:03:20,958
it might seem like we have five ethereum

80
00:03:18,639 --> 00:03:23,278
in our wallet but don't be fooled we'll

81
00:03:20,959 --> 00:03:25,279
be doing our entire testing on the

82
00:03:23,280 --> 00:03:27,919
robson test network

83
00:03:25,280 --> 00:03:30,158
with that said how do we actually send

84
00:03:27,919 --> 00:03:32,318
ethereum through our application

85
00:03:30,158 --> 00:03:35,199
we can do that by switching our account

86
00:03:32,318 --> 00:03:37,999
to account number two and let's copy the

87
00:03:35,199 --> 00:03:40,798
address of our second account

88
00:03:38,000 --> 00:03:42,799
now we can paste that address right here

89
00:03:40,799 --> 00:03:44,840
we can choose the amount of ethereum we

90
00:03:42,799 --> 00:03:48,159
want to send let's do

91
00:03:44,840 --> 00:03:50,479
0.01 in this case and in here you can

92
00:03:48,158 --> 00:03:53,279
choose the keyword you want to attach to

93
00:03:50,479 --> 00:03:55,597
your specific transaction this keyword

94
00:03:53,280 --> 00:03:58,158
is going to be saved as data in the

95
00:03:55,598 --> 00:03:59,758
blockchain so in this case let's simply

96
00:03:58,158 --> 00:04:01,839
write test

97
00:03:59,759 --> 00:04:04,158
and you can also pass an additional

98
00:04:01,840 --> 00:04:08,399
piece of data which is a message so

99
00:04:04,158 --> 00:04:10,877
let's say hello there from account one

100
00:04:08,400 --> 00:04:13,039
and finally let's click send now

101
00:04:10,878 --> 00:04:15,198
metamask is going to ask us if we want

102
00:04:13,039 --> 00:04:17,039
to send one ethereum so let's go ahead

103
00:04:15,199 --> 00:04:19,038
and click confirm

104
00:04:17,040 --> 00:04:21,280
and then a second notification is going

105
00:04:19,040 --> 00:04:24,240
to appear and this is going to be a

106
00:04:21,279 --> 00:04:26,958
contract interaction so in here we are

107
00:04:24,240 --> 00:04:30,079
actually interacting with our solidity

108
00:04:26,959 --> 00:04:33,119
ethereum smart contract so let's click

109
00:04:30,079 --> 00:04:36,079
confirm as you can see our transaction

110
00:04:33,120 --> 00:04:38,879
is being sent as we speak and our

111
00:04:36,079 --> 00:04:41,758
loading is now gone so let's scroll down

112
00:04:38,879 --> 00:04:43,438
and see if our transaction is here we

113
00:04:41,759 --> 00:04:46,478
also have this nice section that

114
00:04:43,439 --> 00:04:49,358
explains our application and right here

115
00:04:46,478 --> 00:04:51,918
we have our latest transactions as you

116
00:04:49,360 --> 00:04:54,320
can see right here each transaction is

117
00:04:51,918 --> 00:04:56,637
stored in the blockchain forever we can

118
00:04:54,319 --> 00:04:58,158
see the address of the account that sent

119
00:04:56,639 --> 00:05:00,799
that ethereum

120
00:04:58,160 --> 00:05:03,198
and not only that if you click it it's

121
00:05:00,800 --> 00:05:05,120
going to open up an ether scan and

122
00:05:03,199 --> 00:05:07,519
you'll be able to see that this is a

123
00:05:05,120 --> 00:05:09,759
real address that's sending real

124
00:05:07,519 --> 00:05:12,477
transactions through the blockchain

125
00:05:09,759 --> 00:05:14,400
isn't this crazy we can also see who are

126
00:05:12,478 --> 00:05:16,718
we sending the ethereum to and the

127
00:05:14,399 --> 00:05:19,359
amount of ethereum that we are sending

128
00:05:16,720 --> 00:05:21,680
there is also our message and here is

129
00:05:19,360 --> 00:05:24,560
our gif in this case i think we type

130
00:05:21,680 --> 00:05:26,800
test so this is indeed testing and we

131
00:05:24,560 --> 00:05:28,880
can see the correct date and time of our

132
00:05:26,800 --> 00:05:30,639
transaction you can see right there we

133
00:05:28,879 --> 00:05:33,119
have some other transactions that have

134
00:05:30,639 --> 00:05:35,520
been made through our own network

135
00:05:33,120 --> 00:05:38,560
and that's it at the bottom we have a

136
00:05:35,519 --> 00:05:41,198
simple footer and that makes our entire

137
00:05:38,560 --> 00:05:44,079
application the real focus is going to

138
00:05:41,199 --> 00:05:46,880
be to implement web3 into our react

139
00:05:44,079 --> 00:05:48,559
application make it send transactions

140
00:05:46,879 --> 00:05:51,359
through the blockchain and then store

141
00:05:48,560 --> 00:05:53,758
those transactions and show them right

142
00:05:51,360 --> 00:05:56,400
inside of our application we've got a

143
00:05:53,759 --> 00:05:59,039
lot to cover so let's go ahead and get

144
00:05:56,399 --> 00:05:59,037
started

145
00:05:59,740 --> 00:06:02,808
[Music]

146
00:06:05,439 --> 00:06:09,839
before we start building out our project

147
00:06:07,839 --> 00:06:12,239
let's first get the hosting and the

148
00:06:09,839 --> 00:06:15,119
domain name for our new site

149
00:06:12,240 --> 00:06:17,360
hostinger is my personal recommendation

150
00:06:15,120 --> 00:06:19,440
and right now they're offering crazy

151
00:06:17,360 --> 00:06:22,560
deals so i simply needed to show this to

152
00:06:19,439 --> 00:06:25,358
you they offer a great price to quality

153
00:06:22,560 --> 00:06:28,560
ratio high speed servers and most

154
00:06:25,360 --> 00:06:29,919
importantly 24 7 chat support

155
00:06:28,560 --> 00:06:32,160
let's see what's offered with some of

156
00:06:29,918 --> 00:06:35,038
the most popular hosting plans and let's

157
00:06:32,160 --> 00:06:37,679
grab those deals hostingers plans are

158
00:06:35,038 --> 00:06:40,637
incredibly cheap i mean one dollar a

159
00:06:37,680 --> 00:06:43,1000
month for hosting for one website and

160
00:06:40,639 --> 00:06:46,159
you also get a free ssl certificate

161
00:06:44,000 --> 00:06:48,960
that means that you'll have https

162
00:06:46,160 --> 00:06:51,038
security in my case i'm gonna go with

163
00:06:48,959 --> 00:06:53,279
the premium shared hosting because it

164
00:06:51,038 --> 00:06:55,757
offers a few great things we'll need

165
00:06:53,279 --> 00:06:59,197
when building out our crypt project it

166
00:06:55,759 --> 00:07:01,840
gives you a free email account free ssl

167
00:06:59,199 --> 00:07:04,160
but most importantly it gives you a free

168
00:07:01,839 --> 00:07:06,318
domain name of course if you still

169
00:07:04,160 --> 00:07:09,120
decide to get single shared hosting you

170
00:07:06,319 --> 00:07:12,400
can later buy the domain name separately

171
00:07:09,120 --> 00:07:14,560
all web 3.0 applications need to be fast

172
00:07:12,399 --> 00:07:17,198
reliable and secure

173
00:07:14,560 --> 00:07:19,520
that's why having a good domain name and

174
00:07:17,199 --> 00:07:20,800
an ssl certificate makes all the

175
00:07:19,519 --> 00:07:23,119
difference

176
00:07:20,800 --> 00:07:25,199
of course improving your load times will

177
00:07:23,120 --> 00:07:26,399
definitely make your page stand out from

178
00:07:25,199 --> 00:07:28,560
the crowd

179
00:07:26,399 --> 00:07:30,559
since i've partnered with hostinger they

180
00:07:28,560 --> 00:07:33,199
decided to give you an even bigger

181
00:07:30,560 --> 00:07:36,159
discount you can find the link and the

182
00:07:33,199 --> 00:07:37,359
discount code in the description enjoy

183
00:07:36,160 --> 00:07:40,079
once you visit the link in the

184
00:07:37,360 --> 00:07:42,879
description let's choose a plan

185
00:07:40,079 --> 00:07:44,798
i've selected premium shared hosting and

186
00:07:42,879 --> 00:07:46,158
here we have to choose the period of our

187
00:07:44,800 --> 00:07:48,159
hosting

188
00:07:46,160 --> 00:07:50,639
with this crazy discount going on right

189
00:07:48,160 --> 00:07:53,360
now i'll definitely choose 48 months to

190
00:07:50,639 --> 00:07:55,520
save the most money and down below you

191
00:07:53,360 --> 00:07:57,919
can choose your payment method and then

192
00:07:55,519 --> 00:08:01,118
you can enter your coupon code that's

193
00:07:57,918 --> 00:08:02,799
going to be javascript mastery all

194
00:08:01,120 --> 00:08:04,720
uppercased

195
00:08:02,800 --> 00:08:07,280
that's going to give you an even bigger

196
00:08:04,720 --> 00:08:09,439
discount on your hosting package after

197
00:08:07,279 --> 00:08:12,158
you purchase it you'll be redirected to

198
00:08:09,439 --> 00:08:14,158
hostinger's dashboard i'll see you there

199
00:08:12,160 --> 00:08:16,240
as you can see i'm personally using

200
00:08:14,160 --> 00:08:18,719
hostinger for my brand for all of my

201
00:08:16,240 --> 00:08:21,039
websites if you've purchased premium

202
00:08:18,720 --> 00:08:23,918
shared hosting then you should have this

203
00:08:21,038 --> 00:08:26,079
claim your free domain button right here

204
00:08:23,918 --> 00:08:27,999
if you bought a single shared hosting

205
00:08:26,079 --> 00:08:30,079
then you can go to domains and then

206
00:08:28,000 --> 00:08:32,559
purchase the domain from here

207
00:08:30,079 --> 00:08:33,518
in my case i'll click the claim domain

208
00:08:32,559 --> 00:08:35,199
button

209
00:08:33,519 --> 00:08:38,200
let's try something like

210
00:08:35,200 --> 00:08:38,200
cryptomastery.com

211
00:08:38,240 --> 00:08:43,119
and let's check availability and that

212
00:08:40,879 --> 00:08:45,598
seems to be free this is actually a

213
00:08:43,120 --> 00:08:46,479
great domain so let's go ahead and claim

214
00:08:45,600 --> 00:08:49,200
it

215
00:08:46,480 --> 00:08:50,319
and our domain name is being set up as

216
00:08:49,200 --> 00:08:53,039
we speak

217
00:08:50,320 --> 00:08:55,760
and there we go the process took about a

218
00:08:53,039 --> 00:08:58,957
minute and it's fully set up what we can

219
00:08:55,759 --> 00:09:01,119
do right now is go back to home

220
00:08:58,958 --> 00:09:04,079
and then we can set up our premium

221
00:09:01,120 --> 00:09:06,719
shared hosting we can click start now

222
00:09:04,080 --> 00:09:09,278
and as you can see hostinger offers

223
00:09:06,720 --> 00:09:11,838
immediate hosting for wordpress and

224
00:09:09,278 --> 00:09:14,558
woocommerce but in this case we can

225
00:09:11,839 --> 00:09:16,398
click this button skip i will start from

226
00:09:14,559 --> 00:09:18,398
scratch

227
00:09:16,399 --> 00:09:20,719
in here we can choose the domain name

228
00:09:18,399 --> 00:09:23,040
for our site if you haven't claimed your

229
00:09:20,720 --> 00:09:25,359
free domain you can do that right here

230
00:09:23,039 --> 00:09:27,558
but if you have you can choose it right

231
00:09:25,360 --> 00:09:30,720
here so i'm going to go with

232
00:09:27,559 --> 00:09:33,118
cryptomastery.com and let's click select

233
00:09:30,720 --> 00:09:35,680
finally we can finish the setup the

234
00:09:33,120 --> 00:09:37,440
setup is being initialized and after

235
00:09:35,679 --> 00:09:39,518
that is done we'll be able to start

236
00:09:37,440 --> 00:09:41,440
coding out our project and then at the

237
00:09:39,519 --> 00:09:44,719
end of the video we'll deploy our

238
00:09:41,440 --> 00:09:46,480
website while our hosting is setting up

239
00:09:44,720 --> 00:09:48,398
i just wanted to quickly let you know

240
00:09:46,480 --> 00:09:50,319
that there is a github repository

241
00:09:48,399 --> 00:09:51,838
containing the entire code for this

242
00:09:50,320 --> 00:09:54,079
project

243
00:09:51,839 --> 00:09:55,759
so if you ever get stuck just make sure

244
00:09:54,080 --> 00:09:58,240
to visit the github link down in the

245
00:09:55,759 --> 00:10:00,478
description and compare your code with

246
00:09:58,240 --> 00:10:02,480
the code that's on here that'll help

247
00:10:00,480 --> 00:10:03,1000
solving all of your issues

248
00:10:02,480 --> 00:10:05,839
while you're here i would also

249
00:10:04,000 --> 00:10:07,680
appreciate it if you gave this

250
00:10:05,839 --> 00:10:09,680
repository a star

251
00:10:07,679 --> 00:10:11,999
with that said let's check if our

252
00:10:09,679 --> 00:10:15,119
hosting is fully set up

253
00:10:12,000 --> 00:10:17,040
and there we go our website is ready

254
00:10:15,120 --> 00:10:19,440
let's go to the control panel by

255
00:10:17,039 --> 00:10:21,119
clicking the manage site button

256
00:10:19,440 --> 00:10:23,120
at the end of this video as i've

257
00:10:21,120 --> 00:10:26,879
mentioned we're going to deploy our

258
00:10:23,120 --> 00:10:29,039
project using hostinger's file manager

259
00:10:26,879 --> 00:10:31,278
so with that said i know you've been

260
00:10:29,039 --> 00:10:32,798
waiting for it let's dive straight into

261
00:10:31,278 --> 00:10:35,598
the code

262
00:10:32,799 --> 00:10:37,358
as we always do in javascript mastery we

263
00:10:35,600 --> 00:10:40,079
are going to start from the bare

264
00:10:37,360 --> 00:10:42,560
beginnings and that is creating a new

265
00:10:40,078 --> 00:10:44,639
folder on our desktop

266
00:10:42,559 --> 00:10:47,039
just create an empty folder and call it

267
00:10:44,639 --> 00:10:50,639
however you like in this case i'm going

268
00:10:47,039 --> 00:10:52,798
to call it web 3.0

269
00:10:50,639 --> 00:10:55,438
as soon as you create it feel free to

270
00:10:52,799 --> 00:10:58,318
open an empty visual studio code window

271
00:10:55,440 --> 00:11:01,359
or your code editor of choice and then

272
00:10:58,320 --> 00:11:03,999
simply drag and drop the folder into it

273
00:11:01,360 --> 00:11:05,999
now let's expand our editor and the

274
00:11:04,000 --> 00:11:08,480
setup process is going to be a bit

275
00:11:06,000 --> 00:11:10,958
different from our usual videos we're

276
00:11:08,480 --> 00:11:12,959
going to create one new folder which is

277
00:11:10,958 --> 00:11:15,278
going to be called client

278
00:11:12,958 --> 00:11:16,478
this is where our react application is

279
00:11:15,278 --> 00:11:18,639
going to be

280
00:11:16,480 --> 00:11:20,720
and we're going to create another folder

281
00:11:18,639 --> 00:11:22,478
which is going to be called smart

282
00:11:20,720 --> 00:11:24,800
underscore contract

283
00:11:22,480 --> 00:11:26,880
as the name says this is where our

284
00:11:24,799 --> 00:11:28,879
solidity contract will go

285
00:11:26,879 --> 00:11:31,837
now that we have those two folders we

286
00:11:28,879 --> 00:11:34,638
can initialize our react application

287
00:11:31,839 --> 00:11:37,600
we can go to view and then terminal

288
00:11:34,639 --> 00:11:39,198
we can clear the console and then cd

289
00:11:37,600 --> 00:11:41,1000
into client

290
00:11:39,200 --> 00:11:44,879
now our client side is opened instead of

291
00:11:42,000 --> 00:11:46,879
using create react app to initialize our

292
00:11:44,879 --> 00:11:49,438
application in this video we're going to

293
00:11:46,879 --> 00:11:52,879
use vite this is a new technology that i

294
00:11:49,440 --> 00:11:55,920
found and it installs builds and starts

295
00:11:52,879 --> 00:11:58,319
your react applications in a few seconds

296
00:11:55,919 --> 00:12:01,837
we no longer have to wait until create

297
00:11:58,320 --> 00:12:03,440
react app initializes our application so

298
00:12:01,839 --> 00:12:05,600
let's get started

299
00:12:03,440 --> 00:12:08,239
the only thing you have to do to create

300
00:12:05,600 --> 00:12:12,720
your react application is scroll down

301
00:12:08,240 --> 00:12:15,360
and run npm init white at latest

302
00:12:12,720 --> 00:12:17,359
of course if you haven't used npm before

303
00:12:15,360 --> 00:12:19,999
then just make sure to download and

304
00:12:17,360 --> 00:12:22,159
install node then you'll be able to run

305
00:12:20,000 --> 00:12:24,000
all of the npm commands

306
00:12:22,159 --> 00:12:27,038
with that said let's go back to our

307
00:12:24,000 --> 00:12:28,078
terminal and right here we can just type

308
00:12:27,039 --> 00:12:29,199
npm

309
00:12:28,078 --> 00:12:32,078
init

310
00:12:29,200 --> 00:12:34,240
vite add latest if you're running this

311
00:12:32,078 --> 00:12:36,159
command for the first time the terminal

312
00:12:34,240 --> 00:12:39,360
is just going to ask you if you want to

313
00:12:36,159 --> 00:12:41,758
install wide so simply press enter

314
00:12:39,360 --> 00:12:43,199
in my case the project setup began

315
00:12:41,759 --> 00:12:45,517
instantly

316
00:12:43,200 --> 00:12:47,919
for our project name let's simply say

317
00:12:45,519 --> 00:12:51,360
dot slash because we are already in the

318
00:12:47,919 --> 00:12:53,278
folder we want to create our project in

319
00:12:51,360 --> 00:12:55,440
let's choose the package name which is

320
00:12:53,278 --> 00:12:57,999
going to be crept in my case but feel

321
00:12:55,440 --> 00:13:00,079
free to call it however you'd like

322
00:12:58,000 --> 00:13:01,759
let's choose a framework i'm going to go

323
00:13:00,078 --> 00:13:03,998
with react

324
00:13:01,759 --> 00:13:05,359
and a variant is going to be simply

325
00:13:04,000 --> 00:13:07,519
react

326
00:13:05,360 --> 00:13:11,119
and that's going to be it now we can

327
00:13:07,519 --> 00:13:11,120
simply run npm install

328
00:13:11,200 --> 00:13:17,360
this process took just 9 seconds and now

329
00:13:14,639 --> 00:13:19,200
we can run npm run

330
00:13:17,360 --> 00:13:22,638
dev

331
00:13:19,200 --> 00:13:25,759
and in only 500 milliseconds it loaded

332
00:13:22,639 --> 00:13:28,879
and you can control click localhost 3000

333
00:13:25,759 --> 00:13:31,199
and our react app is initialized i'm

334
00:13:28,879 --> 00:13:32,718
still not sure how i haven't heard about

335
00:13:31,200 --> 00:13:35,119
white before

336
00:13:32,720 --> 00:13:36,880
for all of our styles in this project

337
00:13:35,120 --> 00:13:39,278
we're gonna use something called

338
00:13:36,879 --> 00:13:42,077
tailwind tailwind allows us to build

339
00:13:39,278 --> 00:13:45,119
modern websites without leaving our jsx

340
00:13:42,078 --> 00:13:47,759
pages it's a utility css framework which

341
00:13:45,120 --> 00:13:50,160
allows you to shape and style your

342
00:13:47,759 --> 00:13:52,799
designs without having to write a line

343
00:13:50,159 --> 00:13:55,359
of css you just write these utility

344
00:13:52,799 --> 00:13:57,278
classes and that's it

345
00:13:55,360 --> 00:13:59,440
down below in the description i'm going

346
00:13:57,278 --> 00:14:02,077
to leave the link to the installation

347
00:13:59,440 --> 00:14:04,720
with create react app but the process is

348
00:14:02,078 --> 00:14:06,159
the same with vid so let's go ahead and

349
00:14:04,720 --> 00:14:08,079
set up tailwind

350
00:14:06,159 --> 00:14:11,998
the only thing we'll have to do is run

351
00:14:08,078 --> 00:14:14,318
npm install dash d tailwind css post css

352
00:14:12,000 --> 00:14:16,879
and auto prefixer

353
00:14:14,320 --> 00:14:19,119
so let's copy it let's stop the terminal

354
00:14:16,879 --> 00:14:20,077
from running by pressing ctrl c and then

355
00:14:19,120 --> 00:14:23,039
y

356
00:14:20,078 --> 00:14:24,318
and let's simply paste npm install and

357
00:14:23,039 --> 00:14:27,119
install all of the necessary

358
00:14:24,320 --> 00:14:27,119
dependencies

359
00:14:27,198 --> 00:14:33,278
once that is done we can also run mpx

360
00:14:30,320 --> 00:14:35,440
tailwind css in it

361
00:14:33,278 --> 00:14:38,398
so right here paste it

362
00:14:35,440 --> 00:14:41,680
and that created a tailwind css config

363
00:14:38,399 --> 00:14:43,440
file there we go and also a post css

364
00:14:41,679 --> 00:14:46,478
config file

365
00:14:43,440 --> 00:14:48,880
now we can copy our template paths so

366
00:14:46,480 --> 00:14:51,760
let's go ahead and copy this

367
00:14:48,879 --> 00:14:53,039
and paste it to tailwind config right

368
00:14:51,759 --> 00:14:54,879
here

369
00:14:53,039 --> 00:14:57,518
now we have to add the tailwind

370
00:14:54,879 --> 00:14:59,119
directives to our css so let's simply

371
00:14:57,519 --> 00:15:01,160
copy this

372
00:14:59,120 --> 00:15:04,799
and inside of the source

373
00:15:01,159 --> 00:15:07,277
index.css we can delete all of this and

374
00:15:04,799 --> 00:15:10,077
simply paste tailwind base tailwith

375
00:15:07,278 --> 00:15:13,278
components and tailwind utilities

376
00:15:10,078 --> 00:15:16,398
finally we can copy this h1

377
00:15:13,278 --> 00:15:18,718
go to our app.jsx

378
00:15:16,399 --> 00:15:20,399
remove all of the jsx from here because

379
00:15:18,720 --> 00:15:24,559
we won't need that

380
00:15:20,399 --> 00:15:24,559
and simply paste that h1

381
00:15:25,198 --> 00:15:30,957
we can also remove the logo the app.css

382
00:15:28,639 --> 00:15:32,720
and the count right here

383
00:15:30,958 --> 00:15:34,878
and of course we are writing the most

384
00:15:32,720 --> 00:15:37,279
modern code so let's convert this into

385
00:15:34,879 --> 00:15:38,718
an arrow function

386
00:15:37,278 --> 00:15:41,438
there we go

387
00:15:38,720 --> 00:15:43,599
this is our react application

388
00:15:41,440 --> 00:15:45,198
finally to check if this works we can

389
00:15:43,600 --> 00:15:47,680
open up the terminal

390
00:15:45,198 --> 00:15:49,757
you can either press ctrl tilde or go to

391
00:15:47,679 --> 00:15:54,637
view and then terminal

392
00:15:49,759 --> 00:15:57,440
and finally we can run mpm run dev

393
00:15:54,639 --> 00:15:58,240
control click the localhost and there we

394
00:15:57,440 --> 00:16:01,120
go

395
00:15:58,240 --> 00:16:03,600
if the words are bolded and underlined

396
00:16:01,120 --> 00:16:05,919
that means that our react application

397
00:16:03,600 --> 00:16:07,120
and tail when gridded are completely

398
00:16:05,919 --> 00:16:10,638
installed

399
00:16:07,120 --> 00:16:13,120
great that was it for our front-end part

400
00:16:10,639 --> 00:16:15,119
now let's initialize all of the code

401
00:16:13,120 --> 00:16:16,398
that we're going to need for our smart

402
00:16:15,120 --> 00:16:18,320
contract

403
00:16:16,399 --> 00:16:20,958
we can stop this terminal from running

404
00:16:18,320 --> 00:16:23,759
by pressing control c and then y

405
00:16:20,958 --> 00:16:26,637
we can cd dot dot to go back into the

406
00:16:23,759 --> 00:16:29,199
root of our directory and then we can cd

407
00:16:26,639 --> 00:16:32,720
into smart underscore contract

408
00:16:29,198 --> 00:16:34,319
right here we're going to run npm init

409
00:16:32,720 --> 00:16:36,320
dash y

410
00:16:34,320 --> 00:16:38,879
this is going to initialize an empty

411
00:16:36,320 --> 00:16:41,680
package json and that's going to be the

412
00:16:38,879 --> 00:16:43,678
starting point of our smart contract but

413
00:16:41,679 --> 00:16:45,598
of course first we need to be able to

414
00:16:43,679 --> 00:16:48,318
see something to code out the

415
00:16:45,600 --> 00:16:50,880
functionality so we're going to focus on

416
00:16:48,320 --> 00:16:52,800
our react application first primarily

417
00:16:50,879 --> 00:16:55,359
the homepage part that allows us to send

418
00:16:52,799 --> 00:16:57,278
transactions and then once that is done

419
00:16:55,360 --> 00:17:00,320
we can go back and implement the

420
00:16:57,278 --> 00:17:02,718
functionality of our smart contract

421
00:17:00,320 --> 00:17:04,480
with that said let's start creating our

422
00:17:02,720 --> 00:17:06,958
react application

423
00:17:04,480 --> 00:17:09,600
let's start with our react application

424
00:17:06,959 --> 00:17:10,798
by creating a basic file and folder

425
00:17:09,599 --> 00:17:13,358
structure

426
00:17:10,798 --> 00:17:15,198
we can do that by creating a new folder

427
00:17:13,359 --> 00:17:17,198
inside of the source folder

428
00:17:15,199 --> 00:17:19,359
called components

429
00:17:17,199 --> 00:17:21,439
and then inside of there we can start

430
00:17:19,359 --> 00:17:23,198
listing all of our components

431
00:17:21,439 --> 00:17:25,839
the first component is going to be

432
00:17:23,199 --> 00:17:28,160
navbar.jsx

433
00:17:25,838 --> 00:17:31,599
inside of there we can create a basic

434
00:17:28,160 --> 00:17:32,879
functional component by typing const

435
00:17:31,599 --> 00:17:35,839
navbar

436
00:17:32,880 --> 00:17:38,719
is equal to a functional component

437
00:17:35,839 --> 00:17:41,199
there we're going to simply return an h1

438
00:17:38,720 --> 00:17:44,319
that's going to say navbar

439
00:17:41,200 --> 00:17:46,799
and just below we need to say export

440
00:17:44,319 --> 00:17:49,279
default navbar

441
00:17:46,798 --> 00:17:51,118
there we go now we can copy this and

442
00:17:49,279 --> 00:17:53,037
then we're going to paste it into every

443
00:17:51,119 --> 00:17:55,279
single new component

444
00:17:53,038 --> 00:17:57,759
so the second component on our list is

445
00:17:55,279 --> 00:18:00,239
going to be footer.jsx

446
00:17:57,759 --> 00:18:02,797
we can paste it here and now we can hold

447
00:18:00,240 --> 00:18:05,520
the alt key and double click all of the

448
00:18:02,798 --> 00:18:07,439
parts where it says navbar

449
00:18:05,519 --> 00:18:09,199
with that we can simply rename

450
00:18:07,440 --> 00:18:11,279
everything to footer

451
00:18:09,200 --> 00:18:13,679
the third component on our list is going

452
00:18:11,279 --> 00:18:16,158
to be loader.jsx

453
00:18:13,679 --> 00:18:18,320
this is going to be a loading spinner so

454
00:18:16,160 --> 00:18:20,400
again make sure to paste it and then

455
00:18:18,319 --> 00:18:23,038
hold alt and then double click all of

456
00:18:20,400 --> 00:18:25,440
the words and simply rename it to the

457
00:18:23,038 --> 00:18:26,879
name of that component in this case

458
00:18:25,440 --> 00:18:28,480
that's loader

459
00:18:26,880 --> 00:18:29,639
the third component is going to be

460
00:18:28,480 --> 00:18:32,960
called

461
00:18:29,640 --> 00:18:36,880
services.jsx we can simply paste it and

462
00:18:32,960 --> 00:18:39,038
rename everything to services

463
00:18:36,880 --> 00:18:42,038
the fourth component is going to be

464
00:18:39,038 --> 00:18:42,038
transactions.jsx

465
00:18:42,960 --> 00:18:48,080
and you might be wondering what is the

466
00:18:44,798 --> 00:18:50,318
difference between js and jsx

467
00:18:48,079 --> 00:18:53,119
jsx just means that we're gonna write

468
00:18:50,319 --> 00:18:55,198
jsx code meaning the react code inside

469
00:18:53,119 --> 00:18:57,519
of that file it doesn't make any

470
00:18:55,200 --> 00:18:59,919
difference you could have used the js

471
00:18:57,519 --> 00:19:01,999
extension with all these with that said

472
00:18:59,919 --> 00:19:05,119
let's continue i'm going to paste our

473
00:19:02,000 --> 00:19:08,000
component and again rename it to

474
00:19:05,119 --> 00:19:09,798
transactions and the final component on

475
00:19:08,000 --> 00:19:11,359
our list is called

476
00:19:09,798 --> 00:19:13,439
welcome.jsx

477
00:19:11,359 --> 00:19:15,839
that's going to be the first part of our

478
00:19:13,440 --> 00:19:17,600
application so we can simply rename

479
00:19:15,839 --> 00:19:20,319
everything to welcome

480
00:19:17,599 --> 00:19:22,719
now to allow our application to import

481
00:19:20,319 --> 00:19:24,918
all of these components in one line we

482
00:19:22,720 --> 00:19:27,599
can create one final

483
00:19:24,919 --> 00:19:28,879
index.js file inside of the components

484
00:19:27,599 --> 00:19:31,199
folder

485
00:19:28,880 --> 00:19:33,840
this is going to allow us to export all

486
00:19:31,200 --> 00:19:35,520
of the components from a single file so

487
00:19:33,839 --> 00:19:40,879
we can say export

488
00:19:35,519 --> 00:19:44,159
default as loader from dot slash loader

489
00:19:40,880 --> 00:19:46,719
now we can repeat this a few more times

490
00:19:44,160 --> 00:19:48,959
and we can rename this from loader to

491
00:19:46,720 --> 00:19:52,080
navbar and then we need to repeat the

492
00:19:48,960 --> 00:19:53,1000
process for every single component so

493
00:19:52,079 --> 00:19:55,518
let's do footer next

494
00:19:54,000 --> 00:19:56,798
then we're going to have the welcome

495
00:19:55,519 --> 00:19:59,677
page

496
00:19:56,798 --> 00:20:01,677
we need to have the transactions

497
00:19:59,679 --> 00:20:02,960
and finally

498
00:20:01,679 --> 00:20:04,880
services

499
00:20:02,960 --> 00:20:08,158
now that we have all of our components

500
00:20:04,880 --> 00:20:09,679
we can go into app.jsx and we can import

501
00:20:08,159 --> 00:20:14,319
them right here

502
00:20:09,679 --> 00:20:15,280
let's type import in curly braces navbar

503
00:20:14,319 --> 00:20:16,638
welcome

504
00:20:15,279 --> 00:20:17,917
footer

505
00:20:16,640 --> 00:20:18,840
services

506
00:20:17,919 --> 00:20:21,839
and

507
00:20:18,839 --> 00:20:24,478
transactions and all that is coming from

508
00:20:21,839 --> 00:20:27,119
dot slash components

509
00:20:24,480 --> 00:20:28,480
now inside of our app instead of having

510
00:20:27,119 --> 00:20:30,719
this h1

511
00:20:28,480 --> 00:20:33,119
we can create a div that's going to have

512
00:20:30,720 --> 00:20:36,159
a class name equal to

513
00:20:33,119 --> 00:20:37,918
min dash h dash screen

514
00:20:36,159 --> 00:20:40,240
this is going to be a div with a

515
00:20:37,919 --> 00:20:42,319
specific width and then inside of there

516
00:20:40,240 --> 00:20:44,799
we can create another div that's going

517
00:20:42,319 --> 00:20:49,439
to have a class name

518
00:20:44,798 --> 00:20:51,839
equal to gradient dash bg dash welcome

519
00:20:49,440 --> 00:20:52,799
and inside of there we can put our nav

520
00:20:51,839 --> 00:20:55,598
bar

521
00:20:52,798 --> 00:20:57,839
and we can also put our welcome

522
00:20:55,599 --> 00:20:59,279
and just below that div we're gonna have

523
00:20:57,839 --> 00:21:01,598
the services

524
00:20:59,279 --> 00:21:04,557
we're gonna have the transactions

525
00:21:01,599 --> 00:21:07,358
and finally we're gonna have our footer

526
00:21:04,558 --> 00:21:09,998
with that said our basic file and folder

527
00:21:07,359 --> 00:21:12,319
structure is now fully set up this

528
00:21:10,000 --> 00:21:14,240
definitely took a few minutes but now

529
00:21:12,319 --> 00:21:16,238
whenever we start implementing another

530
00:21:14,240 --> 00:21:18,959
piece of code we can simply control

531
00:21:16,240 --> 00:21:21,919
click and we can start implementing that

532
00:21:18,960 --> 00:21:24,559
specific component the structure is done

533
00:21:21,919 --> 00:21:26,558
now we are ready to start coding

534
00:21:24,558 --> 00:21:29,199
now before we start implementing the

535
00:21:26,558 --> 00:21:31,918
code i like to have a clean working

536
00:21:29,200 --> 00:21:34,480
environment so we can hold ctrl and then

537
00:21:31,919 --> 00:21:36,720
press w a few times to close all of our

538
00:21:34,480 --> 00:21:38,880
currently open files

539
00:21:36,720 --> 00:21:40,1000
the only thing we need right now is

540
00:21:38,880 --> 00:21:45,599
client source

541
00:21:41,000 --> 00:21:49,359
app.jsx we can also open up the terminal

542
00:21:45,599 --> 00:21:52,719
and we can cd into client and run it for

543
00:21:49,359 --> 00:21:54,238
one final time so that's going to be npm

544
00:21:52,720 --> 00:21:55,679
run dev

545
00:21:54,240 --> 00:21:58,320
let's open it up

546
00:21:55,679 --> 00:22:02,159
and as you can see we have navbar

547
00:21:58,319 --> 00:22:04,557
welcome services transactions and footer

548
00:22:02,159 --> 00:22:06,880
now this is just a blank paper with five

549
00:22:04,558 --> 00:22:09,599
different components but soon enough

550
00:22:06,880 --> 00:22:11,519
these are going to be entire sections of

551
00:22:09,599 --> 00:22:14,158
our front-end application

552
00:22:11,519 --> 00:22:17,198
let's start by importing some default

553
00:22:14,159 --> 00:22:19,519
css styles we're going to code out all

554
00:22:17,200 --> 00:22:21,919
of the components together but to give

555
00:22:19,519 --> 00:22:23,759
us a jump start on this video i'm going

556
00:22:21,919 --> 00:22:26,480
to just give you a list of all of the

557
00:22:23,759 --> 00:22:28,879
generic styles and backgrounds and

558
00:22:26,480 --> 00:22:30,319
gradients that way we won't have to

559
00:22:28,880 --> 00:22:33,519
write them by hand

560
00:22:30,319 --> 00:22:35,678
so let's go to index.css

561
00:22:33,519 --> 00:22:37,759
and right here you can paste the file

562
00:22:35,679 --> 00:22:39,839
that you can find in the description

563
00:22:37,759 --> 00:22:42,478
it's going to be under styles and other

564
00:22:39,839 --> 00:22:45,999
code there's going to be a github gist

565
00:22:42,480 --> 00:22:47,999
containing the entire index.css file as

566
00:22:46,000 --> 00:22:50,080
you can see we're not doing any logic

567
00:22:48,000 --> 00:22:52,639
here we're simply importing a specific

568
00:22:50,079 --> 00:22:55,037
font setting up some default styling and

569
00:22:52,640 --> 00:22:57,319
then importing all of the gradients i'm

570
00:22:55,038 --> 00:23:00,398
going to give you a moment to get this

571
00:22:57,319 --> 00:23:02,557
index.css file and then we can dive

572
00:23:00,400 --> 00:23:04,400
right in if you've imported the file

573
00:23:02,558 --> 00:23:07,199
correctly you should notice that there

574
00:23:04,400 --> 00:23:09,840
is a gradient on our navbar and on our

575
00:23:07,200 --> 00:23:12,400
welcome section so now is the time that

576
00:23:09,839 --> 00:23:15,598
we start coding them out let's start

577
00:23:12,400 --> 00:23:17,678
with our navbar so we can go to app.jsx

578
00:23:15,599 --> 00:23:20,639
and then simply control click the navbar

579
00:23:17,679 --> 00:23:23,679
component inside of here we can import a

580
00:23:20,640 --> 00:23:25,199
few icons by saying import

581
00:23:23,679 --> 00:23:26,159
h i

582
00:23:25,200 --> 00:23:27,840
menu

583
00:23:26,159 --> 00:23:32,559
alt for

584
00:23:27,839 --> 00:23:37,118
from react dash icons forward slash hi

585
00:23:32,558 --> 00:23:38,157
and below that we can import ai outline

586
00:23:37,119 --> 00:23:41,038
close

587
00:23:38,159 --> 00:23:44,720
and that's going to be coming from react

588
00:23:41,038 --> 00:23:47,278
dash icons forward slash ai in here

589
00:23:44,720 --> 00:23:51,519
we're also going to import the logo so

590
00:23:47,278 --> 00:23:56,239
we can say import logo from dot slash

591
00:23:51,519 --> 00:23:58,398
dot slash images logo dot png

592
00:23:56,240 --> 00:24:01,679
this logo is something that we don't yet

593
00:23:58,400 --> 00:24:04,319
have we don't have the images folder

594
00:24:01,679 --> 00:24:06,240
so i've also prepared an entire zipped

595
00:24:04,319 --> 00:24:08,319
folder of all of the assets that we're

596
00:24:06,240 --> 00:24:11,119
going to use throughout this project to

597
00:24:08,319 --> 00:24:13,038
get it go down in the description unzip

598
00:24:11,119 --> 00:24:15,678
it and then you can paste the images

599
00:24:13,038 --> 00:24:18,557
folder right here inside of the client

600
00:24:15,679 --> 00:24:22,159
directory just paste it that's going to

601
00:24:18,558 --> 00:24:25,998
give you an animated svg hello.svg and

602
00:24:22,159 --> 00:24:27,1000
also a logo.png now if you control click

603
00:24:26,000 --> 00:24:30,158
images right here you can notice it's

604
00:24:28,000 --> 00:24:32,480
going to lead you to the crypt logo

605
00:24:30,159 --> 00:24:35,439
let's go back to our navbar and we can

606
00:24:32,480 --> 00:24:37,440
finally start writing out some jsx our

607
00:24:35,440 --> 00:24:41,440
navigation bar is going to be wrapped

608
00:24:37,440 --> 00:24:44,558
with an html5 semantic nav tag

609
00:24:41,440 --> 00:24:48,159
that nav tag is going to have a class

610
00:24:44,558 --> 00:24:49,599
name equal to w dash full

611
00:24:48,159 --> 00:24:53,120
flex

612
00:24:49,599 --> 00:24:55,198
md colon justify dash center

613
00:24:53,119 --> 00:24:57,998
and if you're not sure what some of

614
00:24:55,200 --> 00:25:00,480
these class names mean just make sure to

615
00:24:58,000 --> 00:25:01,319
check out detailing documentation if you

616
00:25:00,480 --> 00:25:03,759
go to

617
00:25:01,319 --> 00:25:04,959
tailwindcss.com forward slash docs the

618
00:25:03,759 --> 00:25:07,198
link is also going to be in the

619
00:25:04,960 --> 00:25:09,440
description you can search for every

620
00:25:07,200 --> 00:25:12,959
single property just right here in the

621
00:25:09,440 --> 00:25:15,840
search let's search for w dash full

622
00:25:12,960 --> 00:25:17,918
and you can notice that w full simply

623
00:25:15,839 --> 00:25:19,839
means that the div is going to take the

624
00:25:17,919 --> 00:25:22,079
entire percentage of the width and

625
00:25:19,839 --> 00:25:25,037
that's the situation with every single

626
00:25:22,079 --> 00:25:26,239
other property for example flex let's

627
00:25:25,038 --> 00:25:28,958
check it out

628
00:25:26,240 --> 00:25:30,558
this is going to set the display of our

629
00:25:28,960 --> 00:25:32,640
div to flex

630
00:25:30,558 --> 00:25:34,558
so whenever you're not sure what some of

631
00:25:32,640 --> 00:25:37,199
these properties mean just go to the

632
00:25:34,558 --> 00:25:39,758
docs and search for that specific name

633
00:25:37,200 --> 00:25:42,400
this means that on medium devices the

634
00:25:39,759 --> 00:25:43,999
justify is going to be center and

635
00:25:42,400 --> 00:25:46,880
on other devices

636
00:25:44,000 --> 00:25:49,278
justify is going to be between

637
00:25:46,880 --> 00:25:52,479
we can also have the items in the center

638
00:25:49,278 --> 00:25:54,319
and set the padding or p-4

639
00:25:52,480 --> 00:25:56,798
now it would be great if we could see

640
00:25:54,319 --> 00:25:59,838
the changes that we code live in the

641
00:25:56,798 --> 00:26:03,599
browser so let's put our browser and the

642
00:25:59,839 --> 00:26:05,518
editor side by side and there we go i've

643
00:26:03,599 --> 00:26:07,599
opened up the browser side by side with

644
00:26:05,519 --> 00:26:09,599
the editor and we are immediately

645
00:26:07,599 --> 00:26:11,518
greeted with an error

646
00:26:09,599 --> 00:26:13,999
right now we are never actually

647
00:26:11,519 --> 00:26:16,479
importing react icons

648
00:26:14,000 --> 00:26:18,799
and for that matter we're not importing

649
00:26:16,480 --> 00:26:21,600
any single package we can see that if we

650
00:26:18,798 --> 00:26:24,557
go to package.json we only have the

651
00:26:21,599 --> 00:26:26,398
default installed packages so let's go

652
00:26:24,558 --> 00:26:28,878
ahead and install all of the necessary

653
00:26:26,400 --> 00:26:30,319
dependencies that our react application

654
00:26:28,880 --> 00:26:32,239
is going to use

655
00:26:30,319 --> 00:26:34,798
we can open up the terminal

656
00:26:32,240 --> 00:26:38,480
press ctrl c to stop it from running and

657
00:26:34,798 --> 00:26:40,719
then y in here we can type npm install

658
00:26:38,480 --> 00:26:43,678
and let's of course install a package

659
00:26:40,720 --> 00:26:45,840
called react dash icons

660
00:26:43,679 --> 00:26:48,720
and the only other package we're going

661
00:26:45,839 --> 00:26:51,119
to use is called ethers this is going to

662
00:26:48,720 --> 00:26:53,918
allow us to interact with the blockchain

663
00:26:51,119 --> 00:26:56,399
and with our smart contract everything

664
00:26:53,919 --> 00:26:58,798
else we're going to code on our own so

665
00:26:56,400 --> 00:27:01,520
let's press enter and wait until these

666
00:26:58,798 --> 00:27:03,439
two packages are installed and while i

667
00:27:01,519 --> 00:27:05,438
was speaking they were already installed

668
00:27:03,440 --> 00:27:07,840
so we can rerun our application by

669
00:27:05,440 --> 00:27:09,760
running npm run dev

670
00:27:07,839 --> 00:27:12,558
and again make sure that you install

671
00:27:09,759 --> 00:27:14,398
them and run the npm run dev inside of

672
00:27:12,558 --> 00:27:16,878
the client directory

673
00:27:14,400 --> 00:27:19,520
great as you can see now we no longer

674
00:27:16,880 --> 00:27:21,759
have the error but we cannot really see

675
00:27:19,519 --> 00:27:24,318
anything yet in the navigation bar so

676
00:27:21,759 --> 00:27:26,638
let's continue coding it inside of our

677
00:27:24,319 --> 00:27:29,359
nav we're gonna have a div

678
00:27:26,640 --> 00:27:30,960
and this div is going to have a class

679
00:27:29,359 --> 00:27:33,918
name

680
00:27:30,960 --> 00:27:36,399
where on medium devices we can say flex

681
00:27:33,919 --> 00:27:38,399
dash 0.5

682
00:27:36,398 --> 00:27:40,318
in square brackets

683
00:27:38,398 --> 00:27:41,358
then usually it's going to be flex

684
00:27:40,319 --> 00:27:44,639
initial

685
00:27:41,359 --> 00:27:45,998
justify dash center and items dash

686
00:27:44,640 --> 00:27:48,079
center

687
00:27:46,000 --> 00:27:49,120
inside of here we're going to render our

688
00:27:48,079 --> 00:27:51,759
image

689
00:27:49,119 --> 00:27:54,638
so we can create a new image tag where

690
00:27:51,759 --> 00:27:57,518
the source is going to be equal to logo

691
00:27:54,640 --> 00:28:00,840
alternative tag is going to be logo and

692
00:27:57,519 --> 00:28:05,198
we can give it a class name equal to

693
00:28:00,839 --> 00:28:09,037
w-32 and cursor dash pointer and there

694
00:28:05,200 --> 00:28:11,919
we go here is our crypt logo just below

695
00:28:09,038 --> 00:28:13,278
this div we can create a ul and an

696
00:28:11,919 --> 00:28:17,199
ordered list

697
00:28:13,278 --> 00:28:19,438
and we can give it a class name equal to

698
00:28:17,200 --> 00:28:20,880
text white

699
00:28:19,440 --> 00:28:23,039
md

700
00:28:20,880 --> 00:28:24,239
column flex

701
00:28:23,038 --> 00:28:26,078
hidden

702
00:28:24,240 --> 00:28:27,840
list dash none

703
00:28:26,079 --> 00:28:30,798
flex dash row

704
00:28:27,839 --> 00:28:34,638
justify dash between

705
00:28:30,798 --> 00:28:37,118
items dash center and finally flex dash

706
00:28:34,640 --> 00:28:38,880
initial

707
00:28:37,119 --> 00:28:40,878
now of course if you save that nothing's

708
00:28:38,880 --> 00:28:43,1000
going to happen because we have to add

709
00:28:40,880 --> 00:28:46,479
some list items we're going to create a

710
00:28:44,000 --> 00:28:48,559
new component right here above this one

711
00:28:46,480 --> 00:28:52,079
that's going to be a simple component

712
00:28:48,558 --> 00:28:54,157
for our nav bar item it's going to be a

713
00:28:52,079 --> 00:28:56,798
functional component and it's going to

714
00:28:54,159 --> 00:29:01,038
accept a few props it's going to be

715
00:28:56,798 --> 00:29:03,198
title and class props like this

716
00:29:01,038 --> 00:29:06,797
and the only thing it's going to do is

717
00:29:03,200 --> 00:29:09,679
it's simply going to return an li a list

718
00:29:06,798 --> 00:29:11,599
item that list item is going to have a

719
00:29:09,679 --> 00:29:14,320
class name

720
00:29:11,599 --> 00:29:15,917
equal to but it's going to be a dynamic

721
00:29:14,319 --> 00:29:18,958
block like this

722
00:29:15,919 --> 00:29:20,798
margin x dash 4 which means margin on

723
00:29:18,960 --> 00:29:22,960
horizontal axis

724
00:29:20,798 --> 00:29:25,677
then we're going to have cursor dash

725
00:29:22,960 --> 00:29:28,639
pointer and finally we can render out

726
00:29:25,679 --> 00:29:31,278
all of the class props that we pass into

727
00:29:28,640 --> 00:29:33,600
it and inside of our li we're going to

728
00:29:31,278 --> 00:29:35,839
simply render the title

729
00:29:33,599 --> 00:29:39,118
that means that now we can call our

730
00:29:35,839 --> 00:29:41,999
navigation bar item right here as a

731
00:29:39,119 --> 00:29:44,479
component and that's the beauty of react

732
00:29:42,000 --> 00:29:47,360
reusing it of course we don't simply

733
00:29:44,480 --> 00:29:49,600
want to have one navbar item so let's

734
00:29:47,359 --> 00:29:52,639
create a new dynamic block

735
00:29:49,599 --> 00:29:55,358
create an array where the first item is

736
00:29:52,640 --> 00:29:57,760
going to be market the second item is

737
00:29:55,359 --> 00:30:00,639
going to be exchange

738
00:29:57,759 --> 00:30:02,318
the third item is going to be tutorials

739
00:30:00,640 --> 00:30:04,640
and for the fourth one let's do

740
00:30:02,319 --> 00:30:07,678
something like wallets and then we can

741
00:30:04,640 --> 00:30:10,239
call a dot map method on it

742
00:30:07,679 --> 00:30:12,558
r.map is instantly going to return

743
00:30:10,240 --> 00:30:14,799
something meaning that we won't have

744
00:30:12,558 --> 00:30:16,158
curly braces here just regular

745
00:30:14,798 --> 00:30:18,557
parentheses

746
00:30:16,159 --> 00:30:20,720
and in our function parameters we're

747
00:30:18,558 --> 00:30:22,958
going to pass the item we're looping

748
00:30:20,720 --> 00:30:25,840
over which is going to be either market

749
00:30:22,960 --> 00:30:28,799
exchange tutorials or wallets and we can

750
00:30:25,839 --> 00:30:32,157
also get the index of our specific loop

751
00:30:28,798 --> 00:30:35,038
so for each iteration we want to show

752
00:30:32,159 --> 00:30:37,038
the navbar item like this as a

753
00:30:35,038 --> 00:30:39,599
self-closing tag

754
00:30:37,038 --> 00:30:42,557
and we're going to provide a key equal

755
00:30:39,599 --> 00:30:45,839
to item plus index to make it really

756
00:30:42,558 --> 00:30:48,479
unique and the title can simply be the

757
00:30:45,839 --> 00:30:51,037
item now if we save that you can notice

758
00:30:48,480 --> 00:30:52,158
that we have market exchange tutorials

759
00:30:51,038 --> 00:30:54,639
and wallets

760
00:30:52,159 --> 00:30:56,798
now let's also say that people can log

761
00:30:54,640 --> 00:30:59,279
in to our application so we can create

762
00:30:56,798 --> 00:31:01,439
one final ally that's simply going to

763
00:30:59,278 --> 00:31:03,678
say login

764
00:31:01,440 --> 00:31:04,399
inside of there let's give it a class

765
00:31:03,679 --> 00:31:07,760
name

766
00:31:04,398 --> 00:31:10,398
equal to bg dash and then in square

767
00:31:07,759 --> 00:31:12,239
brackets with a hash sign

768
00:31:10,398 --> 00:31:15,598
2 9 5

769
00:31:12,240 --> 00:31:18,480
2 e3 i found that color to work really

770
00:31:15,599 --> 00:31:21,438
good that's a basic blue color we can

771
00:31:18,480 --> 00:31:23,600
give it a padding y dash too just to

772
00:31:21,440 --> 00:31:27,600
give it some top and bottom padding we

773
00:31:23,599 --> 00:31:30,879
can also give it padding x-7 there we go

774
00:31:27,599 --> 00:31:33,599
and let's give it margin x-4 let's make

775
00:31:30,880 --> 00:31:36,639
it rounded dash full

776
00:31:33,599 --> 00:31:39,038
and also make cursor dash pointer and

777
00:31:36,640 --> 00:31:41,199
finally on hover let's change the

778
00:31:39,038 --> 00:31:42,797
background to be

779
00:31:41,200 --> 00:31:44,240
2 5 4

780
00:31:42,798 --> 00:31:46,479
6 b

781
00:31:44,240 --> 00:31:48,640
d and let's save it

782
00:31:46,480 --> 00:31:50,720
there we go so now we have that hover

783
00:31:48,640 --> 00:31:52,479
effect of course doesn't look that good

784
00:31:50,720 --> 00:31:55,439
right now because we are zoomed in to

785
00:31:52,480 --> 00:31:57,919
300 percent but if we reset it you can

786
00:31:55,440 --> 00:32:01,279
notice that this is looking like a real

787
00:31:57,919 --> 00:32:03,279
navigation bar great now of course as

788
00:32:01,278 --> 00:32:05,678
you've noticed when we zoom it in this

789
00:32:03,278 --> 00:32:08,319
feels more like a mobile view and this

790
00:32:05,679 --> 00:32:10,320
is not good for mobile devices so let's

791
00:32:08,319 --> 00:32:13,359
implement the navigation bar for mobile

792
00:32:10,319 --> 00:32:16,158
devices below this ul we can create a

793
00:32:13,359 --> 00:32:20,319
div and that div is going to have a

794
00:32:16,159 --> 00:32:22,639
class name equal to flex and relative

795
00:32:20,319 --> 00:32:24,798
we'll also have to have a state that's

796
00:32:22,640 --> 00:32:27,039
going to indicate whether the mobile

797
00:32:24,798 --> 00:32:30,879
navigation bar is currently opened or

798
00:32:27,038 --> 00:32:34,238
not so we can say const toggle menu and

799
00:32:30,880 --> 00:32:38,880
set toggle menu that's going to be equal

800
00:32:34,240 --> 00:32:41,360
to react dot use state and let's simply

801
00:32:38,880 --> 00:32:43,439
pass false at the start it's going to be

802
00:32:41,359 --> 00:32:45,839
closed on mobile devices

803
00:32:43,440 --> 00:32:48,239
now inside of the div we can open a

804
00:32:45,839 --> 00:32:50,879
dynamic block of code and we're going to

805
00:32:48,240 --> 00:32:53,600
check if the toggle menu is currently

806
00:32:50,880 --> 00:32:56,479
turned on we can go into a new line and

807
00:32:53,599 --> 00:32:59,038
say if it is currently turned on meaning

808
00:32:56,480 --> 00:33:01,678
if part of this ternary operation

809
00:32:59,038 --> 00:33:05,358
in that case we can render the ai

810
00:33:01,679 --> 00:33:08,480
outline close icon as a self-closing tag

811
00:33:05,359 --> 00:33:11,599
and else we can render the hi

812
00:33:08,480 --> 00:33:14,159
menu alt4

813
00:33:11,599 --> 00:33:16,959
also as a self-closing tag

814
00:33:14,159 --> 00:33:19,1000
now we can hold the alt key and press on

815
00:33:16,960 --> 00:33:21,599
both lines right here and here because

816
00:33:20,000 --> 00:33:22,559
most of the properties are going to be

817
00:33:21,599 --> 00:33:25,358
similar

818
00:33:22,558 --> 00:33:28,397
font size is going to be 28

819
00:33:25,359 --> 00:33:30,878
then we're gonna have a class name equal

820
00:33:28,398 --> 00:33:33,199
to text dash white

821
00:33:30,880 --> 00:33:34,799
md column hidden

822
00:33:33,200 --> 00:33:36,720
cursor

823
00:33:34,798 --> 00:33:39,759
dash pointer

824
00:33:36,720 --> 00:33:41,359
and we also need to provide an on click

825
00:33:39,759 --> 00:33:43,118
where we're going to have a callback

826
00:33:41,359 --> 00:33:46,397
function and

827
00:33:43,119 --> 00:33:48,798
we can set the toggle menu to be equal

828
00:33:46,398 --> 00:33:51,518
to if it is currently open we want to

829
00:33:48,798 --> 00:33:54,238
set it to false or closed and if it's

830
00:33:51,519 --> 00:33:57,440
not we want to open it up so let's save

831
00:33:54,240 --> 00:33:59,759
this and let's also reload our page

832
00:33:57,440 --> 00:34:02,319
open up the inspect element and notice

833
00:33:59,759 --> 00:34:05,119
where our error is it looks like we

834
00:34:02,319 --> 00:34:07,517
haven't imported react in this file and

835
00:34:05,119 --> 00:34:10,559
that error is coming from here where

836
00:34:07,519 --> 00:34:12,959
we're trying to use use state recently

837
00:34:10,559 --> 00:34:16,318
with a new update of react you no longer

838
00:34:12,960 --> 00:34:18,399
have to import react in jsx files but it

839
00:34:16,320 --> 00:34:20,879
looks like that in most cases you'll

840
00:34:18,398 --> 00:34:23,279
definitely need to import either react

841
00:34:20,878 --> 00:34:27,759
or just some specific hooks like in this

842
00:34:23,280 --> 00:34:30,079
case use state from react there we go

843
00:34:27,760 --> 00:34:31,918
let's save it and there we go we have

844
00:34:30,079 --> 00:34:34,559
our navigation bar

845
00:34:31,918 --> 00:34:38,078
and if you click it it changes the state

846
00:34:34,559 --> 00:34:40,877
from the menu to the close icon so now

847
00:34:38,079 --> 00:34:43,678
when our menu is actually toggled on we

848
00:34:40,878 --> 00:34:46,238
need to be able to show it so just below

849
00:34:43,679 --> 00:34:49,199
we can open a new dynamic block and say

850
00:34:46,239 --> 00:34:51,357
if toggle menu and and

851
00:34:49,199 --> 00:34:53,998
meaning that the code inside of this is

852
00:34:51,358 --> 00:34:55,678
going to show only when the toggle menu

853
00:34:54,000 --> 00:34:57,520
is set to true

854
00:34:55,679 --> 00:35:00,400
we can show a ul

855
00:34:57,519 --> 00:35:03,837
inside of there we can render an li and

856
00:35:00,400 --> 00:35:08,480
this ally is going to have a class name

857
00:35:03,838 --> 00:35:10,959
equal to text dash xl w dash full and

858
00:35:08,480 --> 00:35:14,560
margin y dash 2.

859
00:35:10,960 --> 00:35:16,479
inside of there we want to show the ai

860
00:35:14,559 --> 00:35:18,398
outline close icon

861
00:35:16,480 --> 00:35:19,680
that's simply going to have an on click

862
00:35:18,400 --> 00:35:21,679
property

863
00:35:19,679 --> 00:35:24,478
with a callback function

864
00:35:21,679 --> 00:35:28,558
and we simply want to set the toggle

865
00:35:24,480 --> 00:35:30,239
menu to be equal to false like this

866
00:35:28,559 --> 00:35:33,039
there we go this is only if the

867
00:35:30,239 --> 00:35:35,279
navigation bar is opened and then below

868
00:35:33,039 --> 00:35:37,758
that we need to again loop through all

869
00:35:35,280 --> 00:35:40,159
the items so we can simply copy this

870
00:35:37,760 --> 00:35:43,279
where we're mapping our market exchange

871
00:35:40,159 --> 00:35:46,077
tutorials and wallets let's copy it and

872
00:35:43,280 --> 00:35:47,919
paste it just below this li since this

873
00:35:46,079 --> 00:35:51,040
is a mobile navigation bar we're going

874
00:35:47,920 --> 00:35:54,1000
to make use of that class props so let's

875
00:35:51,039 --> 00:35:59,519
pass class props is equal to

876
00:35:55,000 --> 00:36:00,719
mi-2 for margin and tax dash lg

877
00:35:59,519 --> 00:36:03,837
let's save it

878
00:36:00,719 --> 00:36:06,159
and there is our mobile navigation bar

879
00:36:03,838 --> 00:36:09,278
now it might be better to simply open up

880
00:36:06,159 --> 00:36:11,439
inspect and go to the mobile view there

881
00:36:09,280 --> 00:36:13,680
we go but now we can see both the

882
00:36:11,440 --> 00:36:15,839
desktop view and the mobile view we

883
00:36:13,679 --> 00:36:18,238
definitely have to fix that and i've

884
00:36:15,838 --> 00:36:20,559
noticed the error that i have in here

885
00:36:18,239 --> 00:36:23,038
instead of hidden i have an extra t at

886
00:36:20,559 --> 00:36:25,039
the end so if i remove it you'll notice

887
00:36:23,039 --> 00:36:27,758
that our desktop navigation bar

888
00:36:25,039 --> 00:36:29,918
disappears the only thing left to do is

889
00:36:27,760 --> 00:36:32,720
to provide the class names for our

890
00:36:29,920 --> 00:36:35,599
mobile navigation so just below right

891
00:36:32,719 --> 00:36:37,358
here we're gonna have a lot of classes

892
00:36:35,599 --> 00:36:40,160
for our ul

893
00:36:37,358 --> 00:36:43,199
so let's start by saying class names or

894
00:36:40,159 --> 00:36:46,159
class name is equal to a string

895
00:36:43,199 --> 00:36:47,199
and it's going to have the z index equal

896
00:36:46,159 --> 00:36:48,879
to 10

897
00:36:47,199 --> 00:36:52,077
it's going to be fixed

898
00:36:48,880 --> 00:36:54,399
the top property is going to be set to 0

899
00:36:52,079 --> 00:36:56,160
and also right property is going to be

900
00:36:54,400 --> 00:36:58,560
set to two

901
00:36:56,159 --> 00:37:00,559
padding is going to be set to three

902
00:36:58,559 --> 00:37:02,559
let's save it and see if that made any

903
00:37:00,559 --> 00:37:04,559
difference okay now you can see that

904
00:37:02,559 --> 00:37:08,719
this is coming on top of our navigation

905
00:37:04,559 --> 00:37:10,799
bar then we're going to have width dash

906
00:37:08,719 --> 00:37:11,838
and then in square brackets

907
00:37:10,800 --> 00:37:14,960
70

908
00:37:11,838 --> 00:37:17,198
vertical width like this there we go now

909
00:37:14,960 --> 00:37:19,599
it appears almost in the middle let's

910
00:37:17,199 --> 00:37:21,199
also set the entire height so height

911
00:37:19,599 --> 00:37:24,720
screen like this

912
00:37:21,199 --> 00:37:27,598
we can give it a shadow dash 2xl

913
00:37:24,719 --> 00:37:30,078
and on medium devices we can make it

914
00:37:27,599 --> 00:37:31,919
hidden then the list is going to be set

915
00:37:30,079 --> 00:37:34,319
to none because we don't want to have

916
00:37:31,920 --> 00:37:36,320
that list items and let's go into the

917
00:37:34,320 --> 00:37:39,358
new row it's going to be a bit easier to

918
00:37:36,320 --> 00:37:40,720
read and write let's make it flex flex

919
00:37:39,358 --> 00:37:42,639
dash call

920
00:37:40,719 --> 00:37:45,518
justify dash start

921
00:37:42,639 --> 00:37:47,278
items dash and there we go now we're

922
00:37:45,519 --> 00:37:50,479
starting to position it

923
00:37:47,280 --> 00:37:52,720
rounded dash md and we're gonna add a

924
00:37:50,480 --> 00:37:54,160
special class which is going to be our

925
00:37:52,719 --> 00:37:55,759
own gradient

926
00:37:54,159 --> 00:37:57,998
blue dash

927
00:37:55,760 --> 00:38:00,160
glass morphism

928
00:37:58,000 --> 00:38:02,240
that's going to give it that glossy

929
00:38:00,159 --> 00:38:05,357
glass effect

930
00:38:02,239 --> 00:38:09,357
let's make the text dash white and also

931
00:38:05,358 --> 00:38:11,439
animate dash slide dash in

932
00:38:09,358 --> 00:38:14,798
there we go so now this is looking more

933
00:38:11,440 --> 00:38:16,480
like a proper mobile navigation bar and

934
00:38:14,800 --> 00:38:19,200
it looks like it's not touching the

935
00:38:16,480 --> 00:38:22,720
right side so right here where we have

936
00:38:19,199 --> 00:38:25,598
right dash 2 let's put minus in front of

937
00:38:22,719 --> 00:38:28,799
it to move it to the right side this

938
00:38:25,599 --> 00:38:32,480
basically means -2 on the right side now

939
00:38:28,800 --> 00:38:35,519
if you close it that looks great and yes

940
00:38:32,480 --> 00:38:37,680
this is a proper mobile navigation bar

941
00:38:35,519 --> 00:38:39,597
later on once we have the gradients all

942
00:38:37,679 --> 00:38:41,837
over the place for services and

943
00:38:39,599 --> 00:38:44,160
transactions it's going to look even

944
00:38:41,838 --> 00:38:46,959
better because there won't be a white

945
00:38:44,159 --> 00:38:50,159
background behind it but that's going to

946
00:38:46,960 --> 00:38:52,639
be it for our mobile navigation bar

947
00:38:50,159 --> 00:38:55,439
now let's toggle off the device toolbar

948
00:38:52,639 --> 00:38:58,318
and this is how it looks like on desktop

949
00:38:55,440 --> 00:38:59,118
with that said our navigation bar is now

950
00:38:58,320 --> 00:39:01,040
done

951
00:38:59,119 --> 00:39:03,680
and we are ready for the main part of

952
00:39:01,039 --> 00:39:06,718
our show which is the welcome page with

953
00:39:03,679 --> 00:39:08,558
that great ethereum card and the ability

954
00:39:06,719 --> 00:39:10,879
to send transactions

955
00:39:08,559 --> 00:39:12,959
to start creating our welcome page we

956
00:39:10,880 --> 00:39:16,399
can control click into the welcome

957
00:39:12,960 --> 00:39:18,160
component we can start by importing a

958
00:39:16,400 --> 00:39:20,720
few icons

959
00:39:18,159 --> 00:39:21,759
by typing ai

960
00:39:20,719 --> 00:39:22,719
fill

961
00:39:21,760 --> 00:39:24,078
play

962
00:39:22,719 --> 00:39:26,078
circle

963
00:39:24,079 --> 00:39:29,760
and that's going to be coming from react

964
00:39:26,079 --> 00:39:33,119
dash icons forward slash ai

965
00:39:29,760 --> 00:39:34,399
then we can also import si

966
00:39:33,119 --> 00:39:37,680
ethereum

967
00:39:34,400 --> 00:39:40,839
and that's going to be coming from

968
00:39:37,679 --> 00:39:44,558
react dash icons forward slash

969
00:39:40,838 --> 00:39:47,357
si and finally we can import

970
00:39:44,559 --> 00:39:48,799
bs info

971
00:39:47,358 --> 00:39:50,639
circle

972
00:39:48,800 --> 00:39:52,880
and that's coming from

973
00:39:50,639 --> 00:39:55,358
react dash icons

974
00:39:52,880 --> 00:39:57,040
forward slash bs

975
00:39:55,358 --> 00:39:59,439
inside of here we're also going to

976
00:39:57,039 --> 00:40:01,838
import our loader component because

977
00:39:59,440 --> 00:40:03,760
later on something is going to load here

978
00:40:01,838 --> 00:40:04,718
so we can import that

979
00:40:03,760 --> 00:40:07,039
from

980
00:40:04,719 --> 00:40:09,358
dot slash that's it because we are

981
00:40:07,039 --> 00:40:11,598
already in the components folder

982
00:40:09,358 --> 00:40:13,278
now we can start with the jsx part of

983
00:40:11,599 --> 00:40:15,519
our welcome component

984
00:40:13,280 --> 00:40:17,999
we're going to have one div that's going

985
00:40:15,519 --> 00:40:20,639
to wrap everything right here

986
00:40:18,000 --> 00:40:22,160
that div is going to have a class name

987
00:40:20,639 --> 00:40:26,078
equal to flex

988
00:40:22,159 --> 00:40:27,918
w dash full justify dash center and

989
00:40:26,079 --> 00:40:30,559
items dash center

990
00:40:27,920 --> 00:40:31,679
this is centering the entire welcome

991
00:40:30,559 --> 00:40:34,078
part

992
00:40:31,679 --> 00:40:37,039
then we're going to have one more div

993
00:40:34,079 --> 00:40:38,880
that's going to have a class name equal

994
00:40:37,039 --> 00:40:41,838
to flex

995
00:40:38,880 --> 00:40:43,679
md flex dash row

996
00:40:41,838 --> 00:40:45,519
flex dash call

997
00:40:43,679 --> 00:40:47,837
items start

998
00:40:45,519 --> 00:40:50,238
justify dash between

999
00:40:47,838 --> 00:40:54,559
md padding 20

1000
00:40:50,239 --> 00:40:56,479
padding y 12 and padding x4

1001
00:40:54,559 --> 00:40:57,679
there we go you can see it provided some

1002
00:40:56,480 --> 00:41:00,399
paddings

1003
00:40:57,679 --> 00:41:03,278
and there is one final div inside of

1004
00:41:00,400 --> 00:41:05,598
that div that's going to have a class

1005
00:41:03,280 --> 00:41:07,358
name equal to flex

1006
00:41:05,599 --> 00:41:09,358
flex dash one

1007
00:41:07,358 --> 00:41:14,077
justify dash start

1008
00:41:09,358 --> 00:41:16,798
flex dash call and md mr which is margin

1009
00:41:14,079 --> 00:41:20,399
right 10 there we go

1010
00:41:16,800 --> 00:41:23,040
now inside of there we can create an h1

1011
00:41:20,400 --> 00:41:25,199
this h1 is simply going to say something

1012
00:41:23,039 --> 00:41:27,439
like send crypto

1013
00:41:25,199 --> 00:41:30,798
and then we can have a br tag

1014
00:41:27,440 --> 00:41:32,959
and say across the world

1015
00:41:30,800 --> 00:41:35,200
if we save it it should be somewhere

1016
00:41:32,960 --> 00:41:37,920
around here but it's black so it's not

1017
00:41:35,199 --> 00:41:39,679
easily visible there we go so let's

1018
00:41:37,920 --> 00:41:43,439
provide some class names

1019
00:41:39,679 --> 00:41:46,719
we can say class name is equal to text

1020
00:41:43,440 --> 00:41:47,598
dash 3xl that's going to make it a lot

1021
00:41:46,719 --> 00:41:50,558
bigger

1022
00:41:47,599 --> 00:41:53,200
on smaller devices we can say text dash

1023
00:41:50,559 --> 00:41:54,398
5 xl to make it even bigger on small

1024
00:41:53,199 --> 00:41:56,078
devices

1025
00:41:54,400 --> 00:41:56,960
we can make it text

1026
00:41:56,079 --> 00:41:59,838
white

1027
00:41:56,960 --> 00:42:03,280
give it a text gradient

1028
00:41:59,838 --> 00:42:05,759
and finally padding y dash one

1029
00:42:03,280 --> 00:42:07,039
there we go this is already looking so

1030
00:42:05,760 --> 00:42:10,720
much better

1031
00:42:07,039 --> 00:42:12,638
now below that h1 we can have a padding

1032
00:42:10,719 --> 00:42:17,438
that padding is going to say something

1033
00:42:12,639 --> 00:42:19,118
like explore the crypto world buy and

1034
00:42:17,440 --> 00:42:23,199
sell crypto

1035
00:42:19,119 --> 00:42:25,760
currencies easily on crypto this is just

1036
00:42:23,199 --> 00:42:28,159
some placeholder text again we have to

1037
00:42:25,760 --> 00:42:31,279
add some class names so we can say class

1038
00:42:28,159 --> 00:42:33,199
name is equal to text dash left

1039
00:42:31,280 --> 00:42:35,119
margin top dash five

1040
00:42:33,199 --> 00:42:38,239
text dash white

1041
00:42:35,119 --> 00:42:39,680
font dash light on medium devices width

1042
00:42:38,239 --> 00:42:43,279
is going to be

1043
00:42:39,679 --> 00:42:46,478
9 divided by 12 and on all other devices

1044
00:42:43,280 --> 00:42:49,680
it's going to be w dash 11 out of 12

1045
00:42:46,480 --> 00:42:51,598
spaces and we can also say the text base

1046
00:42:49,679 --> 00:42:54,398
is going to be the size

1047
00:42:51,599 --> 00:42:57,440
there we go now we have the left part of

1048
00:42:54,400 --> 00:43:00,239
our welcome section now below that b tag

1049
00:42:57,440 --> 00:43:02,480
we're going to have a button that button

1050
00:43:00,239 --> 00:43:04,317
is going to have a type

1051
00:43:02,480 --> 00:43:06,640
equal to button

1052
00:43:04,318 --> 00:43:08,718
it's also going to have an on click and

1053
00:43:06,639 --> 00:43:10,959
on click we want to connect to the

1054
00:43:08,719 --> 00:43:13,278
wallet so we're going to have a connect

1055
00:43:10,960 --> 00:43:14,399
wallet function which we can create

1056
00:43:13,280 --> 00:43:17,280
right here

1057
00:43:14,400 --> 00:43:19,919
const connect wallet is going to be a

1058
00:43:17,280 --> 00:43:21,999
basic arrow function again it's not

1059
00:43:19,920 --> 00:43:23,199
going to do anything yet but later on

1060
00:43:22,000 --> 00:43:24,720
we're going to implement the

1061
00:43:23,199 --> 00:43:27,118
functionality

1062
00:43:24,719 --> 00:43:29,999
now this button is also going to have a

1063
00:43:27,119 --> 00:43:32,479
few class names so we can say class name

1064
00:43:30,000 --> 00:43:36,719
is equal to flex it's also going to be

1065
00:43:32,480 --> 00:43:38,720
flex dash row justify dash center

1066
00:43:36,719 --> 00:43:42,078
items dash center

1067
00:43:38,719 --> 00:43:45,597
margin y meaning on top and bottom five

1068
00:43:42,079 --> 00:43:49,439
b g dash and then in square brackets

1069
00:43:45,599 --> 00:43:52,240
hash two nine five two e three that's

1070
00:43:49,440 --> 00:43:56,560
that blue color padding dash three

1071
00:43:52,239 --> 00:43:59,117
rounded dash full cursor dash pointer

1072
00:43:56,559 --> 00:44:01,999
and then on hover we want to change the

1073
00:43:59,119 --> 00:44:04,319
background color bg dash

1074
00:44:02,000 --> 00:44:07,118
in square brackets that's going to be

1075
00:44:04,318 --> 00:44:10,239
hash 2 5 4

1076
00:44:07,119 --> 00:44:12,319
6 b d and of course to be able to see

1077
00:44:10,239 --> 00:44:14,317
something we have to write something

1078
00:44:12,318 --> 00:44:17,279
inside of that button and that's going

1079
00:44:14,318 --> 00:44:20,077
to be connect wallet of course we need

1080
00:44:17,280 --> 00:44:22,720
to make our text wide so let's also wrap

1081
00:44:20,079 --> 00:44:23,599
our connect wallet in a paragraph like

1082
00:44:22,719 --> 00:44:26,078
this

1083
00:44:23,599 --> 00:44:29,759
and that paragraph is going to have a

1084
00:44:26,079 --> 00:44:33,279
class name equal to text dash white

1085
00:44:29,760 --> 00:44:36,078
text dash base and font dash semi bold

1086
00:44:33,280 --> 00:44:38,159
there we go looking better already now

1087
00:44:36,079 --> 00:44:41,279
below that button we're going to create

1088
00:44:38,159 --> 00:44:44,077
a div that's going to serve as a grid

1089
00:44:41,280 --> 00:44:47,520
for all of our features so right here we

1090
00:44:44,079 --> 00:44:51,279
can say class name is equal to grid on

1091
00:44:47,519 --> 00:44:54,639
small devices grid dash calls dash 3

1092
00:44:51,280 --> 00:44:58,720
usually grid dash calls dash 2

1093
00:44:54,639 --> 00:45:00,959
with dash 4 and margin top is 10.

1094
00:44:58,719 --> 00:45:03,679
now we can create a div for each

1095
00:45:00,960 --> 00:45:06,160
specific cell so the first div is going

1096
00:45:03,679 --> 00:45:08,238
to have the class name equal to

1097
00:45:06,159 --> 00:45:09,438
and it's going to be a dynamic block

1098
00:45:08,239 --> 00:45:10,558
like this

1099
00:45:09,440 --> 00:45:14,358
rounded

1100
00:45:10,559 --> 00:45:17,999
dash tl which stands for top left dash

1101
00:45:14,358 --> 00:45:20,318
2xl and then we also want to provide a

1102
00:45:18,000 --> 00:45:21,359
variable which is going to be

1103
00:45:20,318 --> 00:45:23,758
common

1104
00:45:21,358 --> 00:45:26,318
styles like this

1105
00:45:23,760 --> 00:45:28,559
this common styles is going to be just a

1106
00:45:26,318 --> 00:45:31,279
string of common styles but it's going

1107
00:45:28,559 --> 00:45:33,597
to be quite long so we're simply going

1108
00:45:31,280 --> 00:45:36,959
to type it out by hand at the top and

1109
00:45:33,599 --> 00:45:40,318
import it later on so const common

1110
00:45:36,960 --> 00:45:41,920
styles is equal to a string and again

1111
00:45:40,318 --> 00:45:44,318
just you don't have to write everything

1112
00:45:41,920 --> 00:45:46,559
by hand and copy what i do i'm simply

1113
00:45:44,318 --> 00:45:48,558
going to paste the styles right here

1114
00:45:46,559 --> 00:45:50,879
it's going to have some minimum height

1115
00:45:48,559 --> 00:45:53,438
paddings and setting up the flex

1116
00:45:50,880 --> 00:45:55,439
containers with the borders the link to

1117
00:45:53,440 --> 00:45:57,920
this line is also going to be in a

1118
00:45:55,440 --> 00:45:59,760
github gist down below and as soon as

1119
00:45:57,920 --> 00:46:02,479
you save it you'll notice that we have

1120
00:45:59,760 --> 00:46:04,920
our first cell of our grid inside of

1121
00:46:02,480 --> 00:46:07,760
there we can say something like

1122
00:46:04,920 --> 00:46:09,759
reliability now below that we can create

1123
00:46:07,760 --> 00:46:12,078
one more div that's going to have a

1124
00:46:09,760 --> 00:46:15,359
class name equal to

1125
00:46:12,079 --> 00:46:18,319
common styles again so we're reusing the

1126
00:46:15,358 --> 00:46:21,598
same styles and in here we can say

1127
00:46:18,318 --> 00:46:23,279
security now below that we can have one

1128
00:46:21,599 --> 00:46:25,839
more div which we can basically

1129
00:46:23,280 --> 00:46:27,999
replicate from here that div is going to

1130
00:46:25,838 --> 00:46:30,318
say ethereum

1131
00:46:28,000 --> 00:46:34,000
and instead of rounded top left it's

1132
00:46:30,318 --> 00:46:35,279
going to be rounded top right or tr

1133
00:46:34,000 --> 00:46:37,599
there we go

1134
00:46:35,280 --> 00:46:42,959
then we can duplicate that below the

1135
00:46:37,599 --> 00:46:45,200
bottom one can say web 3.0 like this

1136
00:46:42,960 --> 00:46:48,319
this doesn't have to be uppercased and

1137
00:46:45,199 --> 00:46:49,598
this is going to be rounded bottom left

1138
00:46:48,318 --> 00:46:51,597
like this

1139
00:46:49,599 --> 00:46:54,959
then we can duplicate this one where it

1140
00:46:51,599 --> 00:46:58,240
says security there we go put it below

1141
00:46:54,960 --> 00:47:00,078
and it's simply going to say low fees

1142
00:46:58,239 --> 00:47:03,038
and the last one we need we're going to

1143
00:47:00,079 --> 00:47:05,040
duplicate the web 3.0 and just change

1144
00:47:03,039 --> 00:47:07,678
this to bottom right

1145
00:47:05,039 --> 00:47:09,519
now we have our grid of features where

1146
00:47:07,679 --> 00:47:11,919
we're mentioning all of the specific

1147
00:47:09,519 --> 00:47:14,639
services that we provide

1148
00:47:11,920 --> 00:47:17,519
and i've almost missed it the last cell

1149
00:47:14,639 --> 00:47:20,557
is going to say blockchain now below

1150
00:47:17,519 --> 00:47:22,959
three of these divs so right here we can

1151
00:47:20,559 --> 00:47:26,078
create a new div and everything inside

1152
00:47:22,960 --> 00:47:28,960
of here is going to be the right side of

1153
00:47:26,079 --> 00:47:31,439
our desktop welcome view meaning our

1154
00:47:28,960 --> 00:47:32,640
form and that nice card that you saw the

1155
00:47:31,440 --> 00:47:35,040
start

1156
00:47:32,639 --> 00:47:36,959
this here is what i'm referring to this

1157
00:47:35,039 --> 00:47:39,039
is the finished application and now

1158
00:47:36,960 --> 00:47:41,118
we're building this card component which

1159
00:47:39,039 --> 00:47:43,519
is looking pretty great but that's

1160
00:47:41,119 --> 00:47:45,119
mostly just a div with some gradients

1161
00:47:43,519 --> 00:47:48,078
and then we're going to implement this

1162
00:47:45,119 --> 00:47:51,119
form just below so let's go back and

1163
00:47:48,079 --> 00:47:53,598
start implementing that card element

1164
00:47:51,119 --> 00:47:56,079
first we have to create a few divs that

1165
00:47:53,599 --> 00:47:59,759
are going to separate our left layout

1166
00:47:56,079 --> 00:48:03,119
from the right layout so let's say div

1167
00:47:59,760 --> 00:48:05,200
with a class name is equal to flex

1168
00:48:03,119 --> 00:48:06,480
flex dash call

1169
00:48:05,199 --> 00:48:10,317
dash one

1170
00:48:06,480 --> 00:48:12,319
items dash center justify dash start

1171
00:48:10,318 --> 00:48:14,879
w dash full

1172
00:48:12,318 --> 00:48:16,159
then we're gonna have the md

1173
00:48:14,880 --> 00:48:18,319
empty

1174
00:48:16,159 --> 00:48:20,639
zero meaning on medium devices that

1175
00:48:18,318 --> 00:48:23,358
margin top is going to be 0 and then

1176
00:48:20,639 --> 00:48:24,478
usually margin top is going to be set to

1177
00:48:23,358 --> 00:48:26,238
10.

1178
00:48:24,480 --> 00:48:29,279
of course we cannot see any differences

1179
00:48:26,239 --> 00:48:31,758
because our div is empty so let's create

1180
00:48:29,280 --> 00:48:34,959
the inner div right here

1181
00:48:31,760 --> 00:48:36,319
that div is going to have a class name

1182
00:48:34,960 --> 00:48:38,079
equal to

1183
00:48:36,318 --> 00:48:40,318
padding dash 3

1184
00:48:38,079 --> 00:48:42,479
justify dash and

1185
00:48:40,318 --> 00:48:45,439
items start

1186
00:48:42,480 --> 00:48:47,680
flex dash column or call

1187
00:48:45,440 --> 00:48:51,760
rounded xl

1188
00:48:47,679 --> 00:48:54,318
height is going to be set to 40 so h40

1189
00:48:51,760 --> 00:48:56,559
on small devices the width is going to

1190
00:48:54,318 --> 00:48:58,718
be set to 72

1191
00:48:56,559 --> 00:48:59,599
usually the width is going to be set to

1192
00:48:58,719 --> 00:49:01,919
full

1193
00:48:59,599 --> 00:49:04,240
margin y meaning on top and bottom is

1194
00:49:01,920 --> 00:49:05,1000
going to be five we have that special

1195
00:49:04,239 --> 00:49:09,838
class called if

1196
00:49:06,000 --> 00:49:10,719
dash card and finally we have that white

1197
00:49:09,838 --> 00:49:14,078
dash

1198
00:49:10,719 --> 00:49:17,398
glass morphism there we go and these are

1199
00:49:14,079 --> 00:49:20,160
the classes coming from our initial

1200
00:49:17,400 --> 00:49:22,480
index.css you can notice that in here we

1201
00:49:20,159 --> 00:49:25,038
have that gradient welcome gradient

1202
00:49:22,480 --> 00:49:27,839
services as well as the white glass

1203
00:49:25,039 --> 00:49:30,077
morphism and that ethereum card and

1204
00:49:27,838 --> 00:49:32,557
don't worry this wasn't written by hand

1205
00:49:30,079 --> 00:49:34,800
there are a lot of online free services

1206
00:49:32,559 --> 00:49:37,039
that allow you to create gradients for

1207
00:49:34,800 --> 00:49:40,078
you with that said now we have this

1208
00:49:37,039 --> 00:49:42,878
great looking ethereum card inside of it

1209
00:49:40,079 --> 00:49:45,119
we can create a new div and this div is

1210
00:49:42,880 --> 00:49:48,240
going to have a class name

1211
00:49:45,119 --> 00:49:50,079
flex justify dash between

1212
00:49:48,239 --> 00:49:53,439
flex dash call

1213
00:49:50,079 --> 00:49:55,200
w dash full and height dash full

1214
00:49:53,440 --> 00:49:57,839
we're basically making it a flex

1215
00:49:55,199 --> 00:50:00,317
container now inside of there we can

1216
00:49:57,838 --> 00:50:01,679
create a new div that's going to have a

1217
00:50:00,318 --> 00:50:06,558
class name

1218
00:50:01,679 --> 00:50:10,639
flex justify dash between and items dash

1219
00:50:06,559 --> 00:50:12,640
start finally we can have one final div

1220
00:50:10,639 --> 00:50:15,358
that's going to be a wrapper for the

1221
00:50:12,639 --> 00:50:19,039
icon and that div is going to have a

1222
00:50:15,358 --> 00:50:20,718
class name equal to w dash 10

1223
00:50:19,039 --> 00:50:23,117
height dash 10

1224
00:50:20,719 --> 00:50:25,118
rounded dash full

1225
00:50:23,119 --> 00:50:27,359
border dash 2

1226
00:50:25,119 --> 00:50:29,200
border dash white

1227
00:50:27,358 --> 00:50:31,358
there we go you can immediately notice

1228
00:50:29,199 --> 00:50:32,799
it on the right side and it's also going

1229
00:50:31,358 --> 00:50:35,838
to be flex

1230
00:50:32,800 --> 00:50:37,118
justify dash center and items dash

1231
00:50:35,838 --> 00:50:38,959
center

1232
00:50:37,119 --> 00:50:40,558
inside of it we're going to put that

1233
00:50:38,960 --> 00:50:42,640
ethereum icon

1234
00:50:40,559 --> 00:50:44,240
so we can say s i

1235
00:50:42,639 --> 00:50:46,879
ethereum

1236
00:50:44,239 --> 00:50:50,557
and we can give it a font size

1237
00:50:46,880 --> 00:50:52,838
like this equal to 21 and color is going

1238
00:50:50,559 --> 00:50:56,799
to be equal to

1239
00:50:52,838 --> 00:50:59,597
fff and there we go now we added that

1240
00:50:56,800 --> 00:51:03,439
ethereum logo to the card now just below

1241
00:50:59,599 --> 00:51:05,919
this div we can also put the bs info

1242
00:51:03,440 --> 00:51:08,720
circle which is another icon

1243
00:51:05,920 --> 00:51:11,040
it's going to have a font size

1244
00:51:08,719 --> 00:51:13,597
equal to 17

1245
00:51:11,039 --> 00:51:17,678
and it's also going to have a color

1246
00:51:13,599 --> 00:51:20,720
equal to fff there we go now below this

1247
00:51:17,679 --> 00:51:23,679
div we're gonna have one more div

1248
00:51:20,719 --> 00:51:25,679
this div won't have any class names

1249
00:51:23,679 --> 00:51:27,118
but inside of there we can render a

1250
00:51:25,679 --> 00:51:29,598
paragraph

1251
00:51:27,119 --> 00:51:31,279
that paragraph is going to have a class

1252
00:51:29,599 --> 00:51:32,240
name of text

1253
00:51:31,280 --> 00:51:36,240
white

1254
00:51:32,239 --> 00:51:38,878
font dash light and text sm inside of

1255
00:51:36,239 --> 00:51:41,038
there later on we're going to render the

1256
00:51:38,880 --> 00:51:43,679
address of the blockchain wallet that's

1257
00:51:41,039 --> 00:51:46,399
currently connected to our application

1258
00:51:43,679 --> 00:51:50,159
so right here we can now simply say

1259
00:51:46,400 --> 00:51:52,800
0x and then put some random letters dot

1260
00:51:50,159 --> 00:51:54,958
and then close it again this is how

1261
00:51:52,800 --> 00:51:57,439
usual addresses look like

1262
00:51:54,960 --> 00:51:59,440
they are written in hexadecimal and

1263
00:51:57,440 --> 00:52:02,239
finally we can duplicate this paragraph

1264
00:51:59,440 --> 00:52:05,119
below it's going to have text white

1265
00:52:02,239 --> 00:52:08,639
font is going to be semi-bold

1266
00:52:05,119 --> 00:52:11,599
we can also put the text to be lg and

1267
00:52:08,639 --> 00:52:14,398
give it a margin top 1. inside of there

1268
00:52:11,599 --> 00:52:16,160
we can simply say ethereum and for now

1269
00:52:14,400 --> 00:52:18,558
we can just say address here i think

1270
00:52:16,159 --> 00:52:21,279
that looks a bit better there we go

1271
00:52:18,559 --> 00:52:24,240
great so now we have the top part of our

1272
00:52:21,280 --> 00:52:26,318
form which is this great looking card

1273
00:52:24,239 --> 00:52:29,357
now we are ready to actually implement

1274
00:52:26,318 --> 00:52:32,478
the form and to do that we have to go a

1275
00:52:29,358 --> 00:52:35,518
few divs down so that's going to be 1 2

1276
00:52:32,480 --> 00:52:38,720
3 and now right here we're going to

1277
00:52:35,519 --> 00:52:41,759
create one more div so this div is going

1278
00:52:38,719 --> 00:52:44,398
to be our form this div is going to have

1279
00:52:41,760 --> 00:52:48,399
a class name equal to

1280
00:52:44,400 --> 00:52:51,839
padding dash 5 or p-5 on small devices

1281
00:52:48,400 --> 00:52:53,680
the width is going to be set to 96

1282
00:52:51,838 --> 00:52:56,318
w dash full

1283
00:52:53,679 --> 00:52:58,719
flex flex dash call

1284
00:52:56,318 --> 00:53:00,478
justify dash start

1285
00:52:58,719 --> 00:53:04,719
items center

1286
00:53:00,480 --> 00:53:07,760
and blue dash glass morphism

1287
00:53:04,719 --> 00:53:08,959
there we go you can notice that blue div

1288
00:53:07,760 --> 00:53:11,119
right there

1289
00:53:08,960 --> 00:53:12,319
but now we have to add some inputs

1290
00:53:11,119 --> 00:53:14,319
inside of it

1291
00:53:12,318 --> 00:53:17,039
and we're gonna have a lot of similar

1292
00:53:14,318 --> 00:53:19,279
inputs so it might simply be easier to

1293
00:53:17,039 --> 00:53:20,878
create a new component which is going to

1294
00:53:19,280 --> 00:53:23,199
form our input

1295
00:53:20,880 --> 00:53:25,759
so right here at the top we can create

1296
00:53:23,199 --> 00:53:29,357
an input component which is going to be

1297
00:53:25,760 --> 00:53:31,1000
a basic arrow function and that input is

1298
00:53:29,358 --> 00:53:34,239
instantly going to return some jsx code

1299
00:53:32,000 --> 00:53:35,919
so instead of curly braces we can just

1300
00:53:34,239 --> 00:53:39,758
use parentheses here

1301
00:53:35,920 --> 00:53:42,400
and we can create a basic html input tag

1302
00:53:39,760 --> 00:53:43,359
that input is going to have a place

1303
00:53:42,400 --> 00:53:45,759
holder

1304
00:53:43,358 --> 00:53:47,598
and a placeholder is going to be equal

1305
00:53:45,760 --> 00:53:49,760
to placeholder

1306
00:53:47,599 --> 00:53:52,160
so you might be wondering where is this

1307
00:53:49,760 --> 00:53:54,479
placeholder variable coming from

1308
00:53:52,159 --> 00:53:55,679
well we're going to pass it through the

1309
00:53:54,480 --> 00:53:57,118
props

1310
00:53:55,679 --> 00:53:58,317
so what are going to be some other

1311
00:53:57,119 --> 00:53:59,440
things that we're going to pass through

1312
00:53:58,318 --> 00:54:02,238
props

1313
00:53:59,440 --> 00:54:04,640
well let's try to create a basic version

1314
00:54:02,239 --> 00:54:06,399
of our input component

1315
00:54:04,639 --> 00:54:09,278
it's going to look like this it's going

1316
00:54:06,400 --> 00:54:11,598
to be a self-closing input tag

1317
00:54:09,280 --> 00:54:13,039
we're going to give it a placeholder is

1318
00:54:11,599 --> 00:54:15,519
equal to

1319
00:54:13,039 --> 00:54:18,317
and our first field is going to be the

1320
00:54:15,519 --> 00:54:20,158
address 2. so who are we sending the

1321
00:54:18,318 --> 00:54:22,959
ethereum to

1322
00:54:20,159 --> 00:54:26,479
then it has to have a name equal to

1323
00:54:22,960 --> 00:54:28,559
address to in a camel case like this

1324
00:54:26,480 --> 00:54:31,119
then it has to have a type which is

1325
00:54:28,559 --> 00:54:33,680
going to be equal to text and finally it

1326
00:54:31,119 --> 00:54:37,200
has to have a handle change which is

1327
00:54:33,679 --> 00:54:39,198
going to be equal to handle change

1328
00:54:37,199 --> 00:54:41,199
that handle change is a function that we

1329
00:54:39,199 --> 00:54:43,357
haven't yet created so for now i'm

1330
00:54:41,199 --> 00:54:45,838
simply going to put a basic callback

1331
00:54:43,358 --> 00:54:47,439
function and as you can see we have our

1332
00:54:45,838 --> 00:54:49,758
input right here

1333
00:54:47,440 --> 00:54:52,400
now we know which props are we passing

1334
00:54:49,760 --> 00:54:54,479
so we can get all of them right here

1335
00:54:52,400 --> 00:54:55,359
we're gonna get the placeholder

1336
00:54:54,480 --> 00:54:56,240
name

1337
00:54:55,358 --> 00:54:59,518
type

1338
00:54:56,239 --> 00:55:02,557
value and handle change below the

1339
00:54:59,519 --> 00:55:05,198
placeholder we can say type is equal to

1340
00:55:02,559 --> 00:55:09,200
type we can also set the step of our

1341
00:55:05,199 --> 00:55:11,598
number input to be 0.0001

1342
00:55:09,199 --> 00:55:14,159
because ethereum values are incredibly

1343
00:55:11,599 --> 00:55:16,559
high so even the smallest of amounts

1344
00:55:14,159 --> 00:55:19,758
makes a huge difference then we need to

1345
00:55:16,559 --> 00:55:22,480
pass in the value equal to value

1346
00:55:19,760 --> 00:55:24,880
and then we are also going to pass d on

1347
00:55:22,480 --> 00:55:27,520
change which is going to be equal to a

1348
00:55:24,880 --> 00:55:30,399
callback function where we are going to

1349
00:55:27,519 --> 00:55:32,557
get an event right here and we can call

1350
00:55:30,400 --> 00:55:35,839
that handle change that we're passing

1351
00:55:32,559 --> 00:55:38,719
through props and pass the name and the

1352
00:55:35,838 --> 00:55:41,919
event like so and finally let's give

1353
00:55:38,719 --> 00:55:44,159
some class names to this input classname

1354
00:55:41,920 --> 00:55:47,679
is equal to and that's going to be a

1355
00:55:44,159 --> 00:55:50,077
string of margin y dash 2.

1356
00:55:47,679 --> 00:55:52,478
now let's save it right now it looks bad

1357
00:55:50,079 --> 00:55:55,119
so let's add a few more classes

1358
00:55:52,480 --> 00:55:56,239
w dash full this is going to make it

1359
00:55:55,119 --> 00:55:58,960
extend

1360
00:55:56,239 --> 00:56:00,317
rounded dash small this is going to make

1361
00:55:58,960 --> 00:56:03,920
it rounded a bit

1362
00:56:00,318 --> 00:56:06,558
padding dash 2 to apply some padding

1363
00:56:03,920 --> 00:56:10,240
outline dash none

1364
00:56:06,559 --> 00:56:12,799
bg dash transparent there we go

1365
00:56:10,239 --> 00:56:15,679
text white

1366
00:56:12,798 --> 00:56:17,597
border dash none

1367
00:56:15,679 --> 00:56:21,597
text dash small

1368
00:56:17,599 --> 00:56:23,440
white dash glass morphism

1369
00:56:21,599 --> 00:56:26,079
and that's going to be it

1370
00:56:23,440 --> 00:56:27,040
our input immediately looks so much

1371
00:56:26,079 --> 00:56:28,959
better

1372
00:56:27,039 --> 00:56:31,279
and you can see how much these utility

1373
00:56:28,960 --> 00:56:33,359
classes that tailin provides us make

1374
00:56:31,280 --> 00:56:35,520
things easy for us

1375
00:56:33,358 --> 00:56:37,758
now we can duplicate this input a few

1376
00:56:35,519 --> 00:56:39,919
more times just below that's the only

1377
00:56:37,760 --> 00:56:41,760
reason why we created a new custom

1378
00:56:39,920 --> 00:56:45,439
component in the first place

1379
00:56:41,760 --> 00:56:48,319
so one two three we want to have four of

1380
00:56:45,440 --> 00:56:51,279
these inputs our second input is going

1381
00:56:48,318 --> 00:56:53,758
to be the amount of ethereum so we can

1382
00:56:51,280 --> 00:56:56,240
say amount in ether

1383
00:56:53,760 --> 00:56:58,720
and that's going to be amount which is

1384
00:56:56,239 --> 00:57:00,878
the name of our input and the type is

1385
00:56:58,719 --> 00:57:03,039
going to be set to number

1386
00:57:00,880 --> 00:57:05,1000
the handle change we can leave empty for

1387
00:57:03,039 --> 00:57:08,479
now then the third input is going to be

1388
00:57:06,000 --> 00:57:11,440
the keyword in parentheses this is going

1389
00:57:08,480 --> 00:57:13,760
to be a gif or gif however we want to

1390
00:57:11,440 --> 00:57:17,119
pronounce it and then that's going to be

1391
00:57:13,760 --> 00:57:18,720
the keyword name and then our last field

1392
00:57:17,119 --> 00:57:19,999
is going to be

1393
00:57:18,719 --> 00:57:21,038
enter

1394
00:57:20,000 --> 00:57:22,480
message

1395
00:57:21,039 --> 00:57:24,958
that's going to be the message we want

1396
00:57:22,480 --> 00:57:27,358
to transfer over the blockchain

1397
00:57:24,960 --> 00:57:29,759
and the name is going to be the message

1398
00:57:27,358 --> 00:57:32,479
type is going to be text

1399
00:57:29,760 --> 00:57:33,920
and there we go this is already looking

1400
00:57:32,480 --> 00:57:36,399
so much better

1401
00:57:33,920 --> 00:57:38,880
below of our inputs we're going to have

1402
00:57:36,400 --> 00:57:41,440
one more div but this is going to be a

1403
00:57:38,880 --> 00:57:45,118
self-closing div it's going to have a

1404
00:57:41,440 --> 00:57:48,239
class name equal to h dash

1405
00:57:45,119 --> 00:57:49,439
and then in square brackets 1px like

1406
00:57:48,239 --> 00:57:51,038
this

1407
00:57:49,440 --> 00:57:52,680
w dash full

1408
00:57:51,039 --> 00:57:54,398
bg dash

1409
00:57:52,679 --> 00:57:57,039
gray-400 and

1410
00:57:54,400 --> 00:57:59,839
margin y dash 2. this is going to be a

1411
00:57:57,039 --> 00:58:02,239
line just like this one and right here

1412
00:57:59,838 --> 00:58:05,038
just below that we can have the is

1413
00:58:02,239 --> 00:58:08,078
loading state so if it is loading

1414
00:58:05,039 --> 00:58:10,798
then we want to show something like this

1415
00:58:08,079 --> 00:58:12,479
else we want to show something else

1416
00:58:10,798 --> 00:58:14,557
we don't have access to this is loading

1417
00:58:12,480 --> 00:58:16,160
variable yet so let's simply try setting

1418
00:58:14,559 --> 00:58:18,240
this to true

1419
00:58:16,159 --> 00:58:20,239
and then we're going to render out our

1420
00:58:18,239 --> 00:58:21,998
loader like this

1421
00:58:20,239 --> 00:58:24,239
if we save that you're gonna notice that

1422
00:58:22,000 --> 00:58:26,799
we also have to type something in here

1423
00:58:24,239 --> 00:58:28,239
so for now let's simply put that as a

1424
00:58:26,798 --> 00:58:31,038
div

1425
00:58:28,239 --> 00:58:33,357
and i think in here with dark flares it

1426
00:58:31,039 --> 00:58:36,399
does say a loader later on we're going

1427
00:58:33,358 --> 00:58:38,878
to implement that loader component but

1428
00:58:36,400 --> 00:58:39,839
now if we are not loading so if it's

1429
00:58:38,880 --> 00:58:42,558
false

1430
00:58:39,838 --> 00:58:44,879
then we want to show a button

1431
00:58:42,559 --> 00:58:47,520
and that button is going to have a type

1432
00:58:44,880 --> 00:58:49,280
which is going to be equal to button

1433
00:58:47,519 --> 00:58:51,358
that button is also going to have an

1434
00:58:49,280 --> 00:58:52,400
onclick property which is going to be

1435
00:58:51,358 --> 00:58:53,438
handle

1436
00:58:52,400 --> 00:58:55,118
submit

1437
00:58:53,440 --> 00:58:57,118
and this is going to be a function that

1438
00:58:55,119 --> 00:59:00,798
we need to create just at the top so

1439
00:58:57,119 --> 00:59:03,760
right here let's say const handle submit

1440
00:59:00,798 --> 00:59:07,439
is a functional component right here

1441
00:59:03,760 --> 00:59:09,760
that button is going to say send now

1442
00:59:07,440 --> 00:59:10,960
like this and let's give it some class

1443
00:59:09,760 --> 00:59:13,440
names

1444
00:59:10,960 --> 00:59:15,599
so class name is going to be equal to

1445
00:59:13,440 --> 00:59:17,359
text dash white

1446
00:59:15,599 --> 00:59:19,280
there we go send now

1447
00:59:17,358 --> 00:59:22,239
w dash full

1448
00:59:19,280 --> 00:59:25,280
margin top or mt-2

1449
00:59:22,239 --> 00:59:27,838
border dash and then in square brackets

1450
00:59:25,280 --> 00:59:28,880
1 px

1451
00:59:27,838 --> 00:59:29,598
like this

1452
00:59:28,880 --> 00:59:30,799
p

1453
00:59:29,599 --> 00:59:33,680
2

1454
00:59:30,798 --> 00:59:35,597
border dash and then we have to type a

1455
00:59:33,679 --> 00:59:37,759
color so let's do

1456
00:59:35,599 --> 00:59:41,839
square brackets hash

1457
00:59:37,760 --> 00:59:44,798
3d4 f7c like this

1458
00:59:41,838 --> 00:59:47,679
let's make it rounded dash full

1459
00:59:44,798 --> 00:59:49,439
and finally every button needs a cursor

1460
00:59:47,679 --> 00:59:50,958
dash pointer

1461
00:59:49,440 --> 00:59:53,999
there we go

1462
00:59:50,960 --> 00:59:57,200
that is our send now button

1463
00:59:54,000 --> 00:59:59,200
so now let's also implement this loader

1464
00:59:57,199 --> 01:00:01,918
component we can do that by doing a

1465
00:59:59,199 --> 01:00:04,558
control click and our loader component

1466
01:00:01,920 --> 01:00:08,960
is simply going to be a div a div that's

1467
01:00:04,559 --> 01:00:11,520
going to have a class name equal to flex

1468
01:00:08,960 --> 01:00:15,679
justify dash center

1469
01:00:11,519 --> 01:00:18,398
items dash center and padding dash y3

1470
01:00:15,679 --> 01:00:21,358
and finally we're gonna have one inner

1471
01:00:18,400 --> 01:00:22,799
self-closing div that's going to have a

1472
01:00:21,358 --> 01:00:27,518
class

1473
01:00:22,798 --> 01:00:30,597
name equal to animate dash spin also

1474
01:00:27,519 --> 01:00:34,078
rounded dash full

1475
01:00:30,599 --> 01:00:41,118
h-32 with dash 32

1476
01:00:34,079 --> 01:00:43,520
border dash b-2 and border dash red-700

1477
01:00:41,119 --> 01:00:45,200
now if we go back to welcome and set

1478
01:00:43,519 --> 01:00:47,519
this to true

1479
01:00:45,199 --> 01:00:50,077
you're gonna notice that nice red

1480
01:00:47,519 --> 01:00:52,158
spinning border of course later on we're

1481
01:00:50,079 --> 01:00:54,239
gonna have the is loading state here

1482
01:00:52,159 --> 01:00:56,718
that's going to dynamically change as

1483
01:00:54,239 --> 01:00:58,878
soon as we click the send now button now

1484
01:00:56,719 --> 01:01:00,797
let's expand our browser just a bit to

1485
01:00:58,880 --> 01:01:03,599
see how does it look like on desktop

1486
01:01:00,798 --> 01:01:05,838
devices there we go now let's check out

1487
01:01:03,599 --> 01:01:08,400
the finished version and it looks like

1488
01:01:05,838 --> 01:01:11,198
this is panning a bit more to left and

1489
01:01:08,400 --> 01:01:13,520
right it's taking a bit more space if

1490
01:01:11,199 --> 01:01:15,758
you take a look this is all closed down

1491
01:01:13,519 --> 01:01:18,639
to the middle so let's see what do we

1492
01:01:15,760 --> 01:01:21,119
have to do to achieve this kind of look

1493
01:01:18,639 --> 01:01:23,278
i'm going to collapse this one more time

1494
01:01:21,119 --> 01:01:26,479
and to achieve this kind of look we're

1495
01:01:23,280 --> 01:01:29,919
going to create a custom media query

1496
01:01:26,480 --> 01:01:32,480
so far we've used medium right here but

1497
01:01:29,920 --> 01:01:34,400
let's use something like mf which is

1498
01:01:32,480 --> 01:01:36,960
going to stand for full

1499
01:01:34,400 --> 01:01:39,680
we're going to use that mf right here

1500
01:01:36,960 --> 01:01:41,599
we're going to also use that mf right

1501
01:01:39,679 --> 01:01:43,598
here

1502
01:01:41,599 --> 01:01:46,318
and finally we're going to use it in one

1503
01:01:43,599 --> 01:01:49,999
last place which is going to be on line

1504
01:01:46,318 --> 01:01:52,478
66 right here right here where we say md

1505
01:01:50,000 --> 01:01:54,078
is equal to empty zero that's going to

1506
01:01:52,480 --> 01:01:56,399
be mf

1507
01:01:54,079 --> 01:01:59,039
and if we zoom this out a bit we should

1508
01:01:56,400 --> 01:02:02,159
have two mds left

1509
01:01:59,039 --> 01:02:04,160
and we should have three mf's

1510
01:02:02,159 --> 01:02:05,038
that way you'll know that everything is

1511
01:02:04,159 --> 01:02:07,598
right

1512
01:02:05,039 --> 01:02:08,959
so now you might be wondering what is

1513
01:02:07,599 --> 01:02:10,799
this mf

1514
01:02:08,960 --> 01:02:13,679
if you went to tailwind they're not

1515
01:02:10,798 --> 01:02:16,158
going to have a specific medium full or

1516
01:02:13,679 --> 01:02:17,919
something like that media query this is

1517
01:02:16,159 --> 01:02:20,798
a media query that's going to be

1518
01:02:17,920 --> 01:02:22,880
appended to tailwind by us

1519
01:02:20,798 --> 01:02:25,038
more specifically you can open up your

1520
01:02:22,880 --> 01:02:28,038
file explorer and then go to

1521
01:02:25,039 --> 01:02:28,039
tailwind.config.js

1522
01:02:28,798 --> 01:02:33,759
inside of here we just have the basic

1523
01:02:30,880 --> 01:02:35,599
config but again in the description

1524
01:02:33,760 --> 01:02:38,160
there's going to be a link to a github

1525
01:02:35,599 --> 01:02:41,160
gist that's going to contain the updated

1526
01:02:38,159 --> 01:02:41,159
tailwind.config.js

1527
01:02:41,358 --> 01:02:45,838
the only thing that's changing here is

1528
01:02:43,280 --> 01:02:49,039
the font as well as we're adding that

1529
01:02:45,838 --> 01:02:51,198
specific screen which is medium full and

1530
01:02:49,039 --> 01:02:52,079
that's going to provide it a bit more

1531
01:02:51,199 --> 01:02:54,159
width

1532
01:02:52,079 --> 01:02:55,838
we're going to also add the slide in

1533
01:02:54,159 --> 01:02:58,399
animations

1534
01:02:55,838 --> 01:03:00,798
so just go into the github just below

1535
01:02:58,400 --> 01:03:03,358
copy the tailwind config and paste it

1536
01:03:00,798 --> 01:03:05,838
straight into here and as soon as you've

1537
01:03:03,358 --> 01:03:08,318
done that we can now expand this and

1538
01:03:05,838 --> 01:03:09,358
zoom it in a bit and this is looking

1539
01:03:08,318 --> 01:03:11,038
great

1540
01:03:09,358 --> 01:03:13,199
i actually preferred having the window

1541
01:03:11,039 --> 01:03:15,279
zoomed in so that you guys can see

1542
01:03:13,199 --> 01:03:17,439
everything so much better

1543
01:03:15,280 --> 01:03:18,558
with that said let's now bring this back

1544
01:03:17,440 --> 01:03:21,199
right here

1545
01:03:18,559 --> 01:03:23,599
we have our tailbone config and we are

1546
01:03:21,199 --> 01:03:25,519
completely done with the layout part of

1547
01:03:23,599 --> 01:03:27,358
our welcome component

1548
01:03:25,519 --> 01:03:29,597
now we are able to write the address we

1549
01:03:27,358 --> 01:03:31,999
want to send the ethereum to write the

1550
01:03:29,599 --> 01:03:35,039
amount of ethereum the keyword and the

1551
01:03:32,000 --> 01:03:37,839
message so now we are actually going to

1552
01:03:35,039 --> 01:03:39,1000
connect this to the blockchain and then

1553
01:03:37,838 --> 01:03:42,639
we're going to write a solidity smart

1554
01:03:40,000 --> 01:03:44,318
contract that keeps track of all of the

1555
01:03:42,639 --> 01:03:45,438
transactions that went through the

1556
01:03:44,318 --> 01:03:48,077
blockchain

1557
01:03:45,440 --> 01:03:50,239
exciting part coming up right now

1558
01:03:48,079 --> 01:03:52,399
to start creating the blockchain part of

1559
01:03:50,239 --> 01:03:54,719
our application we can close all the

1560
01:03:52,400 --> 01:03:57,358
files and folders right here

1561
01:03:54,719 --> 01:03:59,358
collapse them and then open up the smart

1562
01:03:57,358 --> 01:04:01,278
contract parts of the page

1563
01:03:59,358 --> 01:04:03,919
we can also go to view

1564
01:04:01,280 --> 01:04:04,719
terminal press ctrl c to stop it from

1565
01:04:03,920 --> 01:04:07,759
running

1566
01:04:04,719 --> 01:04:10,719
and then we can cd dot to get back into

1567
01:04:07,760 --> 01:04:14,240
the root of directory and then cd into

1568
01:04:10,719 --> 01:04:16,478
smart underscore contract great

1569
01:04:14,239 --> 01:04:19,117
we've already set up the basic package

1570
01:04:16,480 --> 01:04:20,480
json but right now it doesn't have any

1571
01:04:19,119 --> 01:04:22,558
dependencies

1572
01:04:20,480 --> 01:04:24,480
so down in the description you'll be

1573
01:04:22,559 --> 01:04:26,719
able to find a list of all the

1574
01:04:24,480 --> 01:04:28,480
dependencies that you need to install

1575
01:04:26,719 --> 01:04:32,318
instead of typing them out by hand

1576
01:04:28,480 --> 01:04:34,159
simply find this command and press enter

1577
01:04:32,318 --> 01:04:36,718
this process is going to take about a

1578
01:04:34,159 --> 01:04:39,279
minute and as soon as it's done we'll

1579
01:04:36,719 --> 01:04:41,919
start creating our smart contract to

1580
01:04:39,280 --> 01:04:44,318
create a basic structure for our smart

1581
01:04:41,920 --> 01:04:46,400
contract we're going to use hard hat

1582
01:04:44,318 --> 01:04:48,798
hard hat is ethereum development

1583
01:04:46,400 --> 01:04:51,760
environment for professionals and it

1584
01:04:48,798 --> 01:04:54,078
allows you to run solidity locally so

1585
01:04:51,760 --> 01:04:57,119
it's going to allow us to test our smart

1586
01:04:54,079 --> 01:05:00,079
contract first before deploying it there

1587
01:04:57,119 --> 01:05:02,240
we go our packages have been installed

1588
01:05:00,079 --> 01:05:06,079
and we are ready to run our first

1589
01:05:02,239 --> 01:05:08,399
command which is mpx hard hat

1590
01:05:06,079 --> 01:05:10,880
this is going to create a basic project

1591
01:05:08,400 --> 01:05:13,358
structure so let's just click enter

1592
01:05:10,880 --> 01:05:15,359
create a basic sample project let's

1593
01:05:13,358 --> 01:05:17,518
click enter one more time because we

1594
01:05:15,358 --> 01:05:20,318
want to create it inside of here

1595
01:05:17,519 --> 01:05:23,597
and finally yes we want to add a git

1596
01:05:20,318 --> 01:05:26,077
ignore so press enter one more time

1597
01:05:23,599 --> 01:05:28,720
you'll notice that we immediately get a

1598
01:05:26,079 --> 01:05:31,680
few files and folders for example this

1599
01:05:28,719 --> 01:05:34,159
hard hat config file right here as well

1600
01:05:31,679 --> 01:05:36,639
as the tests scripts and most

1601
01:05:34,159 --> 01:05:38,958
importantly contracts we're going to

1602
01:05:36,639 --> 01:05:40,959
explore all of these the first thing we

1603
01:05:38,960 --> 01:05:44,799
can do to make sure that everything is

1604
01:05:40,960 --> 01:05:46,400
running correctly is run mpx hard hat

1605
01:05:44,798 --> 01:05:49,357
test

1606
01:05:46,400 --> 01:05:52,318
this command just to run our test script

1607
01:05:49,358 --> 01:05:54,239
which then created a basic greeter

1608
01:05:52,318 --> 01:05:56,238
solidity contract

1609
01:05:54,239 --> 01:05:58,639
of course this was just a test we're

1610
01:05:56,239 --> 01:06:00,557
going to create our own contracts right

1611
01:05:58,639 --> 01:06:02,558
away before we start writing the

1612
01:06:00,559 --> 01:06:05,280
solidity code it's going to be a lot

1613
01:06:02,559 --> 01:06:08,078
easier if you go to extensions and then

1614
01:06:05,280 --> 01:06:09,919
install the solidity extension this is

1615
01:06:08,079 --> 01:06:11,760
simply going to provide you some syntax

1616
01:06:09,920 --> 01:06:13,759
highlighting so your code is going to

1617
01:06:11,760 --> 01:06:16,319
look better and it's going to be easier

1618
01:06:13,760 --> 01:06:16,960
to write it so just make sure to install

1619
01:06:16,318 --> 01:06:18,479
it

1620
01:06:16,960 --> 01:06:21,440
after you've done that

1621
01:06:18,480 --> 01:06:24,480
we can go back into our explorer and we

1622
01:06:21,440 --> 01:06:26,799
can delete the greeter.soul contract

1623
01:06:24,480 --> 01:06:28,160
that is the demo contract created for us

1624
01:06:26,798 --> 01:06:30,718
by hardhat

1625
01:06:28,159 --> 01:06:34,159
we can delete it and we can create a new

1626
01:06:30,719 --> 01:06:37,999
smart contract called transactions

1627
01:06:34,159 --> 01:06:40,878
dot sol as in solidity inside of here we

1628
01:06:38,000 --> 01:06:43,839
can start writing the code for our first

1629
01:06:40,880 --> 01:06:46,078
ever solidity smart contract

1630
01:06:43,838 --> 01:06:49,357
solidity is a fairly new programming

1631
01:06:46,079 --> 01:06:51,279
language used for ethereum blockchain

1632
01:06:49,358 --> 01:06:53,999
and it's a combination of a few

1633
01:06:51,280 --> 01:06:57,598
languages the creators of solidity got

1634
01:06:54,000 --> 01:07:01,038
inspired by javascript java c plus plus

1635
01:06:57,599 --> 01:07:03,520
rust and many other languages therefore

1636
01:07:01,039 --> 01:07:06,399
not only making solidity extremely

1637
01:07:03,519 --> 01:07:08,479
versatile but also making it intuitive

1638
01:07:06,400 --> 01:07:10,558
as we start to write code in solidity

1639
01:07:08,480 --> 01:07:14,159
you're gonna notice that all of that

1640
01:07:10,559 --> 01:07:16,480
seems similar maybe from java javascript

1641
01:07:14,159 --> 01:07:19,439
but it's definitely going to make sense

1642
01:07:16,480 --> 01:07:21,598
as it's almost written in pure english

1643
01:07:19,440 --> 01:07:24,159
first we can start by choosing the

1644
01:07:21,599 --> 01:07:26,959
version of solidity we want to use

1645
01:07:24,159 --> 01:07:28,958
in this case i'm going to write pragma

1646
01:07:26,960 --> 01:07:32,240
solidity and then

1647
01:07:28,960 --> 01:07:36,679
the carrot sign which is shift and 6 on

1648
01:07:32,239 --> 01:07:36,679
my keyboard and then 0.8.0

1649
01:07:37,599 --> 01:07:41,919
and we need to write semicolons at the

1650
01:07:39,920 --> 01:07:44,240
end you'll also notice that we get a

1651
01:07:41,920 --> 01:07:47,759
warning right here saying that we need a

1652
01:07:44,239 --> 01:07:51,918
license so right here we can copy this

1653
01:07:47,760 --> 01:07:54,319
spdx license identifier unlicensed so

1654
01:07:51,920 --> 01:07:57,439
simply make sure to copy it and put that

1655
01:07:54,318 --> 01:07:59,999
as the comment above your code that's

1656
01:07:57,440 --> 01:08:01,999
going to make that warning go away and

1657
01:08:00,000 --> 01:08:03,759
now that we have our license and we've

1658
01:08:02,000 --> 01:08:06,879
chosen the version of solidity we want

1659
01:08:03,760 --> 01:08:08,960
to use we can immediately create our

1660
01:08:06,880 --> 01:08:12,479
contract so you can simply write

1661
01:08:08,960 --> 01:08:14,160
contract you can give it a name

1662
01:08:12,480 --> 01:08:16,480
in this case the name is going to be the

1663
01:08:14,159 --> 01:08:19,197
same as the name of our file which is

1664
01:08:16,479 --> 01:08:21,677
going to be transactions this contract

1665
01:08:19,198 --> 01:08:24,398
is serving a purpose of a class in

1666
01:08:21,679 --> 01:08:26,159
object-oriented programming languages

1667
01:08:24,399 --> 01:08:28,479
one difference between solidity and

1668
01:08:26,158 --> 01:08:31,757
javascript is that in javascript you can

1669
01:08:28,479 --> 01:08:34,959
simply say let and then say for example

1670
01:08:31,759 --> 01:08:37,119
test is equal to five

1671
01:08:34,960 --> 01:08:39,519
and then later on you can redeclare that

1672
01:08:37,119 --> 01:08:41,357
test to be a string of five

1673
01:08:39,520 --> 01:08:43,439
in most other regular programming

1674
01:08:41,359 --> 01:08:45,759
languages you cannot do that because

1675
01:08:43,439 --> 01:08:47,757
they are statically typed meaning you

1676
01:08:45,759 --> 01:08:49,040
have to define the type of the variable

1677
01:08:47,759 --> 01:08:51,600
at the start

1678
01:08:49,039 --> 01:08:52,958
that can either be a string or a number

1679
01:08:51,600 --> 01:08:55,439
like integer

1680
01:08:52,960 --> 01:08:59,1000
so in this case let's define our first

1681
01:08:55,439 --> 01:09:02,958
variable by saying you and 256

1682
01:09:00,000 --> 01:09:04,158
and we can call it transaction

1683
01:09:02,960 --> 01:09:06,399
count

1684
01:09:04,158 --> 01:09:08,638
this is going to be a simple number

1685
01:09:06,399 --> 01:09:10,798
variable that's going to hold the number

1686
01:09:08,640 --> 01:09:12,718
of our transactions

1687
01:09:10,798 --> 01:09:15,278
just after that we can create something

1688
01:09:12,719 --> 01:09:16,959
known as an event we have to give a name

1689
01:09:15,279 --> 01:09:18,880
to this event which is going to be

1690
01:09:16,960 --> 01:09:20,799
called transfer

1691
01:09:18,880 --> 01:09:23,838
think of this like a function that we're

1692
01:09:20,798 --> 01:09:25,599
going to emit or call later on

1693
01:09:23,838 --> 01:09:26,798
this function is going to accept a few

1694
01:09:25,600 --> 01:09:28,798
parameters

1695
01:09:26,798 --> 01:09:32,078
each one of our transactions or

1696
01:09:28,798 --> 01:09:33,038
transfers has to have an address

1697
01:09:32,079 --> 01:09:34,958
from

1698
01:09:33,039 --> 01:09:36,958
and this address here is going to be the

1699
01:09:34,960 --> 01:09:38,799
type and the from is going to be a

1700
01:09:36,960 --> 01:09:41,120
variable name

1701
01:09:38,798 --> 01:09:43,198
then we also need to have the address of

1702
01:09:41,119 --> 01:09:44,878
the receiver so that's going to be our

1703
01:09:43,198 --> 01:09:47,118
second parameter

1704
01:09:44,880 --> 01:09:50,479
then we want to have a number meaning

1705
01:09:47,119 --> 01:09:52,718
you and again that is just a type and

1706
01:09:50,479 --> 01:09:55,759
the name of the variable is going to be

1707
01:09:52,719 --> 01:09:59,199
amount we also need to have a string

1708
01:09:55,760 --> 01:10:02,800
equal to message which is just the name

1709
01:09:59,198 --> 01:10:05,039
we need to have another you and 256

1710
01:10:02,800 --> 01:10:06,880
which is going to be a timestamp so this

1711
01:10:05,039 --> 01:10:09,678
is going to be a number that's going to

1712
01:10:06,880 --> 01:10:12,080
say when did we send that transfer

1713
01:10:09,679 --> 01:10:14,560
and finally we can have one last string

1714
01:10:12,079 --> 01:10:17,598
which is going to be the keyword this is

1715
01:10:14,560 --> 01:10:20,319
going to form our event which later on

1716
01:10:17,600 --> 01:10:22,319
has to be emitted from somewhere now

1717
01:10:20,319 --> 01:10:25,197
similar to creating this event we can

1718
01:10:22,319 --> 01:10:27,279
also create a struct or a structure

1719
01:10:25,198 --> 01:10:28,638
let's call it transfer

1720
01:10:27,279 --> 01:10:30,959
struct

1721
01:10:28,640 --> 01:10:33,439
and that's going to be similar to an

1722
01:10:30,960 --> 01:10:35,839
object but we're not actually declaring

1723
01:10:33,439 --> 01:10:38,559
an object here we're just specifying

1724
01:10:35,840 --> 01:10:41,120
what properties is this object have and

1725
01:10:38,560 --> 01:10:42,960
of what type are they going to be so we

1726
01:10:41,119 --> 01:10:45,038
can say it's going to have an address

1727
01:10:42,960 --> 01:10:47,759
and the name of that property is going

1728
01:10:45,039 --> 01:10:49,999
to be sender this is the type this is

1729
01:10:47,760 --> 01:10:51,840
the name of the property it's also going

1730
01:10:50,000 --> 01:10:54,158
to have another address which is going

1731
01:10:51,840 --> 01:10:56,960
to be a receiver it's also going to have

1732
01:10:54,158 --> 01:10:58,959
a u end which is going to be amount it's

1733
01:10:56,960 --> 01:11:00,560
going to have a string which is going to

1734
01:10:58,960 --> 01:11:04,639
be message

1735
01:11:00,560 --> 01:11:07,199
uint 256 is going to be timestamp and

1736
01:11:04,640 --> 01:11:08,399
finally a string that's going to be a

1737
01:11:07,198 --> 01:11:11,039
keyword

1738
01:11:08,399 --> 01:11:13,998
now we know what properties does our

1739
01:11:11,039 --> 01:11:16,157
transfer or transaction needs to have we

1740
01:11:14,000 --> 01:11:18,158
can also define an array of different

1741
01:11:16,158 --> 01:11:20,717
transactions because we want to store

1742
01:11:18,158 --> 01:11:23,598
all of them to define our array we can

1743
01:11:20,719 --> 01:11:25,679
call it transactions like this but we

1744
01:11:23,600 --> 01:11:27,920
have to define of what type are these

1745
01:11:25,679 --> 01:11:29,520
transactions going to be so we can say

1746
01:11:27,920 --> 01:11:30,718
transfer

1747
01:11:29,520 --> 01:11:33,359
struct

1748
01:11:30,719 --> 01:11:35,679
and then an array sign this means that

1749
01:11:33,359 --> 01:11:38,639
our transactions variable is going to be

1750
01:11:35,679 --> 01:11:40,560
an array of transfer structures

1751
01:11:38,640 --> 01:11:43,120
meaning an array of objects

1752
01:11:40,560 --> 01:11:45,520
hopefully so far everything here makes

1753
01:11:43,119 --> 01:11:47,838
sense now we're going to create

1754
01:11:45,520 --> 01:11:49,920
different functions we're going to have

1755
01:11:47,840 --> 01:11:53,199
one function which is going to be called

1756
01:11:49,920 --> 01:11:55,519
add to blockchain again this is just a

1757
01:11:53,198 --> 01:11:57,598
name that we personally chose

1758
01:11:55,520 --> 01:12:00,239
it's going to look like this just like a

1759
01:11:57,600 --> 01:12:01,1000
regular javascript function but we

1760
01:12:00,238 --> 01:12:04,638
immediately get a warning saying no

1761
01:12:02,000 --> 01:12:07,360
visibility is specified did you intend

1762
01:12:04,640 --> 01:12:09,359
to add public since this is a class you

1763
01:12:07,359 --> 01:12:11,599
have to define the visibility of this

1764
01:12:09,359 --> 01:12:13,599
specific function so we're going to say

1765
01:12:11,600 --> 01:12:16,080
that this function is public meaning

1766
01:12:13,600 --> 01:12:18,640
everybody can access this function now

1767
01:12:16,079 --> 01:12:20,559
we can copy this to create two other

1768
01:12:18,640 --> 01:12:22,239
functions that we're going to use

1769
01:12:20,560 --> 01:12:23,600
the second function is going to be

1770
01:12:22,238 --> 01:12:26,319
called get

1771
01:12:23,600 --> 01:12:28,080
all transactions this is also going to

1772
01:12:26,319 --> 01:12:30,479
be a public function

1773
01:12:28,079 --> 01:12:31,518
but it's going to be public

1774
01:12:30,479 --> 01:12:34,717
view

1775
01:12:31,520 --> 01:12:36,718
returns and now we need to specify what

1776
01:12:34,719 --> 01:12:38,639
is this function going to return

1777
01:12:36,719 --> 01:12:40,959
and it's going to return

1778
01:12:38,640 --> 01:12:42,559
transfer struct

1779
01:12:40,960 --> 01:12:44,640
meaning an array

1780
01:12:42,560 --> 01:12:47,119
of different structures

1781
01:12:44,640 --> 01:12:49,600
and it's going to get it from memory of

1782
01:12:47,119 --> 01:12:50,558
course later on in here we're going to

1783
01:12:49,600 --> 01:12:52,159
return

1784
01:12:50,560 --> 01:12:53,120
transactions

1785
01:12:52,158 --> 01:12:55,118
like this

1786
01:12:53,119 --> 01:12:56,718
and our last function is going to be

1787
01:12:55,119 --> 01:12:58,878
called get

1788
01:12:56,719 --> 01:13:00,080
transaction

1789
01:12:58,880 --> 01:13:02,560
count

1790
01:13:00,079 --> 01:13:05,197
and it's also going to be public and

1791
01:13:02,560 --> 01:13:06,319
it's also going to say view

1792
01:13:05,198 --> 01:13:08,879
returns

1793
01:13:06,319 --> 01:13:10,639
in this case we simply want to return a

1794
01:13:08,880 --> 01:13:13,040
number and the number we're going to

1795
01:13:10,640 --> 01:13:14,640
return is going to be return

1796
01:13:13,039 --> 01:13:17,439
transaction

1797
01:13:14,640 --> 01:13:19,920
count remember that's the variable we

1798
01:13:17,439 --> 01:13:22,078
created at the start now i know that

1799
01:13:19,920 --> 01:13:24,320
this public view returns and then

1800
01:13:22,079 --> 01:13:25,279
transfers struct and then returns a

1801
01:13:24,319 --> 01:13:27,519
number

1802
01:13:25,279 --> 01:13:30,399
we don't have that in javascript and

1803
01:13:27,520 --> 01:13:32,239
that might be a blessing and a curse

1804
01:13:30,399 --> 01:13:35,439
statically typed programming languages

1805
01:13:32,238 --> 01:13:37,678
are great because they set some rules

1806
01:13:35,439 --> 01:13:39,998
in that way they are defending you from

1807
01:13:37,679 --> 01:13:42,800
yourself to create some mistakes or

1808
01:13:40,000 --> 01:13:44,559
errors or bugs in your code now you know

1809
01:13:42,800 --> 01:13:46,960
that this function needs to return the

1810
01:13:44,560 --> 01:13:49,439
transaction count which is a number that

1811
01:13:46,960 --> 01:13:51,440
getall transactions needs to return a

1812
01:13:49,439 --> 01:13:54,318
transfer struct array which is just an

1813
01:13:51,439 --> 01:13:56,799
array of objects and so on

1814
01:13:54,319 --> 01:13:58,639
you also know that the add to blockchain

1815
01:13:56,800 --> 01:14:01,1000
doesn't return anything it's just doing

1816
01:13:58,640 --> 01:14:03,840
some actions so add to blockchain is

1817
01:14:02,000 --> 01:14:06,400
going to be the main part of our smart

1818
01:14:03,840 --> 01:14:09,439
contract so what are we going to do in

1819
01:14:06,399 --> 01:14:11,599
here well first we're going to increment

1820
01:14:09,439 --> 01:14:15,519
the transaction count so we can say

1821
01:14:11,600 --> 01:14:17,760
transaction count plus equal to one

1822
01:14:15,520 --> 01:14:20,640
there is one more transaction right now

1823
01:14:17,760 --> 01:14:22,639
than there was before and in here the

1824
01:14:20,640 --> 01:14:24,079
linter immediately says undeclared

1825
01:14:22,640 --> 01:14:25,919
identifier

1826
01:14:24,079 --> 01:14:28,798
looks like i called it counter at the

1827
01:14:25,920 --> 01:14:30,880
start but i meant to use just count so

1828
01:14:28,800 --> 01:14:33,439
i'm gonna rename it and we no longer

1829
01:14:30,880 --> 01:14:36,158
have an error okay so now we just have a

1830
01:14:33,439 --> 01:14:38,717
number one transaction two three four

1831
01:14:36,158 --> 01:14:41,518
and so on but we haven't actually pushed

1832
01:14:38,719 --> 01:14:42,800
our transaction into our array of

1833
01:14:41,520 --> 01:14:44,879
transactions

1834
01:14:42,800 --> 01:14:47,199
so whenever we call the add to

1835
01:14:44,880 --> 01:14:49,198
blockchain from our react application

1836
01:14:47,198 --> 01:14:50,238
we're going to pass specific parameters

1837
01:14:49,198 --> 01:14:52,158
into it

1838
01:14:50,238 --> 01:14:53,758
more specifically we're going to pass

1839
01:14:52,158 --> 01:14:54,839
the address

1840
01:14:53,760 --> 01:14:57,360
payable

1841
01:14:54,840 --> 01:15:00,320
receiver the first parameter we're going

1842
01:14:57,359 --> 01:15:03,118
to pass is going to be the receiver and

1843
01:15:00,319 --> 01:15:05,038
that's going to be a payable address

1844
01:15:03,119 --> 01:15:07,599
then the second thing we can pass is

1845
01:15:05,039 --> 01:15:10,237
going to be the u end which is a number

1846
01:15:07,600 --> 01:15:12,479
which is going to be called amount we

1847
01:15:10,238 --> 01:15:13,677
can also pass a string

1848
01:15:12,479 --> 01:15:16,237
memory

1849
01:15:13,679 --> 01:15:18,400
message and this memory here it just

1850
01:15:16,238 --> 01:15:21,039
means that this is some specific data

1851
01:15:18,399 --> 01:15:23,118
stored in the memory of that transaction

1852
01:15:21,039 --> 01:15:25,519
whereas receiver is something that must

1853
01:15:23,119 --> 01:15:27,918
be there because it's an address amount

1854
01:15:25,520 --> 01:15:29,520
also must be there but this message is

1855
01:15:27,920 --> 01:15:32,080
just some additional data that we're

1856
01:15:29,520 --> 01:15:35,199
passing through that blockchain and

1857
01:15:32,079 --> 01:15:37,838
finally we're gonna have one more string

1858
01:15:35,198 --> 01:15:40,398
memory field and that's going to be our

1859
01:15:37,840 --> 01:15:42,559
keyword now we have access to all of

1860
01:15:40,399 --> 01:15:45,118
these variables and we can do something

1861
01:15:42,560 --> 01:15:48,159
with them more specifically we can call

1862
01:15:45,119 --> 01:15:49,838
our transactions array and call a dot

1863
01:15:48,158 --> 01:15:52,799
push method on it

1864
01:15:49,840 --> 01:15:55,359
yes solidity also has a dot push method

1865
01:15:52,800 --> 01:15:58,080
and it behaves almost in the same way as

1866
01:15:55,359 --> 01:16:00,078
it does in javascript we're going to say

1867
01:15:58,079 --> 01:16:02,079
what do we want to push and that is our

1868
01:16:00,079 --> 01:16:04,479
transfer struct as you can see right

1869
01:16:02,079 --> 01:16:06,638
here and the last thing we have to do is

1870
01:16:04,479 --> 01:16:08,717
pass in all the parameters that our

1871
01:16:06,640 --> 01:16:10,640
transfer struct needs

1872
01:16:08,719 --> 01:16:13,280
let's start with the first one which is

1873
01:16:10,640 --> 01:16:17,159
the sender and we actually have that

1874
01:16:13,279 --> 01:16:18,718
already in the object called message

1875
01:16:17,158 --> 01:16:20,158
message.sender

1876
01:16:18,719 --> 01:16:22,080
this is something that you immediately

1877
01:16:20,158 --> 01:16:24,158
get whenever you call a specific

1878
01:16:22,079 --> 01:16:26,319
function in the blockchain it's already

1879
01:16:24,158 --> 01:16:27,999
going to be stored there the second

1880
01:16:26,319 --> 01:16:30,399
thing we're gonna get is going to be a

1881
01:16:28,000 --> 01:16:32,559
receiver and the receiver is just coming

1882
01:16:30,399 --> 01:16:34,238
through our parameters

1883
01:16:32,560 --> 01:16:36,560
then we're going to have the amount

1884
01:16:34,238 --> 01:16:38,558
which is also coming through params then

1885
01:16:36,560 --> 01:16:40,640
we're going to have a message we're

1886
01:16:38,560 --> 01:16:43,1000
going to have the timestamp which is

1887
01:16:40,640 --> 01:16:45,1000
going to be equal to block.timestamp

1888
01:16:44,000 --> 01:16:48,080
so that's going to be the timestamp of

1889
01:16:46,000 --> 01:16:50,158
the specific block that was being

1890
01:16:48,079 --> 01:16:53,039
executed on the blockchain

1891
01:16:50,158 --> 01:16:55,119
and finally we're gonna have a keyword

1892
01:16:53,039 --> 01:16:58,157
this is it we're pushing a specific

1893
01:16:55,119 --> 01:17:00,319
transaction into the transactions array

1894
01:16:58,158 --> 01:17:02,558
this here is not actually transferring

1895
01:17:00,319 --> 01:17:05,279
the amount or doing anything because we

1896
01:17:02,560 --> 01:17:07,040
haven't yet emitted the transfer event

1897
01:17:05,279 --> 01:17:08,638
right now we're just adding this

1898
01:17:07,039 --> 01:17:11,119
transaction to the list of all

1899
01:17:08,640 --> 01:17:13,600
transactions but we are not actually

1900
01:17:11,119 --> 01:17:17,279
making the transfer to do that we have

1901
01:17:13,600 --> 01:17:18,880
to emit this event so to do that we can

1902
01:17:17,279 --> 01:17:20,238
say emit

1903
01:17:18,880 --> 01:17:22,719
transfer

1904
01:17:20,238 --> 01:17:24,879
and then we can pass all the same things

1905
01:17:22,719 --> 01:17:26,560
that we're passing right here

1906
01:17:24,880 --> 01:17:27,1000
let's copy them

1907
01:17:26,560 --> 01:17:30,080
paste them here

1908
01:17:28,000 --> 01:17:32,919
first we have message.sender then we

1909
01:17:30,079 --> 01:17:35,678
have a receiver amount message

1910
01:17:32,920 --> 01:17:38,559
block.timestamp and the keyword and

1911
01:17:35,679 --> 01:17:40,560
don't forget to add a semicolon

1912
01:17:38,560 --> 01:17:42,479
finally now that we know that our

1913
01:17:40,560 --> 01:17:45,359
transaction count is actually being

1914
01:17:42,479 --> 01:17:47,198
updated we can uncomment this line

1915
01:17:45,359 --> 01:17:48,638
so now we can actually send back the

1916
01:17:47,198 --> 01:17:51,518
transaction count

1917
01:17:48,640 --> 01:17:53,279
and we also know that our transactions

1918
01:17:51,520 --> 01:17:54,640
are being added to the list of the

1919
01:17:53,279 --> 01:17:56,799
transactions

1920
01:17:54,640 --> 01:17:59,439
make sure that you have semicolons at

1921
01:17:56,800 --> 01:18:00,639
the end of every single line and this is

1922
01:17:59,439 --> 01:18:03,439
going to be it

1923
01:18:00,640 --> 01:18:04,559
this is our ethereum solidity smart

1924
01:18:03,439 --> 01:18:06,878
contract

1925
01:18:04,560 --> 01:18:09,279
it's used to transfer the amount and

1926
01:18:06,880 --> 01:18:12,158
also to store all the transactions that

1927
01:18:09,279 --> 01:18:14,157
come through it great now there's gonna

1928
01:18:12,158 --> 01:18:16,558
be a bit of a setup when it comes to

1929
01:18:14,158 --> 01:18:19,358
deploying and testing this smart

1930
01:18:16,560 --> 01:18:21,760
contract so writing it is not the only

1931
01:18:19,359 --> 01:18:23,839
thing you have to do but no worries i'm

1932
01:18:21,760 --> 01:18:26,880
going to show you how to do everything

1933
01:18:23,840 --> 01:18:29,359
right now to deploy our smart contract

1934
01:18:26,880 --> 01:18:30,639
we can go to file explorer and then

1935
01:18:29,359 --> 01:18:32,479
scripts

1936
01:18:30,640 --> 01:18:33,719
inside of the scripts you'll be able to

1937
01:18:32,479 --> 01:18:35,358
find a

1938
01:18:33,719 --> 01:18:38,840
samplescript.js

1939
01:18:35,359 --> 01:18:41,998
we can rename that script to

1940
01:18:38,840 --> 01:18:44,479
deploy.js and we can delete most of the

1941
01:18:42,000 --> 01:18:47,360
things from here let's delete all the

1942
01:18:44,479 --> 01:18:50,158
comments and require at the top

1943
01:18:47,359 --> 01:18:53,839
let's also remake this function as an

1944
01:18:50,158 --> 01:18:55,438
es6 arrow function by saying const main

1945
01:18:53,840 --> 01:18:56,639
is equal to

1946
01:18:55,439 --> 01:18:59,839
async

1947
01:18:56,640 --> 01:19:01,279
arrow function like this

1948
01:18:59,840 --> 01:19:03,920
there we go

1949
01:19:01,279 --> 01:19:06,639
we also don't need these comments

1950
01:19:03,920 --> 01:19:09,280
we don't need those comments and let's

1951
01:19:06,640 --> 01:19:10,880
also turn the main into an async await

1952
01:19:09,279 --> 01:19:13,279
function that's going to look a bit

1953
01:19:10,880 --> 01:19:14,400
better so let's call const

1954
01:19:13,279 --> 01:19:16,319
run main

1955
01:19:14,399 --> 01:19:18,639
is going to be equal to

1956
01:19:16,319 --> 01:19:20,399
async arrow function

1957
01:19:18,640 --> 01:19:22,640
if you haven't worked with async await

1958
01:19:20,399 --> 01:19:24,238
before don't worry it's just a different

1959
01:19:22,640 --> 01:19:26,640
way of writing

1960
01:19:24,238 --> 01:19:29,039
and dot catch methods basically dealing

1961
01:19:26,640 --> 01:19:31,678
with asynchronous code

1962
01:19:29,039 --> 01:19:34,958
inside of here we can create a new try

1963
01:19:31,679 --> 01:19:37,679
and catch block let's invent it properly

1964
01:19:34,960 --> 01:19:40,799
and inside of here we can simply call a

1965
01:19:37,679 --> 01:19:43,119
weight and then call the main function

1966
01:19:40,800 --> 01:19:45,1000
this is going to execute and deploy our

1967
01:19:43,119 --> 01:19:48,559
contract once we await the main function

1968
01:19:46,000 --> 01:19:51,360
we also have to call the process dot

1969
01:19:48,560 --> 01:19:53,760
exit with a zero which means that the

1970
01:19:51,359 --> 01:19:56,078
process went successfully okay let's

1971
01:19:53,760 --> 01:19:58,479
indent that and if we go into the catch

1972
01:19:56,079 --> 01:20:00,798
we can say console.error

1973
01:19:58,479 --> 01:20:04,398
and we're gonna pass in the error

1974
01:20:00,800 --> 01:20:06,880
and simply process dot exit with a 1

1975
01:20:04,399 --> 01:20:09,198
which means that there was an error

1976
01:20:06,880 --> 01:20:12,320
and we also have to run this function

1977
01:20:09,198 --> 01:20:15,198
run main at the start so we're going to

1978
01:20:12,319 --> 01:20:17,118
execute the deploy.js file first this

1979
01:20:15,198 --> 01:20:19,518
line is going to be executed which is

1980
01:20:17,119 --> 01:20:21,519
going to call the run main function and

1981
01:20:19,520 --> 01:20:23,600
then that's going to call our main

1982
01:20:21,520 --> 01:20:25,600
function which is responsible for

1983
01:20:23,600 --> 01:20:27,760
deploying the contract

1984
01:20:25,600 --> 01:20:30,080
so what do we need to change here well

1985
01:20:27,760 --> 01:20:33,120
before the solidity contract was called

1986
01:20:30,079 --> 01:20:35,439
greeter but now it's called transactions

1987
01:20:33,119 --> 01:20:37,279
so we can rename this with transactions

1988
01:20:35,439 --> 01:20:40,799
with a capital t

1989
01:20:37,279 --> 01:20:44,479
that's going to be equal to await hre

1990
01:20:40,800 --> 01:20:46,960
dot ethers dot get contract factory and

1991
01:20:44,479 --> 01:20:49,278
then transactions this is like a

1992
01:20:46,960 --> 01:20:51,599
function factory or a class that's going

1993
01:20:49,279 --> 01:20:54,078
to generate instances of that specific

1994
01:20:51,600 --> 01:20:56,159
contract so just below we're going to

1995
01:20:54,079 --> 01:20:57,918
have one specific instance of our

1996
01:20:56,158 --> 01:21:00,398
contract which is going to be called

1997
01:20:57,920 --> 01:21:03,040
transactions with a lowercase t

1998
01:21:00,399 --> 01:21:06,479
and that's going to be equal to a weight

1999
01:21:03,039 --> 01:21:08,798
transactions with a capital t dot deploy

2000
01:21:06,479 --> 01:21:11,519
and we don't have to pass anything as

2001
01:21:08,800 --> 01:21:14,559
the first parameter we're going to await

2002
01:21:11,520 --> 01:21:17,279
transactions dot deployed and then we're

2003
01:21:14,560 --> 01:21:17,919
going to say transactions with a capital

2004
01:21:17,279 --> 01:21:19,439
t

2005
01:21:17,920 --> 01:21:22,479
deployed to

2006
01:21:19,439 --> 01:21:26,238
and that's going to be transactions

2007
01:21:22,479 --> 01:21:28,318
dot address with a lower case d so when

2008
01:21:26,238 --> 01:21:30,238
we run this script our transactions are

2009
01:21:28,319 --> 01:21:32,158
going to be deployed and then we're

2010
01:21:30,238 --> 01:21:34,238
going to get the address of our smart

2011
01:21:32,158 --> 01:21:35,359
contract deployed on the blockchain

2012
01:21:34,238 --> 01:21:37,919
network

2013
01:21:35,359 --> 01:21:40,078
but for our contract to be deployed we

2014
01:21:37,920 --> 01:21:42,559
need to have some ethereum on our own

2015
01:21:40,079 --> 01:21:45,039
wallet already because everything that

2016
01:21:42,560 --> 01:21:46,960
you do on the ethereum network requires

2017
01:21:45,039 --> 01:21:49,359
something known as gas

2018
01:21:46,960 --> 01:21:52,479
which is small fractions of ethereum

2019
01:21:49,359 --> 01:21:54,559
used to make something happen

2020
01:21:52,479 --> 01:21:57,038
so how are we going to get our test

2021
01:21:54,560 --> 01:21:59,279
ethereum to fund the gas for the

2022
01:21:57,039 --> 01:22:01,999
deployment of our contract

2023
01:21:59,279 --> 01:22:05,038
we can go back to our browser and more

2024
01:22:02,000 --> 01:22:07,198
specifically to the robston testnet

2025
01:22:05,039 --> 01:22:10,558
faucet the link is going to be down in

2026
01:22:07,198 --> 01:22:12,478
the description on test networks faucets

2027
01:22:10,560 --> 01:22:15,040
simply provide you with some test

2028
01:22:12,479 --> 01:22:17,759
ethereums free of charge the only thing

2029
01:22:15,039 --> 01:22:19,999
you have to do is enter your wallet

2030
01:22:17,760 --> 01:22:22,239
address and the ethereum is going to be

2031
01:22:20,000 --> 01:22:24,320
transferred to your account

2032
01:22:22,238 --> 01:22:27,039
some of these faucets run out of

2033
01:22:24,319 --> 01:22:29,439
ethereum from time to time so there are

2034
01:22:27,039 --> 01:22:31,598
a lot of them available on the internet

2035
01:22:29,439 --> 01:22:33,759
and since we are using the robsten

2036
01:22:31,600 --> 01:22:36,239
ethereum test network you can simply

2037
01:22:33,760 --> 01:22:39,120
google for robs then faucet and then

2038
01:22:36,238 --> 01:22:41,279
simply open a few of them up if one of

2039
01:22:39,119 --> 01:22:43,918
these faucets doesn't work you can try

2040
01:22:41,279 --> 01:22:45,279
the next one and so on you can see we

2041
01:22:43,920 --> 01:22:47,120
have this one

2042
01:22:45,279 --> 01:22:47,999
this one seems to be down for whatever

2043
01:22:47,119 --> 01:22:50,878
reason

2044
01:22:48,000 --> 01:22:53,679
this one sends you one ethereum and this

2045
01:22:50,880 --> 01:22:55,439
is the one that i found to work the best

2046
01:22:53,679 --> 01:22:57,040
keep in mind that retrieving ethereum

2047
01:22:55,439 --> 01:22:58,798
through the faucet is not an

2048
01:22:57,039 --> 01:23:00,878
instantaneous process

2049
01:22:58,800 --> 01:23:03,840
it can take anywhere from around 30

2050
01:23:00,880 --> 01:23:06,799
seconds all the way to a few hours

2051
01:23:03,840 --> 01:23:09,519
but again i found this specific test

2052
01:23:06,800 --> 01:23:10,800
network to work the best hopefully this

2053
01:23:09,520 --> 01:23:13,840
is going to allow you to get your

2054
01:23:10,800 --> 01:23:16,080
ethereum in no time but to be completely

2055
01:23:13,840 --> 01:23:18,479
sure to receive some ethereum definitely

2056
01:23:16,079 --> 01:23:21,039
google robsten faucet and then go ahead

2057
01:23:18,479 --> 01:23:22,717
and enter your address in few of these

2058
01:23:21,039 --> 01:23:23,999
the link is going to be down in the

2059
01:23:22,719 --> 01:23:26,400
description

2060
01:23:24,000 --> 01:23:29,440
of course in here we have to enter our

2061
01:23:26,399 --> 01:23:31,599
own ethereum wallet address so to get it

2062
01:23:29,439 --> 01:23:34,637
we'll have to set up our metamask

2063
01:23:31,600 --> 01:23:36,880
account let's do that right away

2064
01:23:34,639 --> 01:23:39,760
to set up metamask you can go to your

2065
01:23:36,880 --> 01:23:42,239
chrome web store or the extension store

2066
01:23:39,760 --> 01:23:44,960
of the any other browser that you use

2067
01:23:42,238 --> 01:23:47,119
just make sure to search for metamask

2068
01:23:44,960 --> 01:23:50,080
although i already have it here and

2069
01:23:47,119 --> 01:23:52,718
metamask is simply an extension for

2070
01:23:50,079 --> 01:23:55,439
accessing ethereum enabled distributed

2071
01:23:52,719 --> 01:23:59,039
applications so this is going to allow

2072
01:23:55,439 --> 01:24:01,759
us to inject ethereum web 3.0 api into

2073
01:23:59,039 --> 01:24:03,439
every website's javascript contacts

2074
01:24:01,760 --> 01:24:05,679
essentially it's going to let us

2075
01:24:03,439 --> 01:24:07,119
interact with the blockchain and smart

2076
01:24:05,679 --> 01:24:09,919
contracts

2077
01:24:07,119 --> 01:24:12,479
so let's go ahead and add it to chrome

2078
01:24:09,920 --> 01:24:15,360
and add extension it's going to appear

2079
01:24:12,479 --> 01:24:17,358
at the top and we can also pin it once

2080
01:24:15,359 --> 01:24:19,599
you click it you're gonna see this nice

2081
01:24:17,359 --> 01:24:22,479
fox and it's going to follow your cursor

2082
01:24:19,600 --> 01:24:24,638
around and welcome you to metamask let's

2083
01:24:22,479 --> 01:24:26,959
click get started if you're first

2084
01:24:24,639 --> 01:24:29,839
installing metamask you most likely

2085
01:24:26,960 --> 01:24:32,320
don't already have an account so let's

2086
01:24:29,840 --> 01:24:34,158
click create a wallet let's click i

2087
01:24:32,319 --> 01:24:36,479
agree and you have to choose your

2088
01:24:34,158 --> 01:24:37,999
password in this case i'm going to use a

2089
01:24:36,479 --> 01:24:41,118
demo password

2090
01:24:38,000 --> 01:24:43,599
and let's click create now when working

2091
01:24:41,119 --> 01:24:46,237
with cryptocurrencies your password is

2092
01:24:43,600 --> 01:24:49,279
not the main thing guarding your account

2093
01:24:46,238 --> 01:24:52,157
your secret recovery phase is you're

2094
01:24:49,279 --> 01:24:54,559
going to be given a phrase of 12 words

2095
01:24:52,158 --> 01:24:55,839
that are the master key to your wallet

2096
01:24:54,560 --> 01:24:57,439
and your funds

2097
01:24:55,840 --> 01:24:59,599
so if this is your first time working

2098
01:24:57,439 --> 01:25:01,759
with cryptocurrencies or wallets make

2099
01:24:59,600 --> 01:25:04,319
sure to watch this video first you can

2100
01:25:01,760 --> 01:25:06,880
pause my video right here and then we

2101
01:25:04,319 --> 01:25:08,718
can click next i'm going to pause it and

2102
01:25:06,880 --> 01:25:11,198
click next right away

2103
01:25:08,719 --> 01:25:12,638
and in here you can click to reveal your

2104
01:25:11,198 --> 01:25:14,637
secret words

2105
01:25:12,639 --> 01:25:16,879
this has to be secret and you have to

2106
01:25:14,639 --> 01:25:19,119
save these words somewhere to be able to

2107
01:25:16,880 --> 01:25:20,480
access your account if you uninstall

2108
01:25:19,119 --> 01:25:22,638
metamask

2109
01:25:20,479 --> 01:25:25,038
so i'm not going to reveal them here

2110
01:25:22,639 --> 01:25:27,440
what you can do is open up notepad on

2111
01:25:25,039 --> 01:25:28,478
your pc and then simply copy and paste

2112
01:25:27,439 --> 01:25:30,479
them there

2113
01:25:28,479 --> 01:25:32,157
then you'll have to click next and in

2114
01:25:30,479 --> 01:25:35,519
the next step you'll have to type them

2115
01:25:32,158 --> 01:25:37,279
out one by one okay i copied my words

2116
01:25:35,520 --> 01:25:39,439
and you simply need to click them in the

2117
01:25:37,279 --> 01:25:41,439
order that they were first shown to you

2118
01:25:39,439 --> 01:25:43,759
i'm going to do that myself here without

2119
01:25:41,439 --> 01:25:45,599
revealing the secret recovery phase and

2120
01:25:43,760 --> 01:25:47,039
then we can click confirm

2121
01:25:45,600 --> 01:25:48,560
after you've entered your words

2122
01:25:47,039 --> 01:25:50,638
correctly you're gonna see a

2123
01:25:48,560 --> 01:25:53,600
congratulations screen with the tips on

2124
01:25:50,639 --> 01:25:56,238
storing it safely let's click all done

2125
01:25:53,600 --> 01:25:59,199
there we go we can close this and this

2126
01:25:56,238 --> 01:26:01,198
is our first ethereum wallet

2127
01:25:59,198 --> 01:26:02,399
what you can do right now is go to the

2128
01:26:01,198 --> 01:26:05,279
top right

2129
01:26:02,399 --> 01:26:07,519
and we want to show and hide test

2130
01:26:05,279 --> 01:26:09,599
networks once you click that it's going

2131
01:26:07,520 --> 01:26:12,159
to lead you to the settings and you want

2132
01:26:09,600 --> 01:26:14,880
to toggle this on

2133
01:26:12,158 --> 01:26:17,598
now we can scroll up and we can change

2134
01:26:14,880 --> 01:26:19,040
from ethereum network to robsten test

2135
01:26:17,600 --> 01:26:20,238
network

2136
01:26:19,039 --> 01:26:22,717
there we go

2137
01:26:20,238 --> 01:26:26,238
now all ethereum shown on our wallets is

2138
01:26:22,719 --> 01:26:27,679
going to be robsten test ethereum not

2139
01:26:26,238 --> 01:26:29,677
real ethereum

2140
01:26:27,679 --> 01:26:32,079
what you can do right now is click on

2141
01:26:29,679 --> 01:26:34,719
this fox on the top right

2142
01:26:32,079 --> 01:26:36,638
and simply click here to copy your

2143
01:26:34,719 --> 01:26:38,638
account address

2144
01:26:36,639 --> 01:26:41,520
once you do that we can go back to the

2145
01:26:38,639 --> 01:26:45,039
robston test faucet and paste it right

2146
01:26:41,520 --> 01:26:47,319
here and say give me robsten ethereum

2147
01:26:45,039 --> 01:26:51,279
there we go it sent

2148
01:26:47,319 --> 01:26:54,319
0.15 ethereum to our test wallet let's

2149
01:26:51,279 --> 01:26:57,599
click metamask again and let's see if it

2150
01:26:54,319 --> 01:26:59,599
maybe arrives in about 30 seconds for me

2151
01:26:57,600 --> 01:27:01,439
the process took about a minute but

2152
01:26:59,600 --> 01:27:03,678
again it's going to depend from time to

2153
01:27:01,439 --> 01:27:06,399
time depending on how many people are

2154
01:27:03,679 --> 01:27:08,719
currently mining ethereum on the robsten

2155
01:27:06,399 --> 01:27:10,799
test network if this doesn't work for

2156
01:27:08,719 --> 01:27:13,760
you make sure to test out all of the

2157
01:27:10,800 --> 01:27:16,080
other faucets available online and also

2158
01:27:13,760 --> 01:27:17,1000
give it some time maybe an hour or two

2159
01:27:16,079 --> 01:27:19,039
and then we'll be able to continue with

2160
01:27:18,000 --> 01:27:20,960
the video

2161
01:27:19,039 --> 01:27:22,798
but it's crucial that you have some

2162
01:27:20,960 --> 01:27:25,679
ethereum available here it doesn't have

2163
01:27:22,800 --> 01:27:28,239
to be a lot just 0.000 something is

2164
01:27:25,679 --> 01:27:31,520
going to be enough but we needed to pay

2165
01:27:28,238 --> 01:27:33,839
the gas to deploy our smart contract

2166
01:27:31,520 --> 01:27:36,638
with that said we are now ready for the

2167
01:27:33,840 --> 01:27:40,320
next step of our video and that next

2168
01:27:36,639 --> 01:27:42,238
step is to go to alchemy.com

2169
01:27:40,319 --> 01:27:44,637
alchemy is going to help us with the

2170
01:27:42,238 --> 01:27:46,638
blockchain development meaning it's

2171
01:27:44,639 --> 01:27:48,159
going to help us deploy our blockchain

2172
01:27:46,639 --> 01:27:50,879
smart contract

2173
01:27:48,158 --> 01:27:51,919
what you can do is click get started for

2174
01:27:50,880 --> 01:27:53,759
free

2175
01:27:51,920 --> 01:27:55,920
once you do that you're gonna have to

2176
01:27:53,760 --> 01:27:58,880
enter your credentials and create your

2177
01:27:55,920 --> 01:28:01,439
account but as you can see in my case it

2178
01:27:58,880 --> 01:28:03,280
immediately logged me in so after you

2179
01:28:01,439 --> 01:28:05,998
create your account you should see a

2180
01:28:03,279 --> 01:28:08,237
dashboard page that looks like this

2181
01:28:06,000 --> 01:28:10,320
as you can see i've already been testing

2182
01:28:08,238 --> 01:28:12,799
with a lot of different ethereum wallets

2183
01:28:10,319 --> 01:28:14,718
and different networks but i decided

2184
01:28:12,800 --> 01:28:15,679
that robsten is the best one to test

2185
01:28:14,719 --> 01:28:18,158
with

2186
01:28:15,679 --> 01:28:20,800
so now you can click the create app

2187
01:28:18,158 --> 01:28:24,398
button on the top right and let's give

2188
01:28:20,800 --> 01:28:27,040
it a name something like crypt

2189
01:28:24,399 --> 01:28:30,078
of course feel free to use your own name

2190
01:28:27,039 --> 01:28:31,119
in the description we can say blockchain

2191
01:28:30,079 --> 01:28:32,319
smart

2192
01:28:31,119 --> 01:28:33,759
contract

2193
01:28:32,319 --> 01:28:34,959
the environment is going to be

2194
01:28:33,760 --> 01:28:37,440
development

2195
01:28:34,960 --> 01:28:40,238
the chain is going to be ethereum and

2196
01:28:37,439 --> 01:28:41,919
the network is going to be robsten

2197
01:28:40,238 --> 01:28:44,238
it's incredibly important that you

2198
01:28:41,920 --> 01:28:46,559
choose the robsten test network for this

2199
01:28:44,238 --> 01:28:48,959
to work of course later on you can

2200
01:28:46,560 --> 01:28:51,439
deploy the same contract on the main

2201
01:28:48,960 --> 01:28:53,280
ethereum network but for now we're gonna

2202
01:28:51,439 --> 01:28:56,479
stay on the test network so that we

2203
01:28:53,279 --> 01:28:58,718
don't have to pay real ethereum gas fees

2204
01:28:56,479 --> 01:29:00,959
let's click create app

2205
01:28:58,719 --> 01:29:02,480
let's click view details for our newly

2206
01:29:00,960 --> 01:29:05,839
created application

2207
01:29:02,479 --> 01:29:08,559
and now you can click view key in here

2208
01:29:05,840 --> 01:29:11,040
you're going to get an http key which

2209
01:29:08,560 --> 01:29:12,718
you need to copy now we can go back to

2210
01:29:11,039 --> 01:29:15,838
our application

2211
01:29:12,719 --> 01:29:18,840
more specifically we can go to

2212
01:29:15,840 --> 01:29:18,840
hardhat.config.js

2213
01:29:19,039 --> 01:29:24,479
we can delete this entire file and for

2214
01:29:21,679 --> 01:29:26,719
now simply paste this here as a comment

2215
01:29:24,479 --> 01:29:28,959
so that you don't lose it to start

2216
01:29:26,719 --> 01:29:31,199
creating our hard hat config

2217
01:29:28,960 --> 01:29:33,280
let's first require

2218
01:29:31,198 --> 01:29:34,319
that's going to be a string

2219
01:29:33,279 --> 01:29:37,118
add

2220
01:29:34,319 --> 01:29:39,439
nomiclabs forward slash hard hat and

2221
01:29:37,119 --> 01:29:42,237
then that's going to be waffle

2222
01:29:39,439 --> 01:29:44,479
if we google what hard hat waffle is you

2223
01:29:42,238 --> 01:29:47,438
can see that it is a plugin to build

2224
01:29:44,479 --> 01:29:49,599
smart contract tests so that's exactly

2225
01:29:47,439 --> 01:29:52,078
what we're going to use it for

2226
01:29:49,600 --> 01:29:55,760
going back to our application we can

2227
01:29:52,079 --> 01:29:57,918
create a module dot exports file and in

2228
01:29:55,760 --> 01:29:58,960
here we're going to export our hard hat

2229
01:29:57,920 --> 01:30:01,120
config

2230
01:29:58,960 --> 01:30:03,120
we first need to specify the version of

2231
01:30:01,119 --> 01:30:06,559
solidity that we're going to use which

2232
01:30:03,119 --> 01:30:09,119
is going to be 0.8.0

2233
01:30:06,560 --> 01:30:10,399
then we can specify the networks we want

2234
01:30:09,119 --> 01:30:13,038
to work on

2235
01:30:10,399 --> 01:30:15,599
that's going to be an object of networks

2236
01:30:13,039 --> 01:30:19,039
and we can call it robsten

2237
01:30:15,600 --> 01:30:21,840
our robsten needs to have a url and this

2238
01:30:19,039 --> 01:30:24,638
is the url that we got from alchemy so

2239
01:30:21,840 --> 01:30:27,1000
right here we can copy this comment and

2240
01:30:24,639 --> 01:30:30,639
paste it here as a string then we need

2241
01:30:28,000 --> 01:30:31,919
just one more thing which is going to be

2242
01:30:30,639 --> 01:30:34,079
accounts

2243
01:30:31,920 --> 01:30:36,238
right here we need to type accounts

2244
01:30:34,079 --> 01:30:38,157
which is going to be equal to an array

2245
01:30:36,238 --> 01:30:40,799
and we need to pass the address of the

2246
01:30:38,158 --> 01:30:42,478
account that we're going to use to fund

2247
01:30:40,800 --> 01:30:44,880
this contract

2248
01:30:42,479 --> 01:30:46,237
more specifically it's not going to be

2249
01:30:44,880 --> 01:30:48,960
an address

2250
01:30:46,238 --> 01:30:51,758
it's going to be metamask and then right

2251
01:30:48,960 --> 01:30:54,879
here you need to click these three dots

2252
01:30:51,760 --> 01:30:55,760
account details and then export private

2253
01:30:54,880 --> 01:30:57,520
key

2254
01:30:55,760 --> 01:30:59,440
that's what we need

2255
01:30:57,520 --> 01:31:00,879
once you click that you'll need to enter

2256
01:30:59,439 --> 01:31:03,677
your password

2257
01:31:00,880 --> 01:31:06,559
click confirm and then you're gonna get

2258
01:31:03,679 --> 01:31:09,600
a private key that you can copy and

2259
01:31:06,560 --> 01:31:12,479
simply paste straight into here

2260
01:31:09,600 --> 01:31:16,080
great now we have our config file

2261
01:31:12,479 --> 01:31:18,158
we have our solidity smart contract and

2262
01:31:16,079 --> 01:31:20,079
we have a script that we're gonna use to

2263
01:31:18,158 --> 01:31:22,717
deploy that contract

2264
01:31:20,079 --> 01:31:25,519
everything seems to be ready

2265
01:31:22,719 --> 01:31:29,119
so what do we need to do to deploy it

2266
01:31:25,520 --> 01:31:30,560
let's open up the view and then terminal

2267
01:31:29,119 --> 01:31:33,519
let's clear it

2268
01:31:30,560 --> 01:31:34,718
and let's run the command mpx

2269
01:31:33,520 --> 01:31:35,678
hard hat

2270
01:31:34,719 --> 01:31:39,999
run

2271
01:31:35,679 --> 01:31:42,238
scripts forward slash deploy dot js

2272
01:31:40,000 --> 01:31:43,600
dash dash network

2273
01:31:42,238 --> 01:31:46,238
robston

2274
01:31:43,600 --> 01:31:48,560
and let's press enter

2275
01:31:46,238 --> 01:31:50,879
as you can see our contract compiled

2276
01:31:48,560 --> 01:31:53,119
successfully and now we are waiting for

2277
01:31:50,880 --> 01:31:55,120
the terminal to give us the address of

2278
01:31:53,119 --> 01:31:58,479
the deployed contract

2279
01:31:55,119 --> 01:32:01,279
and there we go transactions deployed

2280
01:31:58,479 --> 01:32:03,677
too and now make sure to copy this we're

2281
01:32:01,279 --> 01:32:05,519
going to use this back in the client

2282
01:32:03,679 --> 01:32:08,320
side of our application

2283
01:32:05,520 --> 01:32:11,119
so let's go to the client side

2284
01:32:08,319 --> 01:32:15,439
go to the source and let's create a new

2285
01:32:11,119 --> 01:32:18,237
folder called utils or utility functions

2286
01:32:15,439 --> 01:32:21,879
inside of here we can create a new file

2287
01:32:18,238 --> 01:32:21,879
called constants.js

2288
01:32:22,079 --> 01:32:27,359
inside of here we can say export

2289
01:32:25,119 --> 01:32:29,279
const contract

2290
01:32:27,359 --> 01:32:31,439
address

2291
01:32:29,279 --> 01:32:33,838
and that's going to be equal to

2292
01:32:31,439 --> 01:32:37,038
to that address you just copied from the

2293
01:32:33,840 --> 01:32:39,439
terminal right here but that address was

2294
01:32:37,039 --> 01:32:42,157
not the only thing that was generated

2295
01:32:39,439 --> 01:32:44,399
once we run the deploy command

2296
01:32:42,158 --> 01:32:46,398
the other thing that was generated was

2297
01:32:44,399 --> 01:32:47,838
in the smart contract

2298
01:32:46,399 --> 01:32:49,039
artifacts

2299
01:32:47,840 --> 01:32:50,880
contracts

2300
01:32:49,039 --> 01:32:52,398
transactions that sold

2301
01:32:50,880 --> 01:32:55,399
and then right here transactions

2302
01:32:52,399 --> 01:32:55,399
transactions.json

2303
01:32:55,679 --> 01:33:02,079
this is called an abi

2304
01:32:58,479 --> 01:33:05,118
and an abi is the contract application

2305
01:33:02,079 --> 01:33:06,958
binary interface that's the standard way

2306
01:33:05,119 --> 01:33:09,918
to interact with contracts in the

2307
01:33:06,960 --> 01:33:11,1000
ethereum ecosystem both from outside of

2308
01:33:09,920 --> 01:33:14,880
the blockchain and for contract to

2309
01:33:12,000 --> 01:33:17,519
contract interactions this contains all

2310
01:33:14,880 --> 01:33:18,638
the information about our specific smart

2311
01:33:17,520 --> 01:33:21,800
contract

2312
01:33:18,639 --> 01:33:23,360
so we need to copy this entire

2313
01:33:21,800 --> 01:33:26,319
transactions.json

2314
01:33:23,359 --> 01:33:29,759
and we need to paste it into utils more

2315
01:33:26,319 --> 01:33:32,759
specifically create a new file called

2316
01:33:29,760 --> 01:33:32,760
transactions.json

2317
01:33:33,679 --> 01:33:40,400
and just paste it right here

2318
01:33:37,520 --> 01:33:42,159
and then back in constants we can import

2319
01:33:40,399 --> 01:33:44,559
that api

2320
01:33:42,158 --> 01:33:46,518
import api from

2321
01:33:44,560 --> 01:33:48,399
dot slash

2322
01:33:46,520 --> 01:33:50,718
transactions.json

2323
01:33:48,399 --> 01:33:53,759
and just alongside exporting our

2324
01:33:50,719 --> 01:33:57,360
contract address we also need to export

2325
01:33:53,760 --> 01:33:59,359
const contract avi which is going to be

2326
01:33:57,359 --> 01:34:01,198
equal to abi

2327
01:33:59,359 --> 01:34:04,078
dot abi

2328
01:34:01,198 --> 01:34:07,358
now we have everything we need inside of

2329
01:34:04,079 --> 01:34:10,479
our react application to interact with

2330
01:34:07,359 --> 01:34:13,278
our ethereum smart contract

2331
01:34:10,479 --> 01:34:15,759
and let's also check if we wasted some

2332
01:34:13,279 --> 01:34:17,759
ethereum gas fees for the contract

2333
01:34:15,760 --> 01:34:19,920
deployment process

2334
01:34:17,760 --> 01:34:23,678
if we go back to our application you can

2335
01:34:19,920 --> 01:34:27,439
notice that now we have 0.1482

2336
01:34:23,679 --> 01:34:31,280
which means that 0 0 28 ethereum was

2337
01:34:27,439 --> 01:34:33,839
wasted or spent on gas fees

2338
01:34:31,279 --> 01:34:36,157
but let's not worry about that at all

2339
01:34:33,840 --> 01:34:38,239
that's great because now we actually

2340
01:34:36,158 --> 01:34:40,799
have a smart contract that's going to

2341
01:34:38,238 --> 01:34:42,478
save and store all of our transactions

2342
01:34:40,800 --> 01:34:44,800
in the blockchain

2343
01:34:42,479 --> 01:34:48,238
now that we've built the react welcome

2344
01:34:44,800 --> 01:34:50,319
part of our site and deployed an entire

2345
01:34:48,238 --> 01:34:52,319
ethereum smart contract

2346
01:34:50,319 --> 01:34:55,519
now we are ready to connect the smart

2347
01:34:52,319 --> 01:34:58,078
contract to our react application and

2348
01:34:55,520 --> 01:35:00,560
actually make it send ethereum through

2349
01:34:58,079 --> 01:35:03,039
the blockchain network let's go ahead

2350
01:35:00,560 --> 01:35:06,479
and do that right away

2351
01:35:03,039 --> 01:35:09,758
we're going to start by cding back into

2352
01:35:06,479 --> 01:35:12,879
our react application with cd dot and

2353
01:35:09,760 --> 01:35:15,599
then cb client and then we can also run

2354
01:35:12,880 --> 01:35:17,840
npm run dev to have our application up

2355
01:35:15,600 --> 01:35:19,760
on localhost 3000

2356
01:35:17,840 --> 01:35:22,239
now that that is done we can close all

2357
01:35:19,760 --> 01:35:24,399
of our files and folders just so we have

2358
01:35:22,238 --> 01:35:26,478
a clean working environment

2359
01:35:24,399 --> 01:35:28,637
and we can go to client

2360
01:35:26,479 --> 01:35:31,519
source and then we can right click the

2361
01:35:28,639 --> 01:35:33,520
source and create a new folder

2362
01:35:31,520 --> 01:35:34,718
that folder is going to be called

2363
01:35:33,520 --> 01:35:37,359
context

2364
01:35:34,719 --> 01:35:39,440
we're going to use react context api

2365
01:35:37,359 --> 01:35:41,677
around our entire application that's

2366
01:35:39,439 --> 01:35:43,839
going to only serve the purpose of

2367
01:35:41,679 --> 01:35:46,639
connecting to the blockchain that's

2368
01:35:43,840 --> 01:35:49,040
going to allow us not to write our logic

2369
01:35:46,639 --> 01:35:50,719
all across all of our components we're

2370
01:35:49,039 --> 01:35:53,918
only going to write it in one

2371
01:35:50,719 --> 01:35:55,520
centralized place and that's going to be

2372
01:35:53,920 --> 01:35:58,880
transaction

2373
01:35:55,520 --> 01:36:01,600
context dot jsx

2374
01:35:58,880 --> 01:36:03,040
inside of here we can import

2375
01:36:01,600 --> 01:36:06,239
react

2376
01:36:03,039 --> 01:36:09,117
as well as use effect

2377
01:36:06,238 --> 01:36:11,279
and also use state

2378
01:36:09,118 --> 01:36:12,638
and these are of course coming from

2379
01:36:11,279 --> 01:36:15,118
react

2380
01:36:12,639 --> 01:36:17,520
then we're going to import in curly

2381
01:36:15,118 --> 01:36:19,839
braces ethers

2382
01:36:17,520 --> 01:36:22,239
and that's going to be coming from

2383
01:36:19,840 --> 01:36:26,320
eaters package

2384
01:36:22,238 --> 01:36:29,598
then we need to import the contract abi

2385
01:36:26,319 --> 01:36:31,838
as well as the contract address

2386
01:36:29,600 --> 01:36:32,959
and these are the things that we created

2387
01:36:31,840 --> 01:36:35,279
just now

2388
01:36:32,960 --> 01:36:37,440
in dot dot slash

2389
01:36:35,279 --> 01:36:38,879
utils forward slash

2390
01:36:37,439 --> 01:36:41,519
constants

2391
01:36:38,880 --> 01:36:43,759
we also need to create our react context

2392
01:36:41,520 --> 01:36:45,439
and we can do that by saying export

2393
01:36:43,760 --> 01:36:49,760
const

2394
01:36:45,439 --> 01:36:52,559
transaction context is equal to react

2395
01:36:49,760 --> 01:36:53,679
dot create context

2396
01:36:52,560 --> 01:36:56,159
great

2397
01:36:53,679 --> 01:36:59,360
also since we're using metamask we're

2398
01:36:56,158 --> 01:37:01,677
getting access to the ethereum object

2399
01:36:59,359 --> 01:37:04,237
which we can get by typing const in

2400
01:37:01,679 --> 01:37:06,560
curly braces ethereum

2401
01:37:04,238 --> 01:37:08,319
and that's going to be equal to window

2402
01:37:06,560 --> 01:37:10,920
we are basically destructuring the

2403
01:37:08,319 --> 01:37:13,918
ethereum object from

2404
01:37:10,920 --> 01:37:15,1000
window.ethereum and that is one really

2405
01:37:13,920 --> 01:37:18,799
interesting thing if we go back to our

2406
01:37:16,000 --> 01:37:22,080
browser go to inspect

2407
01:37:18,800 --> 01:37:25,1000
and then open up the console right here

2408
01:37:22,079 --> 01:37:28,399
and go to info we can try typing window

2409
01:37:26,000 --> 01:37:30,400
dot ethereum

2410
01:37:28,399 --> 01:37:32,479
and would you look at that there is an

2411
01:37:30,399 --> 01:37:34,958
entire object that's going to allow us

2412
01:37:32,479 --> 01:37:37,919
to handle our ethereum and blockchain

2413
01:37:34,960 --> 01:37:40,238
relation and all of this is here only

2414
01:37:37,920 --> 01:37:41,1000
due to the fact that we installed and

2415
01:37:40,238 --> 01:37:43,999
set up metamask

2416
01:37:42,000 --> 01:37:47,440
okay now we know that we have our

2417
01:37:44,000 --> 01:37:50,158
contract api contract address ethereum

2418
01:37:47,439 --> 01:37:52,318
window object and we are ready to access

2419
01:37:50,158 --> 01:37:54,478
the blockchain we are first going to

2420
01:37:52,319 --> 01:37:57,599
create a special function that's going

2421
01:37:54,479 --> 01:38:00,839
to fetch our ethereum contract and we

2422
01:37:57,600 --> 01:38:03,519
can do that by saying const get

2423
01:38:00,840 --> 01:38:06,080
ethereum contract

2424
01:38:03,520 --> 01:38:07,198
and that's going to be equal to an arrow

2425
01:38:06,079 --> 01:38:09,118
function

2426
01:38:07,198 --> 01:38:10,238
inside of there we can type const

2427
01:38:09,118 --> 01:38:12,479
provider

2428
01:38:10,238 --> 01:38:13,599
is equal to new

2429
01:38:12,479 --> 01:38:15,439
ethers

2430
01:38:13,600 --> 01:38:17,039
and that is the package we installed

2431
01:38:15,439 --> 01:38:18,717
previously

2432
01:38:17,039 --> 01:38:19,677
dot providers

2433
01:38:18,719 --> 01:38:22,638
dot

2434
01:38:19,679 --> 01:38:25,440
web 3 provider and then we call that as

2435
01:38:22,639 --> 01:38:28,238
a function and pass in

2436
01:38:25,439 --> 01:38:30,318
ethereum window object

2437
01:38:28,238 --> 01:38:33,518
now that we have our provider we can

2438
01:38:30,319 --> 01:38:36,158
also get the signer const signer is

2439
01:38:33,520 --> 01:38:39,119
equal to provider dot

2440
01:38:36,158 --> 01:38:40,398
get signer and we don't have to pass any

2441
01:38:39,118 --> 01:38:42,799
parameters

2442
01:38:40,399 --> 01:38:44,479
of course let's go ahead and console.log

2443
01:38:42,800 --> 01:38:47,199
all of these things

2444
01:38:44,479 --> 01:38:48,637
right here inside of an object

2445
01:38:47,198 --> 01:38:51,358
provider

2446
01:38:48,639 --> 01:38:53,198
as well as signer and we're going to

2447
01:38:51,359 --> 01:38:56,078
also have the third thing which is going

2448
01:38:53,198 --> 01:38:57,438
to be const transaction

2449
01:38:56,079 --> 01:39:00,479
contract

2450
01:38:57,439 --> 01:39:02,399
is equal to new ethers

2451
01:39:00,479 --> 01:39:05,278
dot contract

2452
01:39:02,399 --> 01:39:09,118
and then we pass in the contract address

2453
01:39:05,279 --> 01:39:12,638
we pass in the contract abi right here

2454
01:39:09,118 --> 01:39:14,959
and we pass in the signer these are the

2455
01:39:12,639 --> 01:39:17,360
three ingredients that we need to fetch

2456
01:39:14,960 --> 01:39:18,399
our contract the contract address

2457
01:39:17,359 --> 01:39:20,718
remember

2458
01:39:18,399 --> 01:39:21,758
we have it here from when we deploy the

2459
01:39:20,719 --> 01:39:24,480
project

2460
01:39:21,760 --> 01:39:27,040
then the contract api which is this json

2461
01:39:24,479 --> 01:39:28,717
file and then finally the signer which

2462
01:39:27,039 --> 01:39:30,398
we're console logging right now so

2463
01:39:28,719 --> 01:39:33,039
you'll see what that is

2464
01:39:30,399 --> 01:39:35,998
and we can also console log the

2465
01:39:33,039 --> 01:39:38,399
transaction contract so once we actually

2466
01:39:36,000 --> 01:39:39,678
call this function we're gonna get this

2467
01:39:38,399 --> 01:39:41,599
kansa log

2468
01:39:39,679 --> 01:39:43,679
but right now we have to create our

2469
01:39:41,600 --> 01:39:45,840
context because where are we going to

2470
01:39:43,679 --> 01:39:47,679
call this we have to have a specific

2471
01:39:45,840 --> 01:39:50,559
place where it's going to serve a

2472
01:39:47,679 --> 01:39:52,879
purpose for that reason we can create a

2473
01:39:50,560 --> 01:39:54,399
new export const

2474
01:39:52,880 --> 01:39:56,080
transaction

2475
01:39:54,399 --> 01:39:58,318
provider

2476
01:39:56,079 --> 01:40:01,117
and that's going to be a react arrow

2477
01:39:58,319 --> 01:40:03,519
function and every context provider

2478
01:40:01,118 --> 01:40:06,478
needs to get one thing from the props

2479
01:40:03,520 --> 01:40:09,119
and that thing is children

2480
01:40:06,479 --> 01:40:11,839
every context provider also needs to

2481
01:40:09,118 --> 01:40:14,799
return something and this return

2482
01:40:11,840 --> 01:40:17,359
statement is in most cases just the

2483
01:40:14,800 --> 01:40:20,800
context so transaction context right

2484
01:40:17,359 --> 01:40:23,198
here and then dot provider

2485
01:40:20,800 --> 01:40:25,678
that way we're wrapping our entire react

2486
01:40:23,198 --> 01:40:27,759
application with all of the data that's

2487
01:40:25,679 --> 01:40:30,320
going to get passed into it

2488
01:40:27,760 --> 01:40:32,880
and inside of here we have to render the

2489
01:40:30,319 --> 01:40:35,197
children that means that whatever we

2490
01:40:32,880 --> 01:40:37,519
wrap inside of this transaction provider

2491
01:40:35,198 --> 01:40:41,279
is going to be rented and it's going to

2492
01:40:37,520 --> 01:40:42,800
have access to this value object

2493
01:40:41,279 --> 01:40:45,279
let me show you what i mean we're going

2494
01:40:42,800 --> 01:40:46,960
to take this transaction provider

2495
01:40:45,279 --> 01:40:50,078
go into domain

2496
01:40:46,960 --> 01:40:52,320
and right here we can import it let's do

2497
01:40:50,079 --> 01:40:54,237
so by saying import

2498
01:40:52,319 --> 01:40:55,598
transaction

2499
01:40:54,238 --> 01:40:57,919
provider

2500
01:40:55,600 --> 01:40:59,760
and that's going to be coming from dot

2501
01:40:57,920 --> 01:41:02,559
slash context

2502
01:40:59,760 --> 01:41:04,638
forward slash transaction context

2503
01:41:02,560 --> 01:41:07,678
the only thing we have to do

2504
01:41:04,639 --> 01:41:11,360
is wrap our application

2505
01:41:07,679 --> 01:41:12,959
with a so-called transaction provider

2506
01:41:11,359 --> 01:41:14,399
there we go

2507
01:41:12,960 --> 01:41:16,158
put this here

2508
01:41:14,399 --> 01:41:18,479
and that's it

2509
01:41:16,158 --> 01:41:21,279
now our entire application is going to

2510
01:41:18,479 --> 01:41:22,479
have access to the data that we pass

2511
01:41:21,279 --> 01:41:25,678
into it

2512
01:41:22,479 --> 01:41:29,038
and by data i mean whatever we put in

2513
01:41:25,679 --> 01:41:30,959
here if i say value is equal to test

2514
01:41:29,039 --> 01:41:33,678
let's see if we can get this value of

2515
01:41:30,960 --> 01:41:36,719
test somewhere else in our code for

2516
01:41:33,679 --> 01:41:37,919
example in the components and then

2517
01:41:36,719 --> 01:41:40,158
welcome

2518
01:41:37,920 --> 01:41:43,118
to get our data we need to go to the top

2519
01:41:40,158 --> 01:41:44,839
of the component and then import

2520
01:41:43,118 --> 01:41:47,518
that's going to be

2521
01:41:44,840 --> 01:41:49,519
transaction context

2522
01:41:47,520 --> 01:41:50,879
coming from

2523
01:41:49,520 --> 01:41:53,439
dot dot slash

2524
01:41:50,880 --> 01:41:54,638
context forward slash transaction

2525
01:41:53,439 --> 01:41:57,519
context

2526
01:41:54,639 --> 01:42:00,560
and also we have to import

2527
01:41:57,520 --> 01:42:03,039
react and with react we have to import

2528
01:42:00,560 --> 01:42:05,1000
the use context hook

2529
01:42:03,039 --> 01:42:08,718
and this is of course coming from react

2530
01:42:06,000 --> 01:42:11,280
now inside of our component just at the

2531
01:42:08,719 --> 01:42:13,199
top we can simply say const

2532
01:42:11,279 --> 01:42:15,599
destructure the value

2533
01:42:13,198 --> 01:42:18,638
and that's going to be equal to

2534
01:42:15,600 --> 01:42:20,960
use context and then we call it as a

2535
01:42:18,639 --> 01:42:22,799
hook and of course we need to provide

2536
01:42:20,960 --> 01:42:25,360
the name of the context we want to

2537
01:42:22,800 --> 01:42:27,439
access in this case that's the

2538
01:42:25,359 --> 01:42:29,759
transaction context

2539
01:42:27,439 --> 01:42:31,519
finally let's try to console.log the

2540
01:42:29,760 --> 01:42:34,080
value

2541
01:42:31,520 --> 01:42:36,960
if that works that means that we are

2542
01:42:34,079 --> 01:42:39,279
transferring all the data from this file

2543
01:42:36,960 --> 01:42:40,480
successfully to any of all of our

2544
01:42:39,279 --> 01:42:42,479
components

2545
01:42:40,479 --> 01:42:45,118
back in our application we can see that

2546
01:42:42,479 --> 01:42:48,318
we got test from the line 25 of our

2547
01:42:45,118 --> 01:42:51,118
welcome jsx file that means that the

2548
01:42:48,319 --> 01:42:52,637
data has been successfully transferred

2549
01:42:51,118 --> 01:42:55,038
of course we don't want to simply

2550
01:42:52,639 --> 01:42:57,119
transfer a value of test we want to

2551
01:42:55,039 --> 01:42:59,439
transfer some data that's going to help

2552
01:42:57,118 --> 01:43:01,598
us connect to the blockchain

2553
01:42:59,439 --> 01:43:03,998
more specifically we're going to have a

2554
01:43:01,600 --> 01:43:05,199
new function inside of here that's going

2555
01:43:04,000 --> 01:43:07,759
to be called

2556
01:43:05,198 --> 01:43:08,718
const check

2557
01:43:07,760 --> 01:43:10,400
if

2558
01:43:08,719 --> 01:43:11,599
wallet is

2559
01:43:10,399 --> 01:43:14,157
connected

2560
01:43:11,600 --> 01:43:17,359
so check if wallet is connected is an

2561
01:43:14,158 --> 01:43:20,238
async function like this

2562
01:43:17,359 --> 01:43:24,479
and inside of there we can check if

2563
01:43:20,238 --> 01:43:27,198
there is no ethereum object in that case

2564
01:43:24,479 --> 01:43:30,398
we can return the alert that's gonna say

2565
01:43:27,198 --> 01:43:32,319
please install metamask

2566
01:43:30,399 --> 01:43:34,637
because we cannot do any of this if the

2567
01:43:32,319 --> 01:43:36,799
user hasn't installed metamask

2568
01:43:34,639 --> 01:43:39,760
then we need to get our metamask

2569
01:43:36,800 --> 01:43:42,800
connected accounts and we can do that by

2570
01:43:39,760 --> 01:43:43,760
saying const accounts is equal to a

2571
01:43:42,800 --> 01:43:46,320
weight

2572
01:43:43,760 --> 01:43:49,040
ethereum dot request

2573
01:43:46,319 --> 01:43:51,279
and we need to specify an object that's

2574
01:43:49,039 --> 01:43:53,359
going to include the method and then in

2575
01:43:51,279 --> 01:43:55,759
here we can say what do we want to

2576
01:43:53,359 --> 01:43:58,319
request and that's going to be eth

2577
01:43:55,760 --> 01:44:00,718
underscore accounts now we can

2578
01:43:58,319 --> 01:44:02,958
console.log that to see if we are indeed

2579
01:44:00,719 --> 01:44:05,840
getting something

2580
01:44:02,960 --> 01:44:08,080
and of course we also need a use effect

2581
01:44:05,840 --> 01:44:10,479
because we need to call this function so

2582
01:44:08,079 --> 01:44:11,358
i'm going to create a use effect right

2583
01:44:10,479 --> 01:44:14,479
here

2584
01:44:11,359 --> 01:44:17,439
and we're going to call check if wallet

2585
01:44:14,479 --> 01:44:19,358
is connected right inside of there

2586
01:44:17,439 --> 01:44:20,959
and it's going to happen only at the

2587
01:44:19,359 --> 01:44:22,157
start only at the load of our

2588
01:44:20,960 --> 01:44:24,319
application

2589
01:44:22,158 --> 01:44:27,118
let's see if we indeed do get our

2590
01:44:24,319 --> 01:44:29,998
accounts i reloaded the page and we can

2591
01:44:27,118 --> 01:44:31,759
see just an empty array meaning there

2592
01:44:30,000 --> 01:44:34,719
are no accounts

2593
01:44:31,760 --> 01:44:37,199
so it might be a good idea to create a

2594
01:44:34,719 --> 01:44:38,080
functionality for our connect wallet

2595
01:44:37,198 --> 01:44:39,839
button

2596
01:44:38,079 --> 01:44:42,079
that way we'll be able to click this

2597
01:44:39,840 --> 01:44:44,479
button and connect our localhost

2598
01:44:42,079 --> 01:44:47,039
application to metamask

2599
01:44:44,479 --> 01:44:49,759
the function for connecting our wallet

2600
01:44:47,039 --> 01:44:52,638
is also going to be in our context so

2601
01:44:49,760 --> 01:44:54,479
right here we can create a new function

2602
01:44:52,639 --> 01:44:56,959
const connect

2603
01:44:54,479 --> 01:44:59,439
wallet is equal to

2604
01:44:56,960 --> 01:45:02,639
async arrow function

2605
01:44:59,439 --> 01:45:03,998
and we can create a try and catch block

2606
01:45:02,639 --> 01:45:05,519
because we need to be sure that this

2607
01:45:04,000 --> 01:45:07,759
succeeds

2608
01:45:05,520 --> 01:45:10,319
inside of the try we again need to check

2609
01:45:07,760 --> 01:45:12,319
if they have metamask installed so we're

2610
01:45:10,319 --> 01:45:15,359
going to add this here

2611
01:45:12,319 --> 01:45:17,279
then we have to request a metamask

2612
01:45:15,359 --> 01:45:20,479
account which is going to be really

2613
01:45:17,279 --> 01:45:21,998
similar to this line so we can copy it

2614
01:45:20,479 --> 01:45:24,157
right here

2615
01:45:22,000 --> 01:45:26,400
but this time we're not going to check

2616
01:45:24,158 --> 01:45:28,158
for ethereum accounts we're going to

2617
01:45:26,399 --> 01:45:30,717
check for ethereum

2618
01:45:28,158 --> 01:45:33,677
request accounts

2619
01:45:30,719 --> 01:45:35,999
request accounts with a capital a right

2620
01:45:33,679 --> 01:45:37,839
here that way we're gonna get all the

2621
01:45:36,000 --> 01:45:40,000
accounts and then the user will be able

2622
01:45:37,840 --> 01:45:41,840
to choose to connect one

2623
01:45:40,000 --> 01:45:44,320
or in this case

2624
01:45:41,840 --> 01:45:45,840
we can set the current account to be

2625
01:45:44,319 --> 01:45:48,958
equal to

2626
01:45:45,840 --> 01:45:51,280
accounts and then zero that's going to

2627
01:45:48,960 --> 01:45:53,679
connect that first account

2628
01:45:51,279 --> 01:45:55,678
set current account is going to be a set

2629
01:45:53,679 --> 01:45:57,999
state and you can see that because it's

2630
01:45:55,679 --> 01:46:00,560
starting with set but we haven't yet

2631
01:45:58,000 --> 01:46:03,440
created it so at the top of our

2632
01:46:00,560 --> 01:46:05,600
transaction provider we can create a new

2633
01:46:03,439 --> 01:46:07,919
use state field

2634
01:46:05,600 --> 01:46:08,959
and that use state field is going to be

2635
01:46:07,920 --> 01:46:10,839
called

2636
01:46:08,960 --> 01:46:14,639
connected

2637
01:46:10,840 --> 01:46:16,800
account and also set connected account

2638
01:46:14,639 --> 01:46:19,440
and at the start that's going to be

2639
01:46:16,800 --> 01:46:21,599
equal to an empty string

2640
01:46:19,439 --> 01:46:25,439
great we also have to provide some error

2641
01:46:21,600 --> 01:46:29,279
handling so we can console.log the error

2642
01:46:25,439 --> 01:46:31,278
and we can also throw new error

2643
01:46:29,279 --> 01:46:31,999
that's going to say

2644
01:46:31,279 --> 01:46:33,759
no

2645
01:46:32,000 --> 01:46:36,158
ethereum

2646
01:46:33,760 --> 01:46:37,1000
object like that

2647
01:46:36,158 --> 01:46:39,118
and of course we need to pass this

2648
01:46:38,000 --> 01:46:42,400
function

2649
01:46:39,118 --> 01:46:44,879
right here connect wallet is equal to

2650
01:46:42,399 --> 01:46:47,038
connect wallet of course if both the key

2651
01:46:44,880 --> 01:46:49,759
and the value is the same in that case

2652
01:46:47,039 --> 01:46:52,079
we only need to provide the key and now

2653
01:46:49,760 --> 01:46:53,280
we're passing this over to all of our

2654
01:46:52,079 --> 01:46:55,279
components

2655
01:46:53,279 --> 01:46:57,198
with all of the components of course

2656
01:46:55,279 --> 01:47:00,237
that's also going to be coming to our

2657
01:46:57,198 --> 01:47:02,238
welcome so right here we can get the

2658
01:47:00,238 --> 01:47:04,478
connect wallet

2659
01:47:02,238 --> 01:47:07,039
or did we say account let me check

2660
01:47:04,479 --> 01:47:09,599
that's going to be connect to wallet

2661
01:47:07,039 --> 01:47:11,598
right here and we can now call that

2662
01:47:09,600 --> 01:47:13,439
function right here

2663
01:47:11,600 --> 01:47:15,840
looks like we won't need this function

2664
01:47:13,439 --> 01:47:18,399
right here because we have one in the

2665
01:47:15,840 --> 01:47:19,599
transaction context and we're calling it

2666
01:47:18,399 --> 01:47:21,677
on the button

2667
01:47:19,600 --> 01:47:24,239
now let's save it and see if something

2668
01:47:21,679 --> 01:47:26,560
happens once we click that button

2669
01:47:24,238 --> 01:47:28,398
i'm going to reload the page and press

2670
01:47:26,560 --> 01:47:30,479
connect wallet

2671
01:47:28,399 --> 01:47:32,958
and there we go there is a meta mask

2672
01:47:30,479 --> 01:47:35,519
notification asking us if we want to

2673
01:47:32,960 --> 01:47:37,519
connect this wallet with metamask and we

2674
01:47:35,520 --> 01:47:38,560
can choose the account one and click

2675
01:47:37,520 --> 01:47:40,879
next

2676
01:47:38,560 --> 01:47:44,479
finally let's click connect

2677
01:47:40,880 --> 01:47:45,679
it's at connecting and now if we reload

2678
01:47:44,479 --> 01:47:46,878
the page

2679
01:47:45,679 --> 01:47:49,760
there we go

2680
01:47:46,880 --> 01:47:52,799
in our transaction context we have our

2681
01:47:49,760 --> 01:47:55,359
connected account that's great

2682
01:47:52,800 --> 01:47:56,960
right here inside of the check if wallet

2683
01:47:55,359 --> 01:47:59,278
is connected

2684
01:47:56,960 --> 01:48:00,560
we can check if there is an account by

2685
01:47:59,279 --> 01:48:01,999
saying if

2686
01:48:00,560 --> 01:48:05,520
accounts

2687
01:48:02,000 --> 01:48:08,719
dot length and then if there is one we

2688
01:48:05,520 --> 01:48:12,319
can simply set the current account to be

2689
01:48:08,719 --> 01:48:14,638
equal to accounts and then zero

2690
01:48:12,319 --> 01:48:16,878
that way at the start of every single

2691
01:48:14,639 --> 01:48:20,158
render we're going to have access to our

2692
01:48:16,880 --> 01:48:23,280
account and then later on in here we

2693
01:48:20,158 --> 01:48:25,598
also want to get all of the transactions

2694
01:48:23,279 --> 01:48:29,038
so we're going to have a function call

2695
01:48:25,600 --> 01:48:31,040
to get all transactions

2696
01:48:29,039 --> 01:48:32,798
but of course we cannot do that yet

2697
01:48:31,039 --> 01:48:35,439
because we don't have the part of our

2698
01:48:32,800 --> 01:48:37,920
page where we can list them out and we

2699
01:48:35,439 --> 01:48:40,078
also haven't sent a single one yet so we

2700
01:48:37,920 --> 01:48:42,158
cannot really check that out and then

2701
01:48:40,079 --> 01:48:45,039
we're gonna have an else part

2702
01:48:42,158 --> 01:48:45,839
and in here we can simply cons a log

2703
01:48:45,039 --> 01:48:48,079
no

2704
01:48:45,840 --> 01:48:50,559
accounts found

2705
01:48:48,079 --> 01:48:53,439
great of course it would also be a good

2706
01:48:50,560 --> 01:48:56,960
idea to wrap all of this in a try and

2707
01:48:53,439 --> 01:48:58,559
catch block so let's do that try and

2708
01:48:56,960 --> 01:49:00,799
catch

2709
01:48:58,560 --> 01:49:03,840
the entire code that we have so far is

2710
01:49:00,800 --> 01:49:06,718
going to go inside of the try

2711
01:49:03,840 --> 01:49:09,118
and then if we are inside of the catch

2712
01:49:06,719 --> 01:49:11,679
that means that there is no ethereum

2713
01:49:09,118 --> 01:49:14,717
object so we can basically copy what we

2714
01:49:11,679 --> 01:49:15,679
have here and paste it here

2715
01:49:14,719 --> 01:49:17,1000
great

2716
01:49:15,679 --> 01:49:20,159
so now at the start of our application

2717
01:49:18,000 --> 01:49:22,158
we're calling if check if wallet is

2718
01:49:20,158 --> 01:49:25,039
connected right here

2719
01:49:22,158 --> 01:49:27,279
and we're setting that current account

2720
01:49:25,039 --> 01:49:29,838
looks like i chose a wrong name right

2721
01:49:27,279 --> 01:49:32,399
here i said connected account but this

2722
01:49:29,840 --> 01:49:33,759
here was supposed to be current

2723
01:49:32,399 --> 01:49:35,597
account

2724
01:49:33,760 --> 01:49:36,559
and that's going to be

2725
01:49:35,599 --> 01:49:39,599
set

2726
01:49:36,560 --> 01:49:42,079
current account there we go now we are

2727
01:49:39,599 --> 01:49:44,400
setting it and we can also pass it

2728
01:49:42,079 --> 01:49:45,998
through context right here

2729
01:49:44,399 --> 01:49:48,717
current account

2730
01:49:46,000 --> 01:49:51,198
now back in our welcome we can also get

2731
01:49:48,719 --> 01:49:54,480
access to the current account variable

2732
01:49:51,198 --> 01:49:59,039
and right here where we have our button

2733
01:49:54,479 --> 01:50:01,038
we can say if there is a current account

2734
01:49:59,039 --> 01:50:02,079
or rather if there isn't a current

2735
01:50:01,039 --> 01:50:04,958
account

2736
01:50:02,079 --> 01:50:07,758
then we want to render this button

2737
01:50:04,960 --> 01:50:09,920
but if there is a current account in

2738
01:50:07,760 --> 01:50:13,119
that case there is no need for us to

2739
01:50:09,920 --> 01:50:15,040
render this button so now if our account

2740
01:50:13,118 --> 01:50:17,677
is connected then we shouldn't be able

2741
01:50:15,039 --> 01:50:20,319
to see this button and that's exactly

2742
01:50:17,679 --> 01:50:21,999
the case we can no longer see the button

2743
01:50:20,319 --> 01:50:23,519
which means that our account is

2744
01:50:22,000 --> 01:50:26,320
connected

2745
01:50:23,520 --> 01:50:28,399
now we have a function for checking if a

2746
01:50:26,319 --> 01:50:30,718
wallet is connected at the start and

2747
01:50:28,399 --> 01:50:31,758
also a function for connecting the

2748
01:50:30,719 --> 01:50:34,800
account

2749
01:50:31,760 --> 01:50:38,080
so now might be a good idea to create

2750
01:50:34,800 --> 01:50:40,239
that one most important function which

2751
01:50:38,079 --> 01:50:43,279
is going to be called const

2752
01:50:40,238 --> 01:50:45,279
send transaction

2753
01:50:43,279 --> 01:50:47,918
that's going to be an async arrow

2754
01:50:45,279 --> 01:50:51,038
function and this is going to be where

2755
01:50:47,920 --> 01:50:53,280
our entire logic for sending and storing

2756
01:50:51,039 --> 01:50:56,079
transactions is going to be

2757
01:50:53,279 --> 01:50:57,118
we can again create a try and catch

2758
01:50:56,079 --> 01:50:59,198
block

2759
01:50:57,118 --> 01:50:59,998
inside of the catch we're going to have

2760
01:50:59,198 --> 01:51:02,158
this

2761
01:51:00,000 --> 01:51:04,639
simplicons logging the error and saying

2762
01:51:02,158 --> 01:51:07,039
there is no ethereum object

2763
01:51:04,639 --> 01:51:09,760
inside of the try we of course have to

2764
01:51:07,039 --> 01:51:11,439
first check if the person has metamask

2765
01:51:09,760 --> 01:51:14,319
installed

2766
01:51:11,439 --> 01:51:17,278
and then below this we have to get the

2767
01:51:14,319 --> 01:51:20,878
data from the form so

2768
01:51:17,279 --> 01:51:23,759
in some way we have to get the data from

2769
01:51:20,880 --> 01:51:27,280
these item fields right here

2770
01:51:23,760 --> 01:51:29,439
all the way to our transaction context

2771
01:51:27,279 --> 01:51:31,597
how are we going to do that

2772
01:51:29,439 --> 01:51:32,878
think about that for a second

2773
01:51:31,599 --> 01:51:35,280
where are we going to create those

2774
01:51:32,880 --> 01:51:36,239
states how are we going to pass that

2775
01:51:35,279 --> 01:51:38,158
data

2776
01:51:36,238 --> 01:51:40,799
the answer is we're going to create

2777
01:51:38,158 --> 01:51:45,039
those states right here inside of our

2778
01:51:40,800 --> 01:51:49,040
context so right here we can say cons

2779
01:51:45,039 --> 01:51:50,157
form data as well as the set form

2780
01:51:49,039 --> 01:51:53,598
data

2781
01:51:50,158 --> 01:51:55,598
and that is equal to use state

2782
01:51:53,599 --> 01:51:58,158
and that's going to be an object that's

2783
01:51:55,599 --> 01:52:00,400
going to have the address

2784
01:51:58,158 --> 01:52:01,759
to property which is going to be set to

2785
01:52:00,399 --> 01:52:03,519
an empty string

2786
01:52:01,760 --> 01:52:05,599
it's also going to have an amount which

2787
01:52:03,520 --> 01:52:07,439
is going to be a string it's going to

2788
01:52:05,599 --> 01:52:10,238
have a keyword which is going to be an

2789
01:52:07,439 --> 01:52:12,318
empty string and a message which is

2790
01:52:10,238 --> 01:52:15,117
again an empty string

2791
01:52:12,319 --> 01:52:17,998
so now that we have that form data we

2792
01:52:15,118 --> 01:52:20,478
also need to create a handle change so

2793
01:52:18,000 --> 01:52:21,599
we can say const handle

2794
01:52:20,479 --> 01:52:23,278
change

2795
01:52:21,599 --> 01:52:24,800
is equal to

2796
01:52:23,279 --> 01:52:26,479
a function

2797
01:52:24,800 --> 01:52:29,280
all handle change functions that

2798
01:52:26,479 --> 01:52:31,597
interact with inputs except the event

2799
01:52:29,279 --> 01:52:34,319
the keyboard event the key press as the

2800
01:52:31,599 --> 01:52:35,280
event and also we're going to pass in a

2801
01:52:34,319 --> 01:52:37,758
name

2802
01:52:35,279 --> 01:52:40,638
this handle change is dynamically going

2803
01:52:37,760 --> 01:52:43,519
to update the form data by saying set

2804
01:52:40,639 --> 01:52:46,719
form data is equal to now whenever

2805
01:52:43,520 --> 01:52:49,199
you're updating the new state using the

2806
01:52:46,719 --> 01:52:51,840
old state you have to provide a callback

2807
01:52:49,198 --> 01:52:55,999
function in the state where as the first

2808
01:52:51,840 --> 01:52:58,239
parameter react gives you prev state

2809
01:52:56,000 --> 01:53:00,400
and we're going to instantly return an

2810
01:52:58,238 --> 01:53:02,718
object and you can do that by first

2811
01:53:00,399 --> 01:53:05,359
using parentheses and then writing an

2812
01:53:02,719 --> 01:53:06,959
object and that object is going to have

2813
01:53:05,359 --> 01:53:08,879
the previous state

2814
01:53:06,960 --> 01:53:12,479
spread like this

2815
01:53:08,880 --> 01:53:16,719
and we can update dynamically name to

2816
01:53:12,479 --> 01:53:19,278
include the e dot target dot value this

2817
01:53:16,719 --> 01:53:21,360
here is nothing block chain related but

2818
01:53:19,279 --> 01:53:22,479
it's definitely a hard to understand

2819
01:53:21,359 --> 01:53:24,798
function

2820
01:53:22,479 --> 01:53:27,358
this requires some a bit more advanced

2821
01:53:24,800 --> 01:53:29,760
react knowledge so if this doesn't make

2822
01:53:27,359 --> 01:53:31,839
a lot of sense try setting up your own

2823
01:53:29,760 --> 01:53:33,760
small react application where you're

2824
01:53:31,840 --> 01:53:36,718
just going to have the form with a few

2825
01:53:33,760 --> 01:53:39,040
inputs and then see how the data changes

2826
01:53:36,719 --> 01:53:41,280
or how the state changes once you type

2827
01:53:39,039 --> 01:53:43,279
into those inputs with this handle

2828
01:53:41,279 --> 01:53:45,118
change function there isn't really an

2829
01:53:43,279 --> 01:53:46,959
easy way to understand this

2830
01:53:45,118 --> 01:53:49,999
rather than trying everything yourself

2831
01:53:46,960 --> 01:53:53,040
on a real project with that said we have

2832
01:53:50,000 --> 01:53:55,839
our form data set form data and also the

2833
01:53:53,039 --> 01:53:59,439
handle change function so let's go ahead

2834
01:53:55,840 --> 01:54:01,599
and pass those to our context object so

2835
01:53:59,439 --> 01:54:02,878
right here we can pass the

2836
01:54:01,599 --> 01:54:03,840
form

2837
01:54:02,880 --> 01:54:07,599
data

2838
01:54:03,840 --> 01:54:10,239
as well as the set form data and also

2839
01:54:07,599 --> 01:54:12,799
the handle change

2840
01:54:10,238 --> 01:54:15,279
now back in our welcome we can accept

2841
01:54:12,800 --> 01:54:17,040
all of these from the context that's

2842
01:54:15,279 --> 01:54:18,238
going to be form

2843
01:54:17,039 --> 01:54:19,197
data

2844
01:54:18,238 --> 01:54:23,839
set

2845
01:54:19,198 --> 01:54:27,278
form data as well as the handle change

2846
01:54:23,840 --> 01:54:29,280
so now if we scroll down right here

2847
01:54:27,279 --> 01:54:31,359
instead of having an empty callback

2848
01:54:29,279 --> 01:54:34,237
function in the handle change we can

2849
01:54:31,359 --> 01:54:37,998
delete that again i held alt and then

2850
01:54:34,238 --> 01:54:40,638
double clicked and in here we can simply

2851
01:54:38,000 --> 01:54:43,759
use the handle change function that's

2852
01:54:40,639 --> 01:54:46,400
going to update these inputs dynamically

2853
01:54:43,760 --> 01:54:48,319
depending on the name of that specific

2854
01:54:46,399 --> 01:54:50,399
input so it's really important that the

2855
01:54:48,319 --> 01:54:52,319
names exactly match

2856
01:54:50,399 --> 01:54:55,359
what you have in the state

2857
01:54:52,319 --> 01:54:57,838
right here with that said let's see

2858
01:54:55,359 --> 01:54:59,839
where do we have to use our set form

2859
01:54:57,840 --> 01:55:02,320
data or anything else

2860
01:54:59,840 --> 01:55:04,479
we have our handle submit here so if we

2861
01:55:02,319 --> 01:55:06,479
click it we have to implement that

2862
01:55:04,479 --> 01:55:09,118
handle submit function

2863
01:55:06,479 --> 01:55:11,759
and right here we can destructure all of

2864
01:55:09,118 --> 01:55:15,198
the properties from the form data

2865
01:55:11,760 --> 01:55:16,399
by saying const in curly braces address

2866
01:55:15,198 --> 01:55:19,999
2

2867
01:55:16,399 --> 01:55:21,439
amount keyword and message

2868
01:55:20,000 --> 01:55:24,960
is equal to

2869
01:55:21,439 --> 01:55:28,078
form data we simply destructured these

2870
01:55:24,960 --> 01:55:29,839
properties then below we can call e dot

2871
01:55:28,079 --> 01:55:32,157
prevent default

2872
01:55:29,840 --> 01:55:34,800
usually when you submit a form the page

2873
01:55:32,158 --> 01:55:36,879
reloads but in react applications we

2874
01:55:34,800 --> 01:55:39,040
want to prevent that from happening and

2875
01:55:36,880 --> 01:55:40,880
that's why we're calling this function

2876
01:55:39,039 --> 01:55:43,758
then we have to check if the user has

2877
01:55:40,880 --> 01:55:46,559
filled in the fields so we can say if

2878
01:55:43,760 --> 01:55:49,840
no address to

2879
01:55:46,560 --> 01:55:53,199
or if there is no amount or if there is

2880
01:55:49,840 --> 01:55:55,519
no keyword or if there is no message in

2881
01:55:53,198 --> 01:55:58,319
that case we simply want to leave this

2882
01:55:55,520 --> 01:56:00,560
function and not submit anything so

2883
01:55:58,319 --> 01:56:02,799
we're going to simply return nothing

2884
01:56:00,560 --> 01:56:05,760
else if the user successfully filled in

2885
01:56:02,800 --> 01:56:09,040
all the fields we can call the send

2886
01:56:05,760 --> 01:56:10,960
transaction function like this

2887
01:56:09,039 --> 01:56:14,558
we've created that send transaction

2888
01:56:10,960 --> 01:56:16,479
function which is right here

2889
01:56:14,560 --> 01:56:19,439
but we haven't passed it through props

2890
01:56:16,479 --> 01:56:22,238
so we can do that right away right here

2891
01:56:19,439 --> 01:56:24,559
send transaction and we can get it right

2892
01:56:22,238 --> 01:56:27,359
here instead of set form data because

2893
01:56:24,560 --> 01:56:29,520
we're not using that so make sure to get

2894
01:56:27,359 --> 01:56:31,519
the sent transaction right here so that

2895
01:56:29,520 --> 01:56:33,760
we can call it at the end

2896
01:56:31,520 --> 01:56:36,239
now we've created that circle we've

2897
01:56:33,760 --> 01:56:38,800
created the state variables here

2898
01:56:36,238 --> 01:56:39,919
passed them through the context value

2899
01:56:38,800 --> 01:56:42,239
right here

2900
01:56:39,920 --> 01:56:44,400
into the welcome the welcome is dealing

2901
01:56:42,238 --> 01:56:46,478
with some data and then it's calling the

2902
01:56:44,399 --> 01:56:48,399
send transaction button

2903
01:56:46,479 --> 01:56:50,879
which is then triggering

2904
01:56:48,399 --> 01:56:53,198
this function where we're gonna get the

2905
01:56:50,880 --> 01:56:55,118
data from the form i know this might be

2906
01:56:53,198 --> 01:56:57,438
a bit hard if you don't have a lot of

2907
01:56:55,118 --> 01:57:00,558
experience with react but keep

2908
01:56:57,439 --> 01:57:02,078
practicing with state inputs and context

2909
01:57:00,560 --> 01:57:04,880
and i'm sure you're gonna get the hang

2910
01:57:02,079 --> 01:57:06,878
of it so now we can destructure the

2911
01:57:04,880 --> 01:57:09,439
values the same way we did in the

2912
01:57:06,880 --> 01:57:11,1000
welcome we can even copy that line right

2913
01:57:09,439 --> 01:57:14,158
here and paste it here

2914
01:57:12,000 --> 01:57:16,719
now we have access to the form data

2915
01:57:14,158 --> 01:57:19,438
variables we also need to get our

2916
01:57:16,719 --> 01:57:21,598
ethereum contract and remember that is

2917
01:57:19,439 --> 01:57:23,519
the function we created right here and

2918
01:57:21,599 --> 01:57:26,238
we haven't called it before

2919
01:57:23,520 --> 01:57:28,718
so what we can do is we can call it

2920
01:57:26,238 --> 01:57:30,079
right inside of the send transaction

2921
01:57:28,719 --> 01:57:32,800
that's going to be

2922
01:57:30,079 --> 01:57:34,479
get ethereum contract

2923
01:57:32,800 --> 01:57:37,040
at the start it's not going to do

2924
01:57:34,479 --> 01:57:39,677
anything besides simply cons logging the

2925
01:57:37,039 --> 01:57:40,958
values so let's see what is it going to

2926
01:57:39,679 --> 01:57:43,679
cause a log

2927
01:57:40,960 --> 01:57:45,759
looks like we have a typo so let me

2928
01:57:43,679 --> 01:57:48,480
quickly go here and check where that

2929
01:57:45,760 --> 01:57:51,359
typo is coming from i'm missing a curly

2930
01:57:48,479 --> 01:57:53,759
brace right here but after i added

2931
01:57:51,359 --> 01:57:56,158
that's looking good and now we of course

2932
01:57:53,760 --> 01:57:57,920
have to click our send now button so let

2933
01:57:56,158 --> 01:57:58,919
me type test here

2934
01:57:57,920 --> 01:58:01,678
let's send

2935
01:57:58,920 --> 01:58:02,880
0.0001 by the way you can use these

2936
01:58:01,679 --> 01:58:03,920
arrows here

2937
01:58:02,880 --> 01:58:06,239
for the

2938
01:58:03,920 --> 01:58:08,559
key award looks like i have a typo there

2939
01:58:06,238 --> 01:58:11,039
we can type test and we can type test

2940
01:58:08,560 --> 01:58:14,079
right here and click send when we do

2941
01:58:11,039 --> 01:58:17,439
that obviously we've got an error saying

2942
01:58:14,079 --> 01:58:20,079
e is not defined to fix that we can go

2943
01:58:17,439 --> 01:58:22,318
to our welcome and simply get the event

2944
01:58:20,079 --> 01:58:24,479
from the parameters i simply forgot

2945
01:58:22,319 --> 01:58:27,597
about that but now that shouldn't be an

2946
01:58:24,479 --> 01:58:29,998
issue anymore going back we can now

2947
01:58:27,599 --> 01:58:32,719
clear the console by pressing this icon

2948
01:58:30,000 --> 01:58:35,519
right here and we can click send now one

2949
01:58:32,719 --> 01:58:38,320
more time and there we go

2950
01:58:35,520 --> 01:58:40,079
we got an object with the provider

2951
01:58:38,319 --> 01:58:42,637
i'm going to make this a bit bigger for

2952
01:58:40,079 --> 01:58:44,718
you provider is going to be web3

2953
01:58:42,639 --> 01:58:46,959
provider with a lot of different

2954
01:58:44,719 --> 01:58:49,598
properties that we can choose from

2955
01:58:46,960 --> 01:58:52,080
then we have the signer as well

2956
01:58:49,599 --> 01:58:54,158
and finally we have the transaction

2957
01:58:52,079 --> 01:58:56,798
contract which is the most important

2958
01:58:54,158 --> 01:58:59,118
part right here and take a look this

2959
01:58:56,800 --> 01:59:02,880
transaction contract is not just any

2960
01:58:59,118 --> 01:59:04,879
contract this is our transaction contact

2961
01:59:02,880 --> 01:59:06,080
containing the function add to

2962
01:59:04,880 --> 01:59:08,880
blockchain

2963
01:59:06,079 --> 01:59:10,798
get all transactions as well as the get

2964
01:59:08,880 --> 01:59:14,158
transaction count if you remember

2965
01:59:10,800 --> 01:59:16,800
correctly these are the exact functions

2966
01:59:14,158 --> 01:59:19,919
that we have created inside of our

2967
01:59:16,800 --> 01:59:22,399
solidity contract that means that now we

2968
01:59:19,920 --> 01:59:24,238
can go to our transaction contract and

2969
01:59:22,399 --> 01:59:26,958
instead of cons logging all of these

2970
01:59:24,238 --> 01:59:30,238
values we can simply return the

2971
01:59:26,960 --> 01:59:33,198
transaction contract now we can go back

2972
01:59:30,238 --> 01:59:36,079
to our send transaction and instead of

2973
01:59:33,198 --> 01:59:39,759
simply calling it we can say const

2974
01:59:36,079 --> 01:59:42,958
transaction contract is equal to

2975
01:59:39,760 --> 01:59:45,119
get ethereum transaction contract

2976
01:59:42,960 --> 01:59:47,280
now we'll be able to use this variable

2977
01:59:45,118 --> 01:59:48,319
to call all of our contract related

2978
01:59:47,279 --> 01:59:51,118
functions

2979
01:59:48,319 --> 01:59:53,918
great we're doing a lot of stuff now and

2980
01:59:51,118 --> 01:59:56,238
i hope it's all coming into place with

2981
01:59:53,920 --> 01:59:58,400
just a few more lines we'll be able to

2982
01:59:56,238 --> 01:59:59,677
send our first transaction through the

2983
01:59:58,399 --> 02:00:02,079
blockchain

2984
01:59:59,679 --> 02:00:04,159
now that we have all the data we need

2985
02:00:02,079 --> 02:00:05,918
let's send some ethereum

2986
02:00:04,158 --> 02:00:07,759
we can say await

2987
02:00:05,920 --> 02:00:10,320
ethereum

2988
02:00:07,760 --> 02:00:12,800
dot request

2989
02:00:10,319 --> 02:00:14,399
and it's going to accept an object with

2990
02:00:12,800 --> 02:00:17,118
all of the options

2991
02:00:14,399 --> 02:00:20,479
the first option is going to be a method

2992
02:00:17,118 --> 02:00:22,238
which is going to be if underscore send

2993
02:00:20,479 --> 02:00:23,838
transaction

2994
02:00:22,238 --> 02:00:26,799
like this

2995
02:00:23,840 --> 02:00:29,599
and then we have to pass some params

2996
02:00:26,800 --> 02:00:31,359
params is going to be an array with an

2997
02:00:29,599 --> 02:00:34,158
object inside of it

2998
02:00:31,359 --> 02:00:36,878
and it's going to have a from property

2999
02:00:34,158 --> 02:00:40,318
and this is going to be the current

3000
02:00:36,880 --> 02:00:43,439
account remember that's what we stored

3001
02:00:40,319 --> 02:00:45,998
straight inside of our state then it's

3002
02:00:43,439 --> 02:00:48,958
also going to accept a to address and

3003
02:00:46,000 --> 02:00:51,599
where can we find that well look we're

3004
02:00:48,960 --> 02:00:55,118
accessing it from the form data so right

3005
02:00:51,599 --> 02:00:57,999
here we can say address 2. then this is

3006
02:00:55,118 --> 02:01:00,238
going to be a weird one but we have to

3007
02:00:58,000 --> 02:01:03,118
choose the amount of gas we want our

3008
02:01:00,238 --> 02:01:05,198
transaction to take or spend and all of

3009
02:01:03,118 --> 02:01:08,318
the values that you use in the ethereum

3010
02:01:05,198 --> 02:01:10,959
network are written in hexadecimal or

3011
02:01:08,319 --> 02:01:13,958
hex so we're going to do something like

3012
02:01:10,960 --> 02:01:13,960
0x5208

3013
02:01:14,319 --> 02:01:19,359
and this has to be in a string now if

3014
02:01:17,359 --> 02:01:22,637
you cannot immediately transfer this to

3015
02:01:19,359 --> 02:01:25,597
decimal let's take this value and google

3016
02:01:22,639 --> 02:01:28,400
something like hex to decimal go to the

3017
02:01:25,599 --> 02:01:29,599
first link and paste it here and click

3018
02:01:28,399 --> 02:01:32,958
convert

3019
02:01:29,599 --> 02:01:36,079
this is going to take 21 000 but it's

3020
02:01:32,960 --> 02:01:39,920
not going to be 21 000 ether it's going

3021
02:01:36,079 --> 02:01:43,439
to be 21 000 way and that's a sub unit

3022
02:01:39,920 --> 02:01:45,118
of ether so if we type 21 000 here

3023
02:01:43,439 --> 02:01:47,597
you're going to notice that that is

3024
02:01:45,118 --> 02:01:47,598
actually

3025
02:01:48,359 --> 02:01:52,637
0.000021 ethereum

3026
02:01:50,479 --> 02:01:54,959
so we have to write everything in

3027
02:01:52,639 --> 02:01:57,198
hexadecimal values that are then

3028
02:01:54,960 --> 02:01:58,879
converted to whey

3029
02:01:57,198 --> 02:02:01,999
and then that's behind the scenes

3030
02:01:58,880 --> 02:02:04,559
actually just ether but way is a subunit

3031
02:02:02,000 --> 02:02:08,238
of ether like a cent is to american

3032
02:02:04,560 --> 02:02:09,678
dollar so now we know that this is 21

3033
02:02:08,238 --> 02:02:12,959
000

3034
02:02:09,679 --> 02:02:15,760
way and we also have to choose the value

3035
02:02:12,960 --> 02:02:16,718
we want to pass so the value is going to

3036
02:02:15,760 --> 02:02:19,280
be

3037
02:02:16,719 --> 02:02:22,480
the amount right the amount we are

3038
02:02:19,279 --> 02:02:24,559
sending right from the form data but

3039
02:02:22,479 --> 02:02:26,879
that's not the case if you think about

3040
02:02:24,560 --> 02:02:28,960
it the amount is going to be something

3041
02:02:26,880 --> 02:02:31,679
like 0.001

3042
02:02:28,960 --> 02:02:34,320
or whatever we choose on our form

3043
02:02:31,679 --> 02:02:36,800
but this here is a decimal number

3044
02:02:34,319 --> 02:02:40,158
so we have to find a way to convert this

3045
02:02:36,800 --> 02:02:42,239
into grey or hexadecimal and we can do

3046
02:02:40,158 --> 02:02:44,158
that by saying const

3047
02:02:42,238 --> 02:02:45,677
parsed amount

3048
02:02:44,158 --> 02:02:50,079
is equal to

3049
02:02:45,679 --> 02:02:53,280
ethers dot utils dot parse

3050
02:02:50,079 --> 02:02:56,157
ether and then in there we can pass in

3051
02:02:53,279 --> 02:02:58,157
the amount the ethers package provides

3052
02:02:56,158 --> 02:03:00,638
us with utility functions that we can

3053
02:02:58,158 --> 02:03:03,279
call and one of those utility functions

3054
02:03:00,639 --> 02:03:05,599
is called parse ether which just parses

3055
02:03:03,279 --> 02:03:08,157
the decimal amount into

3056
02:03:05,599 --> 02:03:10,238
grey hexadecimal amount

3057
02:03:08,158 --> 02:03:13,039
so instead of passing the amount we're

3058
02:03:10,238 --> 02:03:16,478
going to pass in the parsed amount but

3059
02:03:13,039 --> 02:03:17,598
we also have to do dot underscore hex

3060
02:03:16,479 --> 02:03:19,918
like this

3061
02:03:17,599 --> 02:03:21,999
and that's going to be it for our

3062
02:03:19,920 --> 02:03:24,719
ethereum transaction

3063
02:03:22,000 --> 02:03:27,519
but this is only sending ethereum from

3064
02:03:24,719 --> 02:03:30,638
one address to another we also have to

3065
02:03:27,520 --> 02:03:33,359
provide the part where we call the add

3066
02:03:30,639 --> 02:03:35,760
to blockchain function so that we store

3067
02:03:33,359 --> 02:03:39,038
the transaction that just happened

3068
02:03:35,760 --> 02:03:42,159
so let's do that right below this

3069
02:03:39,039 --> 02:03:44,157
to store our transaction we can call the

3070
02:03:42,158 --> 02:03:48,238
transaction contract

3071
02:03:44,158 --> 02:03:50,158
dot add to blockchain as i've mentioned

3072
02:03:48,238 --> 02:03:53,758
that's our own function that we've

3073
02:03:50,158 --> 02:03:57,279
created on this transaction contract

3074
02:03:53,760 --> 02:03:58,559
great so what does our add to blockchain

3075
02:03:57,279 --> 02:04:01,359
function need

3076
02:03:58,560 --> 02:04:04,560
it needs an address the amount the

3077
02:04:01,359 --> 02:04:06,718
message and the keyword so let's take

3078
02:04:04,560 --> 02:04:08,638
these values

3079
02:04:06,719 --> 02:04:12,238
and put them into here

3080
02:04:08,639 --> 02:04:13,119
the address is going to be address 2

3081
02:04:12,238 --> 02:04:15,839
then

3082
02:04:13,118 --> 02:04:18,637
we want to pass the parsed amount

3083
02:04:15,840 --> 02:04:20,880
we want to pass the message and finally

3084
02:04:18,639 --> 02:04:23,280
we want to pass the keyword

3085
02:04:20,880 --> 02:04:24,480
and we can get a transaction hash which

3086
02:04:23,279 --> 02:04:26,638
is a specific

3087
02:04:24,479 --> 02:04:29,759
transaction id

3088
02:04:26,639 --> 02:04:30,480
so we can say transaction hash is equal

3089
02:04:29,760 --> 02:04:31,599
to

3090
02:04:30,479 --> 02:04:33,838
a weight

3091
02:04:31,599 --> 02:04:36,639
transaction contract

3092
02:04:33,840 --> 02:04:38,239
this is an asynchronous action and it

3093
02:04:36,639 --> 02:04:40,879
definitely takes some time for the

3094
02:04:38,238 --> 02:04:42,799
transaction to go through so we need to

3095
02:04:40,880 --> 02:04:44,880
add a loading state

3096
02:04:42,800 --> 02:04:47,1000
right here at the top we can create a

3097
02:04:44,880 --> 02:04:50,239
new use state field which is going to be

3098
02:04:48,000 --> 02:04:52,078
called is loading

3099
02:04:50,238 --> 02:04:53,519
and then at the start it's going to be

3100
02:04:52,078 --> 02:04:56,717
set to false

3101
02:04:53,520 --> 02:04:59,760
then we can scroll down and right here

3102
02:04:56,719 --> 02:05:03,039
below our transaction hash we can say

3103
02:04:59,760 --> 02:05:04,319
set is loading and we're going to set it

3104
02:05:03,039 --> 02:05:07,039
to true

3105
02:05:04,319 --> 02:05:11,597
below our set is loading we can cons a

3106
02:05:07,039 --> 02:05:14,958
log and say in a template string loading

3107
02:05:11,599 --> 02:05:16,079
and then dynamically transaction hash

3108
02:05:14,960 --> 02:05:20,238
and then

3109
02:05:16,078 --> 02:05:21,999
dot hash finally we can call the await

3110
02:05:20,238 --> 02:05:24,638
transaction hash

3111
02:05:22,000 --> 02:05:26,559
dot wait this is going to wait for the

3112
02:05:24,639 --> 02:05:30,238
transaction to be finished

3113
02:05:26,560 --> 02:05:32,800
of course with 1a here i had a typo

3114
02:05:30,238 --> 02:05:35,198
now after that is done we can call these

3115
02:05:32,800 --> 02:05:37,040
two lines again

3116
02:05:35,198 --> 02:05:39,759
but we're gonna set the loading to be

3117
02:05:37,039 --> 02:05:42,638
false and we're gonna say

3118
02:05:39,760 --> 02:05:45,1000
success after that is done we can also

3119
02:05:42,639 --> 02:05:48,719
get the const transaction and that's

3120
02:05:46,000 --> 02:05:51,360
going to be transaction count

3121
02:05:48,719 --> 02:05:54,560
which is going to be equal to a weight

3122
02:05:51,359 --> 02:05:56,559
transaction contract dot get

3123
02:05:54,560 --> 02:05:58,800
transaction count

3124
02:05:56,560 --> 02:06:01,279
and once we get the transaction count we

3125
02:05:58,800 --> 02:06:04,159
can store it in the state so at the top

3126
02:06:01,279 --> 02:06:06,319
we can create one new state

3127
02:06:04,158 --> 02:06:09,358
use state

3128
02:06:06,319 --> 02:06:10,238
and that's going to be transaction

3129
02:06:09,359 --> 02:06:13,198
count

3130
02:06:10,238 --> 02:06:16,478
and set transaction count at the start

3131
02:06:13,198 --> 02:06:19,198
is going to be equal to zero but in this

3132
02:06:16,479 --> 02:06:21,358
case the zero might not be the best way

3133
02:06:19,198 --> 02:06:23,358
to set up our transaction account

3134
02:06:21,359 --> 02:06:25,519
because it's going to get a reset every

3135
02:06:23,359 --> 02:06:28,237
time that we reload our browser

3136
02:06:25,520 --> 02:06:31,598
but we're going to store our transaction

3137
02:06:28,238 --> 02:06:33,919
count into local storage so right here

3138
02:06:31,599 --> 02:06:36,238
we can say local storage

3139
02:06:33,920 --> 02:06:38,320
dot get item

3140
02:06:36,238 --> 02:06:39,278
and then that's going to be transaction

3141
02:06:38,319 --> 02:06:41,439
count

3142
02:06:39,279 --> 02:06:43,439
later on we're going to store it there

3143
02:06:41,439 --> 02:06:45,759
so we can always keep track of the

3144
02:06:43,439 --> 02:06:48,158
current transaction count

3145
02:06:45,760 --> 02:06:50,960
now we have this set transaction count

3146
02:06:48,158 --> 02:06:53,999
and just below we can call set

3147
02:06:50,960 --> 02:06:57,1000
transaction count and we can pass in our

3148
02:06:54,000 --> 02:06:59,118
transaction count then dot to number

3149
02:06:58,000 --> 02:07:00,319
like this

3150
02:06:59,118 --> 02:07:03,358
great

3151
02:07:00,319 --> 02:07:06,399
and believe it or not that's going to be

3152
02:07:03,359 --> 02:07:09,198
it for our send transaction

3153
02:07:06,399 --> 02:07:11,439
if we've coded everything out correctly

3154
02:07:09,198 --> 02:07:13,358
we should be able to send ether through

3155
02:07:11,439 --> 02:07:15,839
the ethereum network

3156
02:07:13,359 --> 02:07:18,399
back inside of our browser we can open

3157
02:07:15,840 --> 02:07:20,880
up metamask and we can create a new

3158
02:07:18,399 --> 02:07:22,479
account because we need to have a

3159
02:07:20,880 --> 02:07:24,158
different address that we're going to

3160
02:07:22,479 --> 02:07:26,479
send the money to

3161
02:07:24,158 --> 02:07:29,039
so let's click account here and let's

3162
02:07:26,479 --> 02:07:31,439
click create account we can call it

3163
02:07:29,039 --> 02:07:33,279
account 2 or whatever you prefer and

3164
02:07:31,439 --> 02:07:35,519
let's click create

3165
02:07:33,279 --> 02:07:37,998
now we are on the account 2 and let's

3166
02:07:35,520 --> 02:07:41,119
copy the address to clipboard

3167
02:07:38,000 --> 02:07:44,839
we can paste it here under address 2.

3168
02:07:41,118 --> 02:07:44,839
let's send 0.0005

3169
02:07:45,118 --> 02:07:50,478
the keyword can be something like test

3170
02:07:47,679 --> 02:07:52,560
and the message can also be test let's

3171
02:07:50,479 --> 02:07:54,637
open up our inspect element

3172
02:07:52,560 --> 02:07:57,199
go to console

3173
02:07:54,639 --> 02:07:59,520
and let's click send

3174
02:07:57,198 --> 02:08:03,039
first metamask notification appeared

3175
02:07:59,520 --> 02:08:05,359
sending it 0.0005

3176
02:08:03,039 --> 02:08:07,439
that is correct and we're going to pay a

3177
02:08:05,359 --> 02:08:10,078
bit extra for the fees but that's

3178
02:08:07,439 --> 02:08:11,439
completely okay let's click confirm

3179
02:08:10,078 --> 02:08:13,598
and then the second metamask

3180
02:08:11,439 --> 02:08:16,479
notification is going to appear and it's

3181
02:08:13,599 --> 02:08:18,639
going to say contract interaction so

3182
02:08:16,479 --> 02:08:20,959
we're going to pay a bit in fees and

3183
02:08:18,639 --> 02:08:23,440
this is going to store our transaction

3184
02:08:20,960 --> 02:08:26,879
on the blockchain let's click confirm

3185
02:08:23,439 --> 02:08:28,879
there we go our hash is loading and this

3186
02:08:26,880 --> 02:08:31,118
process usually takes about half a

3187
02:08:28,880 --> 02:08:33,519
minute but again it depends on a lot of

3188
02:08:31,118 --> 02:08:36,238
factors so it might take a bit longer

3189
02:08:33,520 --> 02:08:39,1000
for you and there we go i've gotten

3190
02:08:36,238 --> 02:08:42,558
success right here now let's close this

3191
02:08:40,000 --> 02:08:46,759
and let's open up our metamask

3192
02:08:42,560 --> 02:08:50,479
on our account 2 we now have

3193
02:08:46,760 --> 02:08:52,638
0.005 ethereum isn't that crazy

3194
02:08:50,479 --> 02:08:54,439
and if we go back to our count 1 we're

3195
02:08:52,639 --> 02:08:57,440
definitely missing

3196
02:08:54,439 --> 02:08:59,919
0.0005 here so

3197
02:08:57,439 --> 02:09:01,839
are you sharing the enthusiasm with me

3198
02:08:59,920 --> 02:09:03,678
even before creating this video

3199
02:09:01,840 --> 02:09:05,520
blockchain related technologies and

3200
02:09:03,679 --> 02:09:06,960
cryptocurrencies were incredibly

3201
02:09:05,520 --> 02:09:09,598
interesting to me

3202
02:09:06,960 --> 02:09:13,280
we just send ethereum through the

3203
02:09:09,599 --> 02:09:16,079
blockchain from one address to another

3204
02:09:13,279 --> 02:09:18,798
the second address could be anywhere in

3205
02:09:16,078 --> 02:09:21,597
the world and we just sent something

3206
02:09:18,800 --> 02:09:24,800
that holds real value potentially all

3207
02:09:21,599 --> 02:09:26,480
across the world in about 30 seconds

3208
02:09:24,800 --> 02:09:28,960
isn't that crazy

3209
02:09:26,479 --> 02:09:31,038
of course we can go back to account one

3210
02:09:28,960 --> 02:09:32,399
and then we can open up our contract

3211
02:09:31,039 --> 02:09:34,638
interactions

3212
02:09:32,399 --> 02:09:37,118
right here you can click it go to

3213
02:09:34,639 --> 02:09:39,679
transaction data and then

3214
02:09:37,118 --> 02:09:41,999
go to send right here

3215
02:09:39,679 --> 02:09:44,238
open activity log and then click

3216
02:09:42,000 --> 02:09:46,238
transaction confirmed this is going to

3217
02:09:44,238 --> 02:09:47,919
open up the ropes robeston test network

3218
02:09:46,238 --> 02:09:50,879
and as you can see we have our

3219
02:09:47,920 --> 02:09:53,519
transaction hash the status block

3220
02:09:50,880 --> 02:09:55,1000
confirmations and the value of ethereum

3221
02:09:53,520 --> 02:09:57,1000
send we can also see from which account

3222
02:09:56,000 --> 02:10:00,238
to which account was this sent so let's

3223
02:09:58,000 --> 02:10:02,799
go to our account one and you can notice

3224
02:10:00,238 --> 02:10:05,279
that now we have a few interactions here

3225
02:10:02,800 --> 02:10:08,639
the first one was the contract creation

3226
02:10:05,279 --> 02:10:10,798
and we have two outs one for sending and

3227
02:10:08,639 --> 02:10:13,839
one for storing you can also see the

3228
02:10:10,800 --> 02:10:16,159
current balance right here once again i

3229
02:10:13,840 --> 02:10:18,078
hope you're sharing my enthusiasm about

3230
02:10:16,158 --> 02:10:20,959
this because this is definitely a

3231
02:10:18,078 --> 02:10:23,039
revolutionary technology with that said

3232
02:10:20,960 --> 02:10:25,759
we can now focus on finishing up the

3233
02:10:23,039 --> 02:10:28,399
rest of jsx part which is the services

3234
02:10:25,760 --> 02:10:30,399
transactions and the footer once we have

3235
02:10:28,399 --> 02:10:32,799
those parts then we'll be able to

3236
02:10:30,399 --> 02:10:35,519
retrieve all of the store transactions

3237
02:10:32,800 --> 02:10:37,280
and then show them just below so now

3238
02:10:35,520 --> 02:10:39,520
we're going to move just a bit away from

3239
02:10:37,279 --> 02:10:43,279
all that blockchain functionality and

3240
02:10:39,520 --> 02:10:45,760
focus on writing pure jsx using react

3241
02:10:43,279 --> 02:10:48,157
and tailwind but we're gonna be back to

3242
02:10:45,760 --> 02:10:50,960
blockchain in no time

3243
02:10:48,158 --> 02:10:53,598
let's start with the services section

3244
02:10:50,960 --> 02:10:55,040
let's go to file explorer and then

3245
02:10:53,599 --> 02:10:57,440
services

3246
02:10:55,039 --> 02:10:58,559
inside of here we're gonna import a few

3247
02:10:57,439 --> 02:11:01,358
icons

3248
02:10:58,560 --> 02:11:02,960
the first one is bs

3249
02:11:01,359 --> 02:11:04,319
shield

3250
02:11:02,960 --> 02:11:07,599
fill

3251
02:11:04,319 --> 02:11:10,399
check and this is coming from react dash

3252
02:11:07,599 --> 02:11:14,639
icons forward slash bs

3253
02:11:10,399 --> 02:11:15,677
the second icon on our list is import bi

3254
02:11:14,639 --> 02:11:16,560
search

3255
02:11:15,679 --> 02:11:18,639
alt

3256
02:11:16,560 --> 02:11:23,040
and this is coming from

3257
02:11:18,639 --> 02:11:26,320
react dash icons forward slash bi

3258
02:11:23,039 --> 02:11:27,678
and the last icon on our list is import

3259
02:11:26,319 --> 02:11:30,077
ri

3260
02:11:27,679 --> 02:11:33,360
heart to fill

3261
02:11:30,078 --> 02:11:35,839
and that's from react icons forward

3262
02:11:33,359 --> 02:11:38,637
slash ri

3263
02:11:35,840 --> 02:11:39,1000
now for our services let's simply create

3264
02:11:38,639 --> 02:11:43,679
a div

3265
02:11:40,000 --> 02:11:44,719
and this div is going to have a class

3266
02:11:43,679 --> 02:11:46,559
name

3267
02:11:44,719 --> 02:11:48,879
equal to flex

3268
02:11:46,560 --> 02:11:52,718
with dash full

3269
02:11:48,880 --> 02:11:54,880
justify dash center items dash center

3270
02:11:52,719 --> 02:11:57,999
and gradient

3271
02:11:54,880 --> 02:12:00,719
dash bg dash services

3272
02:11:58,000 --> 02:12:03,360
now we can save that and we can put our

3273
02:12:00,719 --> 02:12:05,760
browser and editor side by side so that

3274
02:12:03,359 --> 02:12:06,479
we can see the changes we make there we

3275
02:12:05,760 --> 02:12:08,719
go

3276
02:12:06,479 --> 02:12:10,717
now inside of this div we're going to

3277
02:12:08,719 --> 02:12:13,440
create one more div

3278
02:12:10,719 --> 02:12:15,760
and that div is going to have a class

3279
02:12:13,439 --> 02:12:18,078
name equal to

3280
02:12:15,760 --> 02:12:19,199
flex

3281
02:12:18,078 --> 02:12:21,359
mf

3282
02:12:19,198 --> 02:12:23,198
flex dash row

3283
02:12:21,359 --> 02:12:25,039
flex dash column

3284
02:12:23,198 --> 02:12:27,759
item stash center

3285
02:12:25,039 --> 02:12:29,999
justify dash between

3286
02:12:27,760 --> 02:12:31,840
mdp-20

3287
02:12:30,000 --> 02:12:35,040
as in padding 20

3288
02:12:31,840 --> 02:12:36,718
and padding y meaning on top and bottom

3289
02:12:35,039 --> 02:12:39,598
is going to be 12

3290
02:12:36,719 --> 02:12:41,520
and padding on x axis is going to be

3291
02:12:39,599 --> 02:12:43,440
four as soon as we save that you're

3292
02:12:41,520 --> 02:12:45,198
going to notice that we have a bit more

3293
02:12:43,439 --> 02:12:47,677
padding right here

3294
02:12:45,198 --> 02:12:50,398
now let's create one final div inside of

3295
02:12:47,679 --> 02:12:53,440
which the content will go so right here

3296
02:12:50,399 --> 02:12:55,359
we can say class name is equal to flex

3297
02:12:53,439 --> 02:12:56,637
dash one

3298
02:12:55,359 --> 02:12:58,399
flicks

3299
02:12:56,639 --> 02:13:01,679
flex dash call

3300
02:12:58,399 --> 02:13:03,677
justify dash start and then items dash

3301
02:13:01,679 --> 02:13:05,999
start

3302
02:13:03,679 --> 02:13:08,480
inside of there we can finally create an

3303
02:13:06,000 --> 02:13:11,759
h1 element right here

3304
02:13:08,479 --> 02:13:13,439
and let's say something like services

3305
02:13:11,760 --> 02:13:16,078
that we

3306
02:13:13,439 --> 02:13:17,759
and then inside of a new row we can say

3307
02:13:16,078 --> 02:13:20,238
something like br

3308
02:13:17,760 --> 02:13:22,078
as in break tag to provide some space

3309
02:13:20,238 --> 02:13:23,839
and then say continue

3310
02:13:22,078 --> 02:13:25,678
to improve

3311
02:13:23,840 --> 02:13:27,598
like this

3312
02:13:25,679 --> 02:13:30,480
if we save that we're gonna notice that

3313
02:13:27,599 --> 02:13:33,520
it's right here but it is dark so let's

3314
02:13:30,479 --> 02:13:34,559
provide some class names class name is

3315
02:13:33,520 --> 02:13:36,238
equal to

3316
02:13:34,560 --> 02:13:37,760
text white

3317
02:13:36,238 --> 02:13:40,478
there we go

3318
02:13:37,760 --> 02:13:43,040
now let's also make it larger by saying

3319
02:13:40,479 --> 02:13:45,278
text 3 xl

3320
02:13:43,039 --> 02:13:49,838
on small devices we can make it even

3321
02:13:45,279 --> 02:13:52,798
larger by saying text 5 xl there we go

3322
02:13:49,840 --> 02:13:56,158
and finally let's give it padding y 2

3323
02:13:52,800 --> 02:13:59,040
and text gradient

3324
02:13:56,158 --> 02:14:01,759
there we go services that we continue to

3325
02:13:59,039 --> 02:14:03,918
improve now just below this div we're

3326
02:14:01,760 --> 02:14:05,1000
going to have one more div

3327
02:14:03,920 --> 02:14:08,320
and this is going to be for our services

3328
02:14:06,000 --> 02:14:10,639
cards so right here let's give it a

3329
02:14:08,319 --> 02:14:13,197
class name

3330
02:14:10,639 --> 02:14:14,078
that's going to be flex dash one

3331
02:14:13,198 --> 02:14:15,678
flex

3332
02:14:14,078 --> 02:14:21,118
flex dash call

3333
02:14:15,679 --> 02:14:21,119
justify dash start and items dash center

3334
02:14:22,078 --> 02:14:25,359
there we go now we have this on the left

3335
02:14:24,479 --> 02:14:27,278
side

3336
02:14:25,359 --> 02:14:30,319
and right here we're gonna have our

3337
02:14:27,279 --> 02:14:32,878
services cards since we're gonna reuse

3338
02:14:30,319 --> 02:14:35,118
our service card three times and it's

3339
02:14:32,880 --> 02:14:36,719
going to be the same every time but the

3340
02:14:35,118 --> 02:14:39,919
only things that are going to change is

3341
02:14:36,719 --> 02:14:42,800
going to be the title subtitle icon and

3342
02:14:39,920 --> 02:14:45,519
caller for that reason we can create a

3343
02:14:42,800 --> 02:14:47,599
new component that we're going to reuse

3344
02:14:45,520 --> 02:14:48,718
and we're going to call that component

3345
02:14:47,599 --> 02:14:49,840
const

3346
02:14:48,719 --> 02:14:50,960
service

3347
02:14:49,840 --> 02:14:52,960
card

3348
02:14:50,960 --> 02:14:55,920
and that's going to be equal to

3349
02:14:52,960 --> 02:14:57,759
like this to an arrow function component

3350
02:14:55,920 --> 02:15:01,040
with an instant return

3351
02:14:57,760 --> 02:15:05,599
each service card can have a div

3352
02:15:01,039 --> 02:15:07,598
with a class name equal to flex

3353
02:15:05,599 --> 02:15:10,560
flex dash row

3354
02:15:07,599 --> 02:15:12,719
justify dash start

3355
02:15:10,560 --> 02:15:15,040
items dash center

3356
02:15:12,719 --> 02:15:17,520
white dash glass

3357
02:15:15,039 --> 02:15:19,439
morphism

3358
02:15:17,520 --> 02:15:21,198
padding dash 3

3359
02:15:19,439 --> 02:15:24,238
margin dash 2

3360
02:15:21,198 --> 02:15:25,919
cursor dash pointer

3361
02:15:24,238 --> 02:15:28,558
and then on hover

3362
02:15:25,920 --> 02:15:29,759
shadow dash xl

3363
02:15:28,560 --> 02:15:31,439
great

3364
02:15:29,760 --> 02:15:34,078
now just so we can see the changes we're

3365
02:15:31,439 --> 02:15:37,198
making inside of our card let's make use

3366
02:15:34,078 --> 02:15:40,478
of that card just below right here we

3367
02:15:37,198 --> 02:15:42,398
can call our first service card

3368
02:15:40,479 --> 02:15:45,038
component right here

3369
02:15:42,399 --> 02:15:46,958
as a self-closing tag and now we can

3370
02:15:45,039 --> 02:15:48,798
provide some parameters

3371
02:15:46,960 --> 02:15:52,078
in this case we're going to provide a

3372
02:15:48,800 --> 02:15:54,159
caller so let's do bg dash

3373
02:15:52,078 --> 02:15:55,518
and then in square brackets that's going

3374
02:15:54,158 --> 02:15:57,999
to be hash

3375
02:15:55,520 --> 02:16:00,638
2 9 5

3376
02:15:58,000 --> 02:16:02,799
2 e 3.

3377
02:16:00,639 --> 02:16:05,119
great below that we're going to also

3378
02:16:02,800 --> 02:16:07,439
give it a title which is going to be

3379
02:16:05,118 --> 02:16:10,158
security

3380
02:16:07,439 --> 02:16:10,157
guaranteed

3381
02:16:10,238 --> 02:16:13,677
like this

3382
02:16:11,520 --> 02:16:16,960
let's also give it an icon by saying

3383
02:16:13,679 --> 02:16:19,999
icon and we're gonna provide a component

3384
02:16:16,960 --> 02:16:24,078
bs shield fill check

3385
02:16:20,000 --> 02:16:28,000
with a font size is equal to 21

3386
02:16:24,078 --> 02:16:30,637
and class name is equal to text dash

3387
02:16:28,000 --> 02:16:33,439
white and the last thing we can provide

3388
02:16:30,639 --> 02:16:35,599
is going to be a subtitle so we can say

3389
02:16:33,439 --> 02:16:37,759
subtitle is equal to

3390
02:16:35,599 --> 02:16:39,759
and we can put some placeholder text

3391
02:16:37,760 --> 02:16:40,639
something like security

3392
02:16:39,760 --> 02:16:43,359
is

3393
02:16:40,638 --> 02:16:43,358
guaranteed

3394
02:16:43,599 --> 02:16:50,079
we always maintain

3395
02:16:47,599 --> 02:16:53,599
privacy

3396
02:16:50,079 --> 02:16:56,159
and maintain the quality

3397
02:16:53,599 --> 02:16:57,679
of our products something like that

3398
02:16:56,159 --> 02:16:59,918
should be fine

3399
02:16:57,679 --> 02:17:01,359
and that's going to be it for our

3400
02:16:59,920 --> 02:17:03,439
service card

3401
02:17:01,359 --> 02:17:06,479
now we know that our service card

3402
02:17:03,439 --> 02:17:07,599
accepts a few properties it accepts a

3403
02:17:06,478 --> 02:17:08,958
color

3404
02:17:07,599 --> 02:17:12,318
title

3405
02:17:08,959 --> 02:17:14,478
icon and subtitle and all of these are

3406
02:17:12,318 --> 02:17:16,638
props so we need to destructure them

3407
02:17:14,478 --> 02:17:19,518
right at the top meaning we have to put

3408
02:17:16,638 --> 02:17:21,838
them inside of curly braces

3409
02:17:19,519 --> 02:17:23,120
so now inside of this div we can create

3410
02:17:21,840 --> 02:17:25,679
one more div

3411
02:17:23,120 --> 02:17:28,398
this one is going to be for the icon so

3412
02:17:25,679 --> 02:17:30,159
let's give it a class name

3413
02:17:28,398 --> 02:17:31,918
and then we're going to make it dynamic

3414
02:17:30,159 --> 02:17:34,958
like this

3415
02:17:31,920 --> 02:17:34,960
with dash 10

3416
02:17:35,120 --> 02:17:38,559
height dash 10

3417
02:17:36,718 --> 02:17:40,718
and that should be enough to already see

3418
02:17:38,558 --> 02:17:43,838
it so right inside of here we can

3419
02:17:40,718 --> 02:17:45,597
dynamically render the icon as soon as

3420
02:17:43,840 --> 02:17:48,800
we save that you notice that something

3421
02:17:45,599 --> 02:17:50,639
appeared here but we cannot yet see it

3422
02:17:48,799 --> 02:17:51,999
so let's continue by providing more

3423
02:17:50,638 --> 02:17:54,798
classes

3424
02:17:52,000 --> 02:17:56,318
rounded dash full

3425
02:17:54,799 --> 02:17:58,557
flex

3426
02:17:56,318 --> 02:18:00,879
justify dash center

3427
02:17:58,558 --> 02:18:03,758
items center

3428
02:18:00,879 --> 02:18:05,999
and then finally let's give it a color

3429
02:18:03,760 --> 02:18:08,638
like this if we save that you're gonna

3430
02:18:06,000 --> 02:18:11,280
notice a blue dot right here and that's

3431
02:18:08,638 --> 02:18:12,798
not exactly how it should look like just

3432
02:18:11,280 --> 02:18:14,880
to show you how a finished version

3433
02:18:12,799 --> 02:18:17,358
should look like i pulled up the

3434
02:18:14,879 --> 02:18:20,398
finished site and you can see right here

3435
02:18:17,359 --> 02:18:23,359
we need to have an icon a white icon on

3436
02:18:20,398 --> 02:18:25,758
all of these circle backgrounds so let's

3437
02:18:23,359 --> 02:18:29,120
go back to our app and figure out why

3438
02:18:25,760 --> 02:18:32,240
cannot we see our icon yet and i've just

3439
02:18:29,120 --> 02:18:35,039
noticed the reason in here i had icons

3440
02:18:32,239 --> 02:18:37,678
instead of just icon if we fix that the

3441
02:18:35,040 --> 02:18:40,479
icon is going to appear right here

3442
02:18:37,679 --> 02:18:41,999
and now below this icon div we can have

3443
02:18:40,478 --> 02:18:44,958
one more div

3444
02:18:42,000 --> 02:18:49,200
this div is going to have a class name

3445
02:18:44,959 --> 02:18:51,518
equal to margin left 5 flex flex dash

3446
02:18:49,200 --> 02:18:54,478
call flex dash 1

3447
02:18:51,519 --> 02:18:56,080
and inside of there we can have an h3

3448
02:18:54,478 --> 02:18:58,079
that's going to simply render out the

3449
02:18:56,079 --> 02:19:00,798
title like this

3450
02:18:58,079 --> 02:19:02,638
and below that we can have a paragraph

3451
02:19:00,799 --> 02:19:05,438
that's going to simply render the

3452
02:19:02,638 --> 02:19:07,759
subtitle of course the entire text is

3453
02:19:05,439 --> 02:19:09,519
dark right now so let's fix it

3454
02:19:07,760 --> 02:19:10,398
let's give it a class

3455
02:19:09,519 --> 02:19:11,599
name

3456
02:19:10,398 --> 02:19:14,558
equal to

3457
02:19:11,599 --> 02:19:16,959
mt as in margin top dash 2

3458
02:19:14,558 --> 02:19:19,119
text dash white

3459
02:19:16,959 --> 02:19:22,239
text lg

3460
02:19:19,120 --> 02:19:25,120
and that's going to be it for our h1

3461
02:19:22,239 --> 02:19:28,477
for our padding that's going to be text

3462
02:19:25,120 --> 02:19:31,599
wide text small sm

3463
02:19:28,478 --> 02:19:35,119
and also on medium devices we can say

3464
02:19:31,599 --> 02:19:36,879
width is going to be 9 divided by 12 or

3465
02:19:35,120 --> 02:19:39,999
9 out of 12.

3466
02:19:36,879 --> 02:19:42,478
great so now we have this great card

3467
02:19:40,000 --> 02:19:44,399
and you still might be wondering why did

3468
02:19:42,478 --> 02:19:46,638
we create this separate component if

3469
02:19:44,398 --> 02:19:49,119
we're just going to render it right here

3470
02:19:46,638 --> 02:19:52,078
well the reason is now that we extracted

3471
02:19:49,120 --> 02:19:54,479
the code we can reuse it as many times

3472
02:19:52,079 --> 02:19:57,758
as possible and that is the beauty of

3473
02:19:54,478 --> 02:19:58,638
react so now if i duplicate this two

3474
02:19:57,760 --> 02:20:01,359
times

3475
02:19:58,639 --> 02:20:07,039
and if i change the bg color a bit the

3476
02:20:01,359 --> 02:20:08,639
second one is going to be 8 9 8 4 5 f 8

3477
02:20:07,040 --> 02:20:10,720
like this

3478
02:20:08,639 --> 02:20:12,078
in here we can say something like

3479
02:20:10,719 --> 02:20:13,357
best

3480
02:20:12,079 --> 02:20:15,599
exchange

3481
02:20:13,359 --> 02:20:17,439
rates

3482
02:20:15,600 --> 02:20:18,479
the icon can be

3483
02:20:17,439 --> 02:20:20,399
bi

3484
02:20:18,478 --> 02:20:22,638
search alt

3485
02:20:20,398 --> 02:20:24,878
and then for the last one we can change

3486
02:20:22,639 --> 02:20:25,759
the color to be f

3487
02:20:24,879 --> 02:20:28,079
eight

3488
02:20:25,760 --> 02:20:29,760
four five five zero

3489
02:20:28,079 --> 02:20:31,039
in here we can say something like

3490
02:20:29,760 --> 02:20:33,760
fastest

3491
02:20:31,040 --> 02:20:33,760
transactions

3492
02:20:33,840 --> 02:20:38,639
and the icon is going to be ri

3493
02:20:36,719 --> 02:20:40,959
hard to fill

3494
02:20:38,639 --> 02:20:44,079
if we now save this you can immediately

3495
02:20:40,959 --> 02:20:47,438
notice that we get two more of these

3496
02:20:44,079 --> 02:20:48,958
cards instantly without any work needed

3497
02:20:47,439 --> 02:20:51,120
it just looks like we're missing the

3498
02:20:48,959 --> 02:20:53,758
caller for the second service card so

3499
02:20:51,120 --> 02:20:56,719
let's see this is going to be just eight

3500
02:20:53,760 --> 02:20:58,880
nine four like this and we immediately

3501
02:20:56,719 --> 02:21:01,598
get this nice purple color

3502
02:20:58,879 --> 02:21:04,478
now if you expand this a bit more

3503
02:21:01,600 --> 02:21:07,040
you'll see that this is looking great we

3504
02:21:04,478 --> 02:21:09,279
have our initial section and with that

3505
02:21:07,040 --> 02:21:12,080
we have our services

3506
02:21:09,280 --> 02:21:13,839
now that we have our services done let's

3507
02:21:12,079 --> 02:21:15,998
also check how our services look on

3508
02:21:13,840 --> 02:21:17,040
mobile devices so let's open device

3509
02:21:16,000 --> 02:21:18,799
toolbar

3510
02:21:17,040 --> 02:21:20,640
and go to mobile

3511
02:21:18,799 --> 02:21:22,799
and as you can see it looks like we're

3512
02:21:20,639 --> 02:21:24,719
missing just one thing and that is to

3513
02:21:22,799 --> 02:21:27,438
make this into a column on mobile

3514
02:21:24,719 --> 02:21:30,558
devices to fix this we can go back to

3515
02:21:27,439 --> 02:21:32,879
the code and right here say

3516
02:21:30,559 --> 02:21:35,039
flex dash column

3517
02:21:32,879 --> 02:21:37,039
there we go and then say on medium

3518
02:21:35,040 --> 02:21:38,879
devices md

3519
02:21:37,040 --> 02:21:41,040
flex dash row

3520
02:21:38,879 --> 02:21:43,919
so now for medium or higher we're gonna

3521
02:21:41,040 --> 02:21:45,599
have a row and on mobile devices we're

3522
02:21:43,920 --> 02:21:48,080
gonna have a column

3523
02:21:45,600 --> 02:21:50,159
so it's looking great on mobile and now

3524
02:21:48,079 --> 02:21:53,519
if we go back you're gonna notice that

3525
02:21:50,159 --> 02:21:55,998
this looks great on desktop as well

3526
02:21:53,520 --> 02:21:57,920
now that that is done let's focus on

3527
02:21:56,000 --> 02:22:00,719
rendering out the list of our

3528
02:21:57,920 --> 02:22:03,280
transactions to do that we can go back

3529
02:22:00,719 --> 02:22:04,719
to our file explorer and go to

3530
02:22:03,280 --> 02:22:06,079
transactions

3531
02:22:04,719 --> 02:22:08,638
just to immediately have some

3532
02:22:06,079 --> 02:22:11,438
transactions to work with we can go to

3533
02:22:08,639 --> 02:22:15,198
our utils and down in the description

3534
02:22:11,439 --> 02:22:17,919
you'll find the dummy data file in here

3535
02:22:15,200 --> 02:22:20,640
and you can just paste it in here

3536
02:22:17,920 --> 02:22:22,799
this is going to be a list of six demo

3537
02:22:20,639 --> 02:22:25,119
transactions just so we immediately have

3538
02:22:22,799 --> 02:22:26,477
some data that we can start rendering

3539
02:22:25,120 --> 02:22:28,479
out on the screen

3540
02:22:26,478 --> 02:22:30,559
so you can just paste it inside of the

3541
02:22:28,478 --> 02:22:31,759
utils once you find it down in the

3542
02:22:30,559 --> 02:22:33,599
description

3543
02:22:31,760 --> 02:22:36,639
with that said let's open up our

3544
02:22:33,600 --> 02:22:38,640
transactions and right here we can

3545
02:22:36,639 --> 02:22:42,079
import react

3546
02:22:38,639 --> 02:22:44,879
as well as use context

3547
02:22:42,079 --> 02:22:48,559
and that's coming from react

3548
02:22:44,879 --> 02:22:50,239
then we can import our transaction

3549
02:22:48,559 --> 02:22:52,879
contacts because we're going to

3550
02:22:50,239 --> 02:22:55,599
definitely use it later on once we want

3551
02:22:52,879 --> 02:22:58,239
to fetch real transactions so that's

3552
02:22:55,600 --> 02:23:00,960
coming from that dot slash context and

3553
02:22:58,239 --> 02:23:04,317
then transaction context and here i have

3554
02:23:00,959 --> 02:23:07,039
a typo that's going to be just react we

3555
02:23:04,318 --> 02:23:10,478
also want to fetch that dummy data so we

3556
02:23:07,040 --> 02:23:13,599
can say import dummy data from

3557
02:23:10,478 --> 02:23:15,199
dot slash utils and then forward slash

3558
02:23:13,600 --> 02:23:19,519
dummy data

3559
02:23:15,200 --> 02:23:22,560
inside of here we can render a div

3560
02:23:19,520 --> 02:23:25,760
and that div is going to have a class

3561
02:23:22,559 --> 02:23:25,759
name right here

3562
02:23:26,159 --> 02:23:30,559
equal to flex

3563
02:23:28,478 --> 02:23:32,559
with dash full

3564
02:23:30,559 --> 02:23:36,118
justify dash center

3565
02:23:32,559 --> 02:23:39,039
items center 2xl

3566
02:23:36,120 --> 02:23:42,240
px20 that's going to give it a padding

3567
02:23:39,040 --> 02:23:44,879
x20 on extra large devices

3568
02:23:42,239 --> 02:23:48,397
then we want to have the gradient

3569
02:23:44,879 --> 02:23:50,398
dash bg dash transactions

3570
02:23:48,398 --> 02:23:53,119
if we save that nothing is going to

3571
02:23:50,398 --> 02:23:54,878
happen yet but now we can add something

3572
02:23:53,120 --> 02:23:57,358
inside of this div

3573
02:23:54,879 --> 02:24:00,398
let's add a div that's going to have a

3574
02:23:57,359 --> 02:24:01,439
class name equal to

3575
02:24:00,398 --> 02:24:03,278
flex

3576
02:24:01,439 --> 02:24:06,280
flex dash call

3577
02:24:03,280 --> 02:24:06,280
mdp-12

3578
02:24:06,840 --> 02:24:13,280
py-12 and also px-4

3579
02:24:11,840 --> 02:24:16,080
that's going to provide it with some

3580
02:24:13,280 --> 02:24:19,280
padding and right here we want to have a

3581
02:24:16,079 --> 02:24:21,199
heading that says something like latest

3582
02:24:19,280 --> 02:24:24,079
transactions

3583
02:24:21,200 --> 02:24:26,240
if we have our account connected but if

3584
02:24:24,079 --> 02:24:28,317
we don't have our account connected in

3585
02:24:26,239 --> 02:24:29,998
that case we wanted to say something

3586
02:24:28,318 --> 02:24:31,519
like connect

3587
02:24:30,000 --> 02:24:35,599
your account

3588
02:24:31,520 --> 02:24:38,319
to see the latest transactions

3589
02:24:35,600 --> 02:24:40,239
so to do that we can pull some data

3590
02:24:38,318 --> 02:24:43,199
using the context

3591
02:24:40,239 --> 02:24:45,679
right here at the top we can say const

3592
02:24:43,200 --> 02:24:48,240
current account

3593
02:24:45,680 --> 02:24:51,519
and that's going to be equal to

3594
02:24:48,239 --> 02:24:53,998
use context and then we simply pass the

3595
02:24:51,520 --> 02:24:56,800
context we want to fetch and that is

3596
02:24:54,000 --> 02:24:59,439
transaction context

3597
02:24:56,799 --> 02:25:02,959
so what we can say

3598
02:24:59,439 --> 02:25:04,879
open a dynamic block and if there is a

3599
02:25:02,959 --> 02:25:07,518
current account

3600
02:25:04,879 --> 02:25:09,839
in that case we want to render

3601
02:25:07,520 --> 02:25:13,840
that's going to be an h3

3602
02:25:09,840 --> 02:25:13,840
it's going to have a class name

3603
02:25:14,639 --> 02:25:17,759
equal to

3604
02:25:15,760 --> 02:25:18,639
text white

3605
02:25:17,760 --> 02:25:20,319
text

3606
02:25:18,639 --> 02:25:22,639
3 xl

3607
02:25:20,318 --> 02:25:25,919
text center

3608
02:25:22,639 --> 02:25:28,558
and margin y dash 2.

3609
02:25:25,920 --> 02:25:30,479
inside of there we can simply say latest

3610
02:25:28,559 --> 02:25:32,559
transactions

3611
02:25:30,478 --> 02:25:33,599
and now if we don't have the account

3612
02:25:32,559 --> 02:25:35,357
connected

3613
02:25:33,600 --> 02:25:36,560
then we can create the else part of our

3614
02:25:35,359 --> 02:25:39,359
ternary

3615
02:25:36,559 --> 02:25:41,759
and copy that same h3

3616
02:25:39,359 --> 02:25:44,639
paste it here but now we're gonna change

3617
02:25:41,760 --> 02:25:46,399
it to say connect your account to see

3618
02:25:44,639 --> 02:25:47,279
the latest changes

3619
02:25:46,398 --> 02:25:49,438
great

3620
02:25:47,280 --> 02:25:51,438
now we can remove these comments because

3621
02:25:49,439 --> 02:25:52,879
we have our heading

3622
02:25:51,439 --> 02:25:55,040
let's take a look

3623
02:25:52,879 --> 02:25:57,358
right now i can see connect your account

3624
02:25:55,040 --> 02:25:58,318
to see the latest transactions that's

3625
02:25:57,359 --> 02:26:00,720
great

3626
02:25:58,318 --> 02:26:02,398
and i also have this button this might

3627
02:26:00,719 --> 02:26:04,239
be different for you because you might

3628
02:26:02,398 --> 02:26:06,317
be already connected

3629
02:26:04,239 --> 02:26:09,918
i paused the recording of the video for

3630
02:26:06,318 --> 02:26:11,838
some time so metamask logged me out this

3631
02:26:09,920 --> 02:26:13,1000
is going to happen from time to time you

3632
02:26:11,840 --> 02:26:15,840
just have to retype your password and

3633
02:26:14,000 --> 02:26:17,200
you'll be straight back in

3634
02:26:15,840 --> 02:26:19,520
there we go

3635
02:26:17,200 --> 02:26:21,680
now i'm going to reload the page

3636
02:26:19,520 --> 02:26:24,319
and as you can see we can see latest

3637
02:26:21,680 --> 02:26:26,720
transactions that's great one thing that

3638
02:26:24,318 --> 02:26:29,358
we were also missing at the start was

3639
02:26:26,719 --> 02:26:31,839
the address right here we implemented

3640
02:26:29,359 --> 02:26:34,160
the entire transaction sending process

3641
02:26:31,840 --> 02:26:35,1000
but we never got into the point where we

3642
02:26:34,159 --> 02:26:38,639
show the address of the connected

3643
02:26:36,000 --> 02:26:40,240
account on this card which is definitely

3644
02:26:38,639 --> 02:26:43,198
a nice detail

3645
02:26:40,239 --> 02:26:44,477
so let's go back to our welcome

3646
02:26:43,200 --> 02:26:46,800
right here

3647
02:26:44,478 --> 02:26:49,119
and remember our current account is

3648
02:26:46,799 --> 02:26:51,839
coming through the context

3649
02:26:49,120 --> 02:26:53,679
so now just below

3650
02:26:51,840 --> 02:26:55,520
we can find where are we listing the

3651
02:26:53,680 --> 02:26:57,1000
address right here

3652
02:26:55,520 --> 02:26:59,200
and we can simply render the current

3653
02:26:58,000 --> 02:27:00,560
account

3654
02:26:59,200 --> 02:27:03,600
there we go

3655
02:27:00,559 --> 02:27:04,639
as you can see that is quite a long

3656
02:27:03,600 --> 02:27:07,280
string

3657
02:27:04,639 --> 02:27:10,558
so to shorten it we're going to create a

3658
02:27:07,280 --> 02:27:11,760
new utility function inside of utils

3659
02:27:10,559 --> 02:27:12,958
called

3660
02:27:11,760 --> 02:27:14,478
shorten

3661
02:27:12,959 --> 02:27:19,119
address

3662
02:27:14,478 --> 02:27:20,317
dot js inside of here we can say export

3663
02:27:19,120 --> 02:27:21,438
const

3664
02:27:20,318 --> 02:27:23,198
shorten

3665
02:27:21,439 --> 02:27:25,120
address

3666
02:27:23,200 --> 02:27:26,800
and that's going to be a function that

3667
02:27:25,120 --> 02:27:29,200
accepts the address

3668
02:27:26,799 --> 02:27:30,558
and then instantly returns a template

3669
02:27:29,200 --> 02:27:33,600
string

3670
02:27:30,559 --> 02:27:36,398
where we're going to take the address

3671
02:27:33,600 --> 02:27:38,800
slice it from the start and take only

3672
02:27:36,398 --> 02:27:41,598
the first 5 characters or this is going

3673
02:27:38,799 --> 02:27:45,039
to be 6 because it's starting from 0.

3674
02:27:41,600 --> 02:27:47,600
then we want to say dot dot we can copy

3675
02:27:45,040 --> 02:27:50,559
this same part again

3676
02:27:47,600 --> 02:27:53,279
and instead of slicing from 0 to 5 we

3677
02:27:50,559 --> 02:27:54,719
want to slice from address

3678
02:27:53,280 --> 02:27:56,079
dot length

3679
02:27:54,719 --> 02:27:58,799
minus 4

3680
02:27:56,079 --> 02:28:01,357
all the way to the end so we're taking

3681
02:27:58,799 --> 02:28:03,839
the first five characters and then also

3682
02:28:01,359 --> 02:28:05,040
showing the last four now we can go back

3683
02:28:03,840 --> 02:28:08,399
to welcome

3684
02:28:05,040 --> 02:28:10,160
and right here we can import

3685
02:28:08,398 --> 02:28:12,878
our shorten

3686
02:28:10,159 --> 02:28:15,519
address function which is coming from

3687
02:28:12,879 --> 02:28:16,798
that slash utils forward slash shortened

3688
02:28:15,520 --> 02:28:18,879
address

3689
02:28:16,799 --> 02:28:21,039
and the only thing we have to do

3690
02:28:18,879 --> 02:28:22,398
is right here where we're rendering the

3691
02:28:21,040 --> 02:28:24,640
current account

3692
02:28:22,398 --> 02:28:27,039
we can simply call the shortened address

3693
02:28:24,639 --> 02:28:29,518
and paste the current account into it

3694
02:28:27,040 --> 02:28:31,839
that's going to give us this nice format

3695
02:28:29,520 --> 02:28:34,159
and that's the exact same thing that

3696
02:28:31,840 --> 02:28:36,639
metamask does right here

3697
02:28:34,159 --> 02:28:38,878
great and the only reason we put it in

3698
02:28:36,639 --> 02:28:41,839
utils is because we're going to use it

3699
02:28:38,879 --> 02:28:44,398
in transactions as well so right here we

3700
02:28:41,840 --> 02:28:45,520
can also immediately import

3701
02:28:44,398 --> 02:28:47,599
shorten

3702
02:28:45,520 --> 02:28:50,319
address

3703
02:28:47,600 --> 02:28:51,1000
from dot slash utils forward slash

3704
02:28:50,318 --> 02:28:54,079
shorten address

3705
02:28:52,000 --> 02:28:56,479
great now that we have this heading

3706
02:28:54,079 --> 02:28:58,478
right here we of course have to loop

3707
02:28:56,478 --> 02:29:01,039
through the transactions

3708
02:28:58,478 --> 02:29:02,317
we can do that by providing a div right

3709
02:29:01,040 --> 02:29:03,919
here

3710
02:29:02,318 --> 02:29:08,079
let's fix this

3711
02:29:03,920 --> 02:29:09,679
that div is going to have a class name

3712
02:29:08,079 --> 02:29:11,438
equal to flex

3713
02:29:09,680 --> 02:29:13,920
flex-wrap

3714
02:29:11,439 --> 02:29:17,1000
justify dash center

3715
02:29:13,920 --> 02:29:20,799
items center and mt-10

3716
02:29:18,000 --> 02:29:23,679
there we go and now inside of there we

3717
02:29:20,799 --> 02:29:25,999
can create a new dynamic block

3718
02:29:23,680 --> 02:29:28,080
we can render our dummy transactions for

3719
02:29:26,000 --> 02:29:29,040
now so we can simply say

3720
02:29:28,079 --> 02:29:30,317
dummy

3721
02:29:29,040 --> 02:29:32,640
data

3722
02:29:30,318 --> 02:29:35,039
and then we can call a dot reverse

3723
02:29:32,639 --> 02:29:37,358
method on it to reverse it because we

3724
02:29:35,040 --> 02:29:40,240
want to start from the last to the first

3725
02:29:37,359 --> 02:29:43,359
or rather from the newest to the last

3726
02:29:40,239 --> 02:29:45,519
and then finally we can also map over it

3727
02:29:43,359 --> 02:29:47,359
by saying transaction

3728
02:29:45,520 --> 02:29:50,239
get the index

3729
02:29:47,359 --> 02:29:51,1000
and then instantly return something and

3730
02:29:50,239 --> 02:29:53,598
that something is going to be a new

3731
02:29:52,000 --> 02:29:56,160
component that we're going to create

3732
02:29:53,600 --> 02:29:58,720
which is called transaction card like

3733
02:29:56,159 --> 02:30:01,519
this as a self-closing component we can

3734
02:29:58,719 --> 02:30:04,719
give it a key equal to i

3735
02:30:01,520 --> 02:30:06,720
and also right here we can spread all of

3736
02:30:04,719 --> 02:30:09,119
the properties that we get from

3737
02:30:06,719 --> 02:30:11,999
transaction that's going to take all the

3738
02:30:09,120 --> 02:30:14,959
properties from here and put it right

3739
02:30:12,000 --> 02:30:18,160
into our transaction card as props

3740
02:30:14,959 --> 02:30:21,279
and these things are going to be id url

3741
02:30:18,159 --> 02:30:23,119
message timestamp address from amount

3742
02:30:21,280 --> 02:30:25,520
and address 2.

3743
02:30:23,120 --> 02:30:28,240
so inside of our transaction card we'll

3744
02:30:25,520 --> 02:30:30,319
be able to work with all of these values

3745
02:30:28,239 --> 02:30:31,437
let's create our transaction card right

3746
02:30:30,318 --> 02:30:33,838
here

3747
02:30:31,439 --> 02:30:34,959
const transaction

3748
02:30:33,840 --> 02:30:36,399
card

3749
02:30:34,959 --> 02:30:38,398
is equal to

3750
02:30:36,398 --> 02:30:40,478
a functional component

3751
02:30:38,398 --> 02:30:41,918
and as we said we're going to get all of

3752
02:30:40,478 --> 02:30:44,159
these values

3753
02:30:41,920 --> 02:30:46,799
address 2

3754
02:30:44,159 --> 02:30:48,798
address from

3755
02:30:46,799 --> 02:30:50,238
timestamp

3756
02:30:48,799 --> 02:30:52,799
message

3757
02:30:50,239 --> 02:30:52,799
keyword

3758
02:30:53,040 --> 02:30:55,680
amount

3759
02:30:54,159 --> 02:30:57,679
and url

3760
02:30:55,680 --> 02:31:00,800
and that has to be in curly braces

3761
02:30:57,680 --> 02:31:02,479
because it has to be structured for now

3762
02:31:00,799 --> 02:31:06,718
let's simply return

3763
02:31:02,478 --> 02:31:07,998
a string that's going to say transaction

3764
02:31:06,719 --> 02:31:10,879
there we go

3765
02:31:08,000 --> 02:31:12,559
and we should be able to see there we go

3766
02:31:10,879 --> 02:31:14,559
six time transaction transaction

3767
02:31:12,559 --> 02:31:16,879
transaction transaction

3768
02:31:14,559 --> 02:31:19,198
but now let's implement the jsx for each

3769
02:31:16,879 --> 02:31:21,199
one of these transaction cards

3770
02:31:19,200 --> 02:31:22,319
let's do that right here instead of this

3771
02:31:21,200 --> 02:31:25,358
return

3772
02:31:22,318 --> 02:31:26,478
so let's return a div instead of a

3773
02:31:25,359 --> 02:31:28,960
string

3774
02:31:26,478 --> 02:31:30,718
and that div is going to have a class

3775
02:31:28,959 --> 02:31:32,478
name equal to

3776
02:31:30,719 --> 02:31:34,239
bg dash

3777
02:31:32,478 --> 02:31:36,397
square bracket

3778
02:31:34,239 --> 02:31:38,639
and then hash

3779
02:31:36,398 --> 02:31:40,478
one eight one

3780
02:31:38,639 --> 02:31:44,639
nine one eight

3781
02:31:40,478 --> 02:31:47,039
also margin-4 so m-4 flex and then

3782
02:31:44,639 --> 02:31:48,959
flex-1

3783
02:31:47,040 --> 02:31:50,959
inside of here we'll have to provide

3784
02:31:48,959 --> 02:31:52,159
different widths for different device

3785
02:31:50,959 --> 02:31:54,559
sizes

3786
02:31:52,159 --> 02:31:57,678
and we can do that in a new line still

3787
02:31:54,559 --> 02:32:00,959
inside of this class name string first

3788
02:31:57,680 --> 02:32:02,160
on two xl devices we can set the min

3789
02:32:00,959 --> 02:32:04,718
dash

3790
02:32:02,159 --> 02:32:08,718
width or just w and then in square

3791
02:32:04,719 --> 02:32:11,999
brackets 450 pixels now we can duplicate

3792
02:32:08,719 --> 02:32:15,919
that line and then set the max dash

3793
02:32:12,000 --> 02:32:17,280
width equal to 500 pixels on two xl

3794
02:32:15,920 --> 02:32:19,120
devices

3795
02:32:17,280 --> 02:32:20,719
now we can copy that

3796
02:32:19,120 --> 02:32:24,160
paste it below

3797
02:32:20,719 --> 02:32:26,119
and then on small devices so sm we want

3798
02:32:24,159 --> 02:32:28,239
to set the minimum to be

3799
02:32:26,120 --> 02:32:31,679
270 pixels

3800
02:32:28,239 --> 02:32:33,199
and then let's do 300 for the maximum on

3801
02:32:31,680 --> 02:32:37,519
small devices

3802
02:32:33,200 --> 02:32:37,520
we can also provide the flex dash call

3803
02:32:37,840 --> 02:32:44,639
rounded dash md and finally hover

3804
02:32:41,680 --> 02:32:47,120
shadow dash 2 xl

3805
02:32:44,639 --> 02:32:50,158
great now inside of there we can have a

3806
02:32:47,120 --> 02:32:53,600
div that's going to contain our content

3807
02:32:50,159 --> 02:32:56,159
so there's div let's give it a class

3808
02:32:53,600 --> 02:32:57,920
name equal to flex

3809
02:32:56,159 --> 02:32:59,679
flex dash call

3810
02:32:57,920 --> 02:33:03,1000
items center

3811
02:32:59,680 --> 02:33:06,880
w dash full and empty three there we go

3812
02:33:04,000 --> 02:33:08,719
now we have these gray rectangles

3813
02:33:06,879 --> 02:33:11,199
now we can render out all of the data

3814
02:33:08,719 --> 02:33:14,398
for our specific transaction

3815
02:33:11,200 --> 02:33:17,919
so let's do a div we can give it a class

3816
02:33:14,398 --> 02:33:19,119
name equal to display dash flex

3817
02:33:17,920 --> 02:33:20,560
justify

3818
02:33:19,120 --> 02:33:21,600
dash

3819
02:33:20,559 --> 02:33:23,279
start

3820
02:33:21,600 --> 02:33:26,159
with dash full

3821
02:33:23,280 --> 02:33:28,079
mb as in margin bottom dash 6 and

3822
02:33:26,159 --> 02:33:30,639
padding dash 2.

3823
02:33:28,079 --> 02:33:32,878
now inside of that div we can render two

3824
02:33:30,639 --> 02:33:34,397
different anchor tags so let's create an

3825
02:33:32,879 --> 02:33:35,839
anchor tag right here

3826
02:33:34,398 --> 02:33:38,239
there we go

3827
02:33:35,840 --> 02:33:39,759
and this display flex was supposed to be

3828
02:33:38,239 --> 02:33:42,317
just flex

3829
02:33:39,760 --> 02:33:45,040
so right here we can create an anchor

3830
02:33:42,318 --> 02:33:47,239
tag that's going to have an href equal

3831
02:33:45,040 --> 02:33:51,120
to and now bear with me

3832
02:33:47,239 --> 02:33:52,239
https colin forward slash forward slash

3833
02:33:51,120 --> 02:33:53,999
robston

3834
02:33:52,239 --> 02:33:55,279
dot ether

3835
02:33:54,000 --> 02:33:58,399
scan

3836
02:33:55,280 --> 02:34:02,079
dot io forward slash address forward

3837
02:33:58,398 --> 02:34:04,959
slash and then dollar sign curly braces

3838
02:34:02,079 --> 02:34:07,199
address from like this

3839
02:34:04,959 --> 02:34:09,598
of course we have to make it a dynamic

3840
02:34:07,200 --> 02:34:11,680
template string like this

3841
02:34:09,600 --> 02:34:14,319
and also at the end

3842
02:34:11,680 --> 02:34:15,599
close it right here let's put this into

3843
02:34:14,318 --> 02:34:17,919
a new line

3844
02:34:15,600 --> 02:34:20,239
this anchor tag is also going to have a

3845
02:34:17,920 --> 02:34:22,719
target underscore blank

3846
02:34:20,239 --> 02:34:26,317
and it's also going to have a url equal

3847
02:34:22,719 --> 02:34:28,159
to no opener no referrer it is advisable

3848
02:34:26,318 --> 02:34:30,879
to put this tag right here whenever

3849
02:34:28,159 --> 02:34:33,038
you're using the target underscore blank

3850
02:34:30,879 --> 02:34:35,999
inside of that anchor tag we can create

3851
02:34:33,040 --> 02:34:40,318
a paragraph that's going to have a class

3852
02:34:36,000 --> 02:34:42,799
name equal to text white text dash base

3853
02:34:40,318 --> 02:34:44,558
let's fix this right here as well

3854
02:34:42,799 --> 02:34:46,158
and it's going to say

3855
02:34:44,559 --> 02:34:48,719
from

3856
02:34:46,159 --> 02:34:51,678
and right here we can call the shorten

3857
02:34:48,719 --> 02:34:53,358
address function and provide the address

3858
02:34:51,680 --> 02:34:55,1000
from into it

3859
02:34:53,359 --> 02:34:58,559
that way we'll now have the address from

3860
02:34:56,000 --> 02:35:00,799
for every single transaction and when

3861
02:34:58,559 --> 02:35:03,118
you click it you'll be able to see that

3862
02:35:00,799 --> 02:35:06,959
address and all of the transactions on

3863
02:35:03,120 --> 02:35:09,039
the robston test network on etherscan

3864
02:35:06,959 --> 02:35:11,518
this is just providing that extra level

3865
02:35:09,040 --> 02:35:14,719
of connectedness to the blockchain

3866
02:35:11,520 --> 02:35:18,079
now let's also duplicate this anchor tag

3867
02:35:14,719 --> 02:35:19,598
and just below we can right here put the

3868
02:35:18,079 --> 02:35:20,799
address

3869
02:35:19,600 --> 02:35:23,439
2

3870
02:35:20,799 --> 02:35:24,799
this is also going to be address 2 and

3871
02:35:23,439 --> 02:35:29,358
we can say

3872
02:35:24,799 --> 02:35:31,759
2. now we have the from and also to

3873
02:35:29,359 --> 02:35:32,960
below that anchor tag we can create a

3874
02:35:31,760 --> 02:35:35,519
paragraph

3875
02:35:32,959 --> 02:35:37,678
that's going to have a class name equal

3876
02:35:35,520 --> 02:35:39,1000
to text dash white

3877
02:35:37,680 --> 02:35:42,319
text dash base

3878
02:35:40,000 --> 02:35:46,719
and right here we can render the amount

3879
02:35:42,318 --> 02:35:47,999
is equal to amount of ethereum

3880
02:35:46,719 --> 02:35:50,397
there we go

3881
02:35:48,000 --> 02:35:52,879
it looks like we don't need this to be a

3882
02:35:50,398 --> 02:35:54,398
flex container at all we simply need to

3883
02:35:52,879 --> 02:35:56,398
have a full width

3884
02:35:54,398 --> 02:35:58,398
so you can simply remove the flex and

3885
02:35:56,398 --> 02:36:01,199
justify start from here

3886
02:35:58,398 --> 02:36:03,678
there we go and now we have the from the

3887
02:36:01,200 --> 02:36:05,919
two which are clickable and also the

3888
02:36:03,680 --> 02:36:08,960
amount of ethereum being sent

3889
02:36:05,920 --> 02:36:11,439
finally if there is a message

3890
02:36:08,959 --> 02:36:13,039
with that specific transaction so

3891
02:36:11,439 --> 02:36:14,318
message

3892
02:36:13,040 --> 02:36:17,280
and end

3893
02:36:14,318 --> 02:36:20,159
in that case we can render a new react

3894
02:36:17,280 --> 02:36:22,398
fragment it's going to have a break tag

3895
02:36:20,159 --> 02:36:24,639
right here to divide it a bit

3896
02:36:22,398 --> 02:36:26,878
and it's going to have a paragraph

3897
02:36:24,639 --> 02:36:28,879
that's going to have a class

3898
02:36:26,879 --> 02:36:31,518
name

3899
02:36:28,879 --> 02:36:33,119
equal to text white

3900
02:36:31,520 --> 02:36:35,680
text dash base

3901
02:36:33,120 --> 02:36:36,398
and we can simply say message is equal

3902
02:36:35,680 --> 02:36:37,520
to

3903
02:36:36,398 --> 02:36:38,959
message

3904
02:36:37,520 --> 02:36:41,120
there we go

3905
02:36:38,959 --> 02:36:43,518
since these are our demo transactions

3906
02:36:41,120 --> 02:36:45,919
they don't have a message but all of the

3907
02:36:43,520 --> 02:36:48,239
ones sent through our own network will

3908
02:36:45,920 --> 02:36:50,639
have a message property

3909
02:36:48,239 --> 02:36:52,798
great and before actually rendering out

3910
02:36:50,639 --> 02:36:55,438
the image which is going to go right

3911
02:36:52,799 --> 02:36:57,999
here we can render the timestamp the

3912
02:36:55,439 --> 02:37:00,799
timestamp is going to be a div that's

3913
02:36:58,000 --> 02:37:03,359
going to have a class name equal to

3914
02:37:00,799 --> 02:37:04,477
bg-black

3915
02:37:03,359 --> 02:37:06,479
3

3916
02:37:04,478 --> 02:37:08,317
p x 5

3917
02:37:06,478 --> 02:37:11,039
w dash max

3918
02:37:08,318 --> 02:37:12,478
rounded dash 3 x l

3919
02:37:11,040 --> 02:37:13,720
minus

3920
02:37:12,478 --> 02:37:18,559
dash

3921
02:37:13,719 --> 02:37:20,558
mt-5 and shadow dash 2 xl

3922
02:37:18,559 --> 02:37:24,318
right now that's not really noticeable

3923
02:37:20,559 --> 02:37:26,639
but we have a small rectangle right here

3924
02:37:24,318 --> 02:37:29,438
and we can provide a paragraph right

3925
02:37:26,639 --> 02:37:32,398
inside of that div right here

3926
02:37:29,439 --> 02:37:33,280
that p tag is going to have a class

3927
02:37:32,398 --> 02:37:35,679
name

3928
02:37:33,280 --> 02:37:38,879
equal to text dash

3929
02:37:35,680 --> 02:37:41,599
and then in square brackets hash

3930
02:37:38,879 --> 02:37:43,358
37c

3931
02:37:41,600 --> 02:37:45,120
7da

3932
02:37:43,359 --> 02:37:46,640
and it's going to have

3933
02:37:45,120 --> 02:37:48,640
dash bold

3934
02:37:46,639 --> 02:37:49,839
in there we can simply render the

3935
02:37:48,639 --> 02:37:51,759
timestamp

3936
02:37:49,840 --> 02:37:55,840
right now we got an error because at the

3937
02:37:51,760 --> 02:37:58,399
top i misspelled the timestamp

3938
02:37:55,840 --> 02:38:00,399
so if we spell it correctly you can see

3939
02:37:58,398 --> 02:38:02,079
it right here

3940
02:38:00,398 --> 02:38:04,718
of course this is not yet aligning

3941
02:38:02,079 --> 02:38:07,357
properly because we don't yet have a gif

3942
02:38:04,719 --> 02:38:08,879
corresponding to our keyword that we're

3943
02:38:07,359 --> 02:38:11,120
mentioning right here

3944
02:38:08,879 --> 02:38:13,758
and we can also fix this keyword right

3945
02:38:11,120 --> 02:38:16,398
here i noticed that i misspelled it

3946
02:38:13,760 --> 02:38:18,639
so let's search for keyword and let's

3947
02:38:16,398 --> 02:38:19,519
remove this o which is a dipole right

3948
02:38:18,639 --> 02:38:21,518
here

3949
02:38:19,520 --> 02:38:24,159
that's a lot better

3950
02:38:21,520 --> 02:38:27,159
to fetch our gifts we're going to use

3951
02:38:24,159 --> 02:38:27,159
developers.gifi.com

3952
02:38:27,200 --> 02:38:33,759
the world's most popular gif platform

3953
02:38:30,159 --> 02:38:35,838
so let's create a new account right here

3954
02:38:33,760 --> 02:38:38,319
you can go to sign up you'll have to

3955
02:38:35,840 --> 02:38:40,319
enter your details and then i'll see you

3956
02:38:38,318 --> 02:38:42,558
right in their dashboard

3957
02:38:40,318 --> 02:38:44,398
and there we go if you successfully

3958
02:38:42,559 --> 02:38:46,559
created your account you should be on

3959
02:38:44,398 --> 02:38:48,798
your own account page

3960
02:38:46,559 --> 02:38:50,959
so now let's explore the giffy platform

3961
02:38:48,799 --> 02:38:53,279
by going to giphy

3962
02:38:50,959 --> 02:38:55,039
and we're not interested in these gifs

3963
02:38:53,280 --> 02:38:58,039
right here we want to go to

3964
02:38:55,040 --> 02:38:58,040
developers.gifi.com

3965
02:38:58,398 --> 02:39:02,718
now you can click read the docs right

3966
02:39:00,559 --> 02:39:03,759
here or create the account whatever it

3967
02:39:02,719 --> 02:39:05,679
says

3968
02:39:03,760 --> 02:39:07,920
and then at the bottom left if you're

3969
02:39:05,680 --> 02:39:09,358
successfully logged in you can click

3970
02:39:07,920 --> 02:39:11,040
create an app

3971
02:39:09,359 --> 02:39:14,319
in this case we're going to choose a

3972
02:39:11,040 --> 02:39:16,559
giphy api because we don't need any gif

3973
02:39:14,318 --> 02:39:19,279
creation tools we simply need to be able

3974
02:39:16,559 --> 02:39:20,959
to query all the existing gifs

3975
02:39:19,280 --> 02:39:23,039
and click next step

3976
02:39:20,959 --> 02:39:25,438
we can enter our app's name which is

3977
02:39:23,040 --> 02:39:27,520
going to be crypt in my case and how

3978
02:39:25,439 --> 02:39:29,358
will we use our gift key that's going to

3979
02:39:27,520 --> 02:39:30,560
be to query

3980
02:39:29,359 --> 02:39:31,600
different

3981
02:39:30,559 --> 02:39:34,079
gifs

3982
02:39:31,600 --> 02:39:37,199
and let's click right here and create an

3983
02:39:34,079 --> 02:39:39,998
app there we go you just got your api

3984
02:39:37,200 --> 02:39:42,318
key and that's all that we need we can

3985
02:39:40,000 --> 02:39:44,479
copy it

3986
02:39:42,318 --> 02:39:47,598
go back to our application

3987
02:39:44,478 --> 02:39:48,478
and we're going to create a new dot env

3988
02:39:47,600 --> 02:39:51,358
file

3989
02:39:48,478 --> 02:39:52,878
so right inside of our client folder not

3990
02:39:51,359 --> 02:39:55,359
inside of the source

3991
02:39:52,879 --> 02:39:58,239
right here right click and click new

3992
02:39:55,359 --> 02:40:00,559
file and call it dot env

3993
02:39:58,239 --> 02:40:04,838
instead of react underscore app in this

3994
02:40:00,559 --> 02:40:08,879
case we're going to use vite underscore

3995
02:40:04,840 --> 02:40:11,439
giphy underscore api is equal to and

3996
02:40:08,879 --> 02:40:12,879
then you can paste your api key right

3997
02:40:11,439 --> 02:40:15,040
inside of here

3998
02:40:12,879 --> 02:40:18,718
now you can open up the terminal press

3999
02:40:15,040 --> 02:40:21,040
ctrl c to stop it and then just npm run

4000
02:40:18,719 --> 02:40:24,638
dev again to run it and then you'll have

4001
02:40:21,040 --> 02:40:26,318
access to your giphy api environment

4002
02:40:24,639 --> 02:40:29,438
variable

4003
02:40:26,318 --> 02:40:32,079
now we were on our transactions page

4004
02:40:29,439 --> 02:40:34,479
right here where we had everything

4005
02:40:32,079 --> 02:40:36,718
besides our gif image

4006
02:40:34,478 --> 02:40:37,759
so what do we have to do to fetch this

4007
02:40:36,719 --> 02:40:40,558
image

4008
02:40:37,760 --> 02:40:43,200
well we're going to create a custom hook

4009
02:40:40,559 --> 02:40:46,078
so right here we can create a new folder

4010
02:40:43,200 --> 02:40:48,240
in the source folder called hooks

4011
02:40:46,079 --> 02:40:50,798
and right inside of there we can create

4012
02:40:48,239 --> 02:40:51,759
a new use

4013
02:40:50,799 --> 02:40:54,158
fetch

4014
02:40:51,760 --> 02:40:56,559
dot jsx hook

4015
02:40:54,159 --> 02:40:58,878
inside of here we'll write the logic for

4016
02:40:56,559 --> 02:40:59,998
fetching the gif based on a specific

4017
02:40:58,879 --> 02:41:01,999
keyword

4018
02:41:00,000 --> 02:41:03,359
but since this is not related to the

4019
02:41:02,000 --> 02:41:06,799
application

4020
02:41:03,359 --> 02:41:07,1000
to fetch the gif we can import use

4021
02:41:06,799 --> 02:41:11,358
effect

4022
02:41:08,000 --> 02:41:12,879
and use state and that's coming from

4023
02:41:11,359 --> 02:41:16,639
react

4024
02:41:12,879 --> 02:41:18,879
we can also say const api underscore key

4025
02:41:16,639 --> 02:41:22,158
is equal to import

4026
02:41:18,879 --> 02:41:26,798
dot meta dot env dot

4027
02:41:22,159 --> 02:41:28,559
vite underscore giphy underscore api

4028
02:41:26,799 --> 02:41:30,879
this is going to give us access to that

4029
02:41:28,559 --> 02:41:35,679
api key variable

4030
02:41:30,879 --> 02:41:38,798
then we can create a new use fetch hook

4031
02:41:35,680 --> 02:41:41,920
a custom hook to be more precise

4032
02:41:38,799 --> 02:41:45,199
right here we can create a new use state

4033
02:41:41,920 --> 02:41:47,200
field which is going to be the gif url

4034
02:41:45,200 --> 02:41:49,119
and at the start it's going to be set to

4035
02:41:47,200 --> 02:41:51,600
an empty string

4036
02:41:49,120 --> 02:41:52,479
then we can create a cons

4037
02:41:51,600 --> 02:41:54,879
fetch

4038
02:41:52,478 --> 02:41:59,317
gifs function

4039
02:41:54,879 --> 02:41:59,318
that's going to be an async function

4040
02:41:59,359 --> 02:42:02,799
and it's going to have a try and catch

4041
02:42:01,760 --> 02:42:05,039
block

4042
02:42:02,799 --> 02:42:07,999
inside of here we can try getting the

4043
02:42:05,040 --> 02:42:09,278
response from the gephi api by saying

4044
02:42:08,000 --> 02:42:10,160
await

4045
02:42:09,279 --> 02:42:12,399
fetch

4046
02:42:10,159 --> 02:42:14,718
and then in here we have to enter the

4047
02:42:12,398 --> 02:42:17,758
api we want to fetch from

4048
02:42:14,719 --> 02:42:20,478
and to find that api we can go into

4049
02:42:17,760 --> 02:42:23,359
documentation right here

4050
02:42:20,478 --> 02:42:25,998
and we want to fetch specific apis so

4051
02:42:23,359 --> 02:42:28,479
let's go to quick start guide and let's

4052
02:42:26,000 --> 02:42:31,599
try to find different endpoints

4053
02:42:28,478 --> 02:42:34,397
so right here gif and sticker endpoints

4054
02:42:31,600 --> 02:42:35,640
search endpoint and you can see that it

4055
02:42:34,398 --> 02:42:39,838
is

4056
02:42:35,639 --> 02:42:41,919
api.giphy.com v1 gifs and then search

4057
02:42:39,840 --> 02:42:44,080
this is exactly what we need

4058
02:42:41,920 --> 02:42:46,639
so let's copy this

4059
02:42:44,079 --> 02:42:48,039
paste it into this string right here but

4060
02:42:46,639 --> 02:42:51,039
we have to provide

4061
02:42:48,040 --> 02:42:53,278
https column forward slash forward slash

4062
02:42:51,040 --> 02:42:56,160
at the start and then we have to provide

4063
02:42:53,279 --> 02:42:58,479
some parameters things like queue as in

4064
02:42:56,159 --> 02:43:01,918
query and api key

4065
02:42:58,478 --> 02:43:04,079
so at the end let's simply say question

4066
02:43:01,920 --> 02:43:07,519
mark to provide parameters

4067
02:43:04,079 --> 02:43:10,239
api underscore key is equal to

4068
02:43:07,520 --> 02:43:11,1000
and then dollar sign curly braces

4069
02:43:10,239 --> 02:43:14,397
we have to turn this into a template

4070
02:43:12,000 --> 02:43:17,120
string to be able to use logic inside of

4071
02:43:14,398 --> 02:43:19,199
our string right here we can render our

4072
02:43:17,120 --> 02:43:21,120
api underscore key

4073
02:43:19,200 --> 02:43:23,600
and then we're going to say end

4074
02:43:21,120 --> 02:43:25,200
q is equal to

4075
02:43:23,600 --> 02:43:26,318
that's going to be dollar sign curly

4076
02:43:25,200 --> 02:43:27,840
braces

4077
02:43:26,318 --> 02:43:30,398
keyword

4078
02:43:27,840 --> 02:43:31,359
dot split and we want to split it by

4079
02:43:30,398 --> 02:43:33,599
space

4080
02:43:31,359 --> 02:43:36,639
because someone might actually type a

4081
02:43:33,600 --> 02:43:37,519
few words into our input field right

4082
02:43:36,639 --> 02:43:39,277
here

4083
02:43:37,520 --> 02:43:40,240
and how are we going to search for gifs

4084
02:43:39,279 --> 02:43:42,640
then

4085
02:43:40,239 --> 02:43:44,878
so we're going to first split our string

4086
02:43:42,639 --> 02:43:47,839
with spaces like this and then we're

4087
02:43:44,879 --> 02:43:50,478
going to join it right back by saying

4088
02:43:47,840 --> 02:43:53,120
join and then we don't pass a space

4089
02:43:50,478 --> 02:43:55,838
right here that way we'll just have one

4090
02:43:53,120 --> 02:43:57,120
word without spaces in our keyboard at

4091
02:43:55,840 --> 02:43:59,840
all times

4092
02:43:57,120 --> 02:44:02,479
and finally at the end we can say and

4093
02:43:59,840 --> 02:44:05,040
limit is equal to one because we need to

4094
02:44:02,478 --> 02:44:07,119
be able to find just one gif

4095
02:44:05,040 --> 02:44:10,080
now that we have our query we can

4096
02:44:07,120 --> 02:44:13,839
destructure the data from the response

4097
02:44:10,079 --> 02:44:18,239
by saying const in curly braces data is

4098
02:44:13,840 --> 02:44:20,319
equal to a weight response dot json and

4099
02:44:18,239 --> 02:44:23,519
finally we want to set the state of our

4100
02:44:20,318 --> 02:44:24,638
gif so set gif url is going to be equal

4101
02:44:23,520 --> 02:44:26,479
to

4102
02:44:24,639 --> 02:44:28,959
data 0

4103
02:44:26,478 --> 02:44:34,397
question mark dot images question mark

4104
02:44:28,959 --> 02:44:36,558
dot down size underscore medium dot url

4105
02:44:34,398 --> 02:44:37,918
and let's also put a question mark dot

4106
02:44:36,559 --> 02:44:41,118
right here

4107
02:44:37,920 --> 02:44:44,799
and to handle the catch we can go to our

4108
02:44:41,120 --> 02:44:46,799
utils dummy data we can copy one demo

4109
02:44:44,799 --> 02:44:51,598
url from these

4110
02:44:46,799 --> 02:44:54,799
go back and simply say set gif url to be

4111
02:44:51,600 --> 02:44:57,760
equal to a string of that specific gif

4112
02:44:54,799 --> 02:44:59,999
that's going to be a random gif so if a

4113
02:44:57,760 --> 02:45:01,519
new gif isn't found we can just use a

4114
02:45:00,000 --> 02:45:03,919
demo one

4115
02:45:01,520 --> 02:45:05,1000
and finally when are we calling this

4116
02:45:03,920 --> 02:45:08,880
fetch gif function

4117
02:45:06,000 --> 02:45:10,479
well we'll call it just below inside of

4118
02:45:08,879 --> 02:45:12,718
the use effect

4119
02:45:10,478 --> 02:45:15,277
our use effect is going to happen

4120
02:45:12,719 --> 02:45:17,919
whenever the keyword changes so right

4121
02:45:15,279 --> 02:45:19,1000
here we're going to pass the keyword

4122
02:45:17,920 --> 02:45:23,1000
and the keyword is going to be coming

4123
02:45:20,000 --> 02:45:26,479
through props to our use fetch function

4124
02:45:24,000 --> 02:45:29,278
or use fetch custom hook

4125
02:45:26,478 --> 02:45:31,357
so right here we can say keyword and

4126
02:45:29,279 --> 02:45:34,639
whenever the keyword changes we can

4127
02:45:31,359 --> 02:45:36,559
simply say if there is a keyword in that

4128
02:45:34,639 --> 02:45:37,599
case we want to call

4129
02:45:36,559 --> 02:45:39,759
fetch

4130
02:45:37,600 --> 02:45:41,1000
gifs function

4131
02:45:39,760 --> 02:45:44,319
and the last and only thing that our use

4132
02:45:42,000 --> 02:45:45,680
fetch function is going to do is it's

4133
02:45:44,318 --> 02:45:46,718
going to return

4134
02:45:45,680 --> 02:45:47,999
a gif

4135
02:45:46,719 --> 02:45:51,759
url

4136
02:45:48,000 --> 02:45:52,719
and finally we have to export default

4137
02:45:51,760 --> 02:45:55,039
use

4138
02:45:52,719 --> 02:45:55,038
fetch

4139
02:45:55,120 --> 02:46:00,240
again just make sure that this specific

4140
02:45:58,159 --> 02:46:02,477
query for fetching gifs is written

4141
02:46:00,239 --> 02:46:05,437
correctly and also that you don't have

4142
02:46:02,478 --> 02:46:07,519
any mistakes in the logic right here

4143
02:46:05,439 --> 02:46:09,200
if something doesn't seem to be working

4144
02:46:07,520 --> 02:46:12,478
in that case you can check the github

4145
02:46:09,200 --> 02:46:15,200
repository and find the use fetch.jsx

4146
02:46:12,478 --> 02:46:17,199
file and compare it with your own

4147
02:46:15,200 --> 02:46:19,438
so now that we have our use fetch

4148
02:46:17,200 --> 02:46:22,560
function we can go back

4149
02:46:19,439 --> 02:46:25,919
we can import that's going to be use

4150
02:46:22,559 --> 02:46:29,118
fetch from dot slash hooks

4151
02:46:25,920 --> 02:46:31,679
forward slash use fetch and now right

4152
02:46:29,120 --> 02:46:35,438
inside of here inside of our transaction

4153
02:46:31,680 --> 02:46:36,319
card we can say const gif url is equal

4154
02:46:35,439 --> 02:46:39,759
to

4155
02:46:36,318 --> 02:46:41,838
use fetch and we're gonna pass in an

4156
02:46:39,760 --> 02:46:43,039
object that's going to contain the

4157
02:46:41,840 --> 02:46:45,119
keyboard

4158
02:46:43,040 --> 02:46:47,839
great so where are we going to render

4159
02:46:45,120 --> 02:46:49,679
that image that's going to be right here

4160
02:46:47,840 --> 02:46:52,559
we can simply say

4161
02:46:49,680 --> 02:46:54,479
image as a self-closing tag

4162
02:46:52,559 --> 02:46:57,358
and then we're going to provide a source

4163
02:46:54,478 --> 02:47:00,798
which is going to be just a gif url

4164
02:46:57,359 --> 02:47:02,399
or url this is going to be for our demo

4165
02:47:00,799 --> 02:47:04,238
images

4166
02:47:02,398 --> 02:47:05,599
we can give it an alt which is going to

4167
02:47:04,239 --> 02:47:07,598
say give

4168
02:47:05,600 --> 02:47:08,479
and then finally we can give it a class

4169
02:47:07,600 --> 02:47:10,398
name

4170
02:47:08,478 --> 02:47:12,478
w dash full

4171
02:47:10,398 --> 02:47:13,918
h-64

4172
02:47:12,478 --> 02:47:18,239
2xl

4173
02:47:13,920 --> 02:47:20,399
then we're going to make it height 96

4174
02:47:18,239 --> 02:47:22,397
rounded dash medium

4175
02:47:20,398 --> 02:47:25,039
shadow dash lg

4176
02:47:22,398 --> 02:47:26,798
and object dash cover

4177
02:47:25,040 --> 02:47:28,560
now if we save that

4178
02:47:26,799 --> 02:47:31,039
you can see right here something seems

4179
02:47:28,559 --> 02:47:34,398
to be broken it always has to be broken

4180
02:47:31,040 --> 02:47:36,959
first only so that it can work later so

4181
02:47:34,398 --> 02:47:39,678
let's see what are we missing

4182
02:47:36,959 --> 02:47:41,838
i'm going to open up our console reload

4183
02:47:39,680 --> 02:47:43,760
the page

4184
02:47:41,840 --> 02:47:45,679
and right now we shouldn't even be

4185
02:47:43,760 --> 02:47:48,559
fetching real gifs because we're

4186
02:47:45,680 --> 02:47:51,359
rendering just the dummy data so in here

4187
02:47:48,559 --> 02:47:53,039
we should have or and not just one

4188
02:47:51,359 --> 02:47:56,479
single straight line

4189
02:47:53,040 --> 02:47:58,719
as soon as we add or our gifs are right

4190
02:47:56,478 --> 02:48:01,357
here there we go

4191
02:47:58,719 --> 02:48:02,638
so now we have the six of our dummy

4192
02:48:01,359 --> 02:48:04,720
transactions

4193
02:48:02,639 --> 02:48:06,558
and looks like the timestamp is going

4194
02:48:04,719 --> 02:48:07,679
into the image which shouldn't really be

4195
02:48:06,559 --> 02:48:09,438
the case

4196
02:48:07,680 --> 02:48:12,720
so let's see

4197
02:48:09,439 --> 02:48:15,520
the image and this div with a timestamp

4198
02:48:12,719 --> 02:48:17,039
should be outside with the entirety of

4199
02:48:15,520 --> 02:48:18,560
the other content

4200
02:48:17,040 --> 02:48:20,560
if we save that

4201
02:48:18,559 --> 02:48:22,959
now you'll see that the timestamp goes

4202
02:48:20,559 --> 02:48:25,839
nicely over the image

4203
02:48:22,959 --> 02:48:28,079
this is looking great but of course

4204
02:48:25,840 --> 02:48:29,840
these are just dummy transactions these

4205
02:48:28,079 --> 02:48:32,079
are not the real transactions that we

4206
02:48:29,840 --> 02:48:34,240
send through our network and they're not

4207
02:48:32,079 --> 02:48:36,317
read from the blockchain anybody could

4208
02:48:34,239 --> 02:48:38,317
have done this right this is not a web

4209
02:48:36,318 --> 02:48:40,638
3.0 application

4210
02:48:38,318 --> 02:48:42,318
so right now let's just finish up our

4211
02:48:40,639 --> 02:48:44,639
site with the footer which is going to

4212
02:48:42,318 --> 02:48:46,879
be incredibly quick and then we're going

4213
02:48:44,639 --> 02:48:49,518
to replace these transactions to show

4214
02:48:46,879 --> 02:48:51,839
the real transactions that are sent

4215
02:48:49,520 --> 02:48:54,478
through our ethereum blockchain

4216
02:48:51,840 --> 02:48:57,599
to implement the code for our footer we

4217
02:48:54,478 --> 02:48:59,758
can go of course to our footer component

4218
02:48:57,600 --> 02:49:03,040
and right here the only thing we're

4219
02:48:59,760 --> 02:49:04,399
going to import is going to be the logo

4220
02:49:03,040 --> 02:49:07,358
right here

4221
02:49:04,398 --> 02:49:10,478
and that's coming from dot slash dot

4222
02:49:07,359 --> 02:49:13,679
slash images forward slash and then

4223
02:49:10,478 --> 02:49:15,199
that's going to be logo dot png

4224
02:49:13,680 --> 02:49:16,800
everything else we're going to code

4225
02:49:15,200 --> 02:49:19,200
straight away

4226
02:49:16,799 --> 02:49:20,638
so right inside of here we can create a

4227
02:49:19,200 --> 02:49:23,520
div

4228
02:49:20,639 --> 02:49:24,799
and this div is going to have a class

4229
02:49:23,520 --> 02:49:28,159
name

4230
02:49:24,799 --> 02:49:30,159
right here which is going to be equal to

4231
02:49:28,159 --> 02:49:31,357
with dash full

4232
02:49:30,159 --> 02:49:34,317
flex

4233
02:49:31,359 --> 02:49:37,040
md justify dash center

4234
02:49:34,318 --> 02:49:39,119
justify dash between

4235
02:49:37,040 --> 02:49:41,040
items dash center

4236
02:49:39,120 --> 02:49:42,720
flex dash call

4237
02:49:41,040 --> 02:49:46,639
padding dash 4

4238
02:49:42,719 --> 02:49:49,679
gradient bg dash footer

4239
02:49:46,639 --> 02:49:51,679
there we go now we have our entire page

4240
02:49:49,680 --> 02:49:53,840
fill in these gradients

4241
02:49:51,680 --> 02:49:55,200
inside of that div we're gonna have one

4242
02:49:53,840 --> 02:49:57,759
more div

4243
02:49:55,200 --> 02:49:58,880
and this div is going to have a class

4244
02:49:57,760 --> 02:50:00,240
name

4245
02:49:58,879 --> 02:50:02,398
equal to

4246
02:50:00,239 --> 02:50:03,598
with dash full

4247
02:50:02,398 --> 02:50:06,558
flex

4248
02:50:03,600 --> 02:50:09,359
on small devices flex dash row and

4249
02:50:06,559 --> 02:50:12,238
usually flex dash column

4250
02:50:09,359 --> 02:50:16,639
justify dash between

4251
02:50:12,239 --> 02:50:18,559
items dash center and margin y dash 4.

4252
02:50:16,639 --> 02:50:21,039
finally we're going to create a div

4253
02:50:18,559 --> 02:50:23,759
that's going to contain our image so

4254
02:50:21,040 --> 02:50:25,759
right here we can create an image

4255
02:50:23,760 --> 02:50:27,679
that image is going to have the source

4256
02:50:25,760 --> 02:50:31,120
equal to logo

4257
02:50:27,680 --> 02:50:34,479
alt is going to be logo and class name

4258
02:50:31,120 --> 02:50:36,398
is going to be width dash 32 if we save

4259
02:50:34,478 --> 02:50:37,518
that you can see the crypt logo right

4260
02:50:36,398 --> 02:50:39,277
here

4261
02:50:37,520 --> 02:50:42,560
let's provide some class names to the

4262
02:50:39,279 --> 02:50:46,240
outer div some things like flex

4263
02:50:42,559 --> 02:50:48,398
flex dash and then 0.5 this is going to

4264
02:50:46,239 --> 02:50:51,758
take just half of the space

4265
02:50:48,398 --> 02:50:54,239
then justify dash center and items dash

4266
02:50:51,760 --> 02:50:55,438
center there we go now we positioned it

4267
02:50:54,239 --> 02:50:58,078
right here

4268
02:50:55,439 --> 02:51:01,200
and below that we want to have one more

4269
02:50:58,079 --> 02:51:03,478
div this div is going to have a class

4270
02:51:01,200 --> 02:51:05,200
name equal to flex

4271
02:51:03,478 --> 02:51:07,678
flex-1

4272
02:51:05,200 --> 02:51:09,799
justify dash evenly

4273
02:51:07,680 --> 02:51:11,358
items center

4274
02:51:09,799 --> 02:51:13,078
flex-wrap

4275
02:51:11,359 --> 02:51:14,879
on small devices

4276
02:51:13,079 --> 02:51:17,519
mt-0

4277
02:51:14,879 --> 02:51:20,318
usually empty-5

4278
02:51:17,520 --> 02:51:23,600
and with dash full

4279
02:51:20,318 --> 02:51:25,278
now inside of there we can put our links

4280
02:51:23,600 --> 02:51:26,879
and these links are just going to be

4281
02:51:25,279 --> 02:51:29,439
different paragraphs

4282
02:51:26,879 --> 02:51:31,598
let's do something like market and then

4283
02:51:29,439 --> 02:51:34,399
let's give it a class name

4284
02:51:31,600 --> 02:51:36,080
equal to text white

4285
02:51:34,398 --> 02:51:38,398
text dash base

4286
02:51:36,079 --> 02:51:39,918
text dash center

4287
02:51:38,398 --> 02:51:42,718
mx-2

4288
02:51:39,920 --> 02:51:44,719
and cursor dash pointer

4289
02:51:42,719 --> 02:51:47,199
there we go and now we're going to

4290
02:51:44,719 --> 02:51:50,079
duplicate this four times or rather

4291
02:51:47,200 --> 02:51:51,438
three more times and change this to say

4292
02:51:50,079 --> 02:51:53,679
exchange

4293
02:51:51,439 --> 02:51:56,240
then something like tutorials

4294
02:51:53,680 --> 02:51:58,640
and finally wallets

4295
02:51:56,239 --> 02:52:01,357
and there we go we have our four links

4296
02:51:58,639 --> 02:52:03,599
with this script logo right here

4297
02:52:01,359 --> 02:52:06,080
we can also do something more for our

4298
02:52:03,600 --> 02:52:08,478
footer so let's create one more div

4299
02:52:06,079 --> 02:52:09,438
but make sure to do it below these two

4300
02:52:08,478 --> 02:52:11,918
divs

4301
02:52:09,439 --> 02:52:15,040
and right here we can give this div a

4302
02:52:11,920 --> 02:52:17,120
class name equal to flex

4303
02:52:15,040 --> 02:52:19,040
justify dash center

4304
02:52:17,120 --> 02:52:21,799
items dash center

4305
02:52:19,040 --> 02:52:24,959
flex dash call

4306
02:52:21,799 --> 02:52:27,518
mt-5 inside of there we can create a

4307
02:52:24,959 --> 02:52:31,199
paragraph that paragraph is going to

4308
02:52:27,520 --> 02:52:32,159
have a class name equal to text dash

4309
02:52:31,200 --> 02:52:35,680
white

4310
02:52:32,159 --> 02:52:38,958
text dash small and text center inside

4311
02:52:35,680 --> 02:52:41,359
of there we can say come join us

4312
02:52:38,959 --> 02:52:42,559
and then just below that we can enter

4313
02:52:41,359 --> 02:52:47,799
our email

4314
02:52:42,559 --> 02:52:47,799
something like info at cryptomastery.com

4315
02:52:47,920 --> 02:52:52,479
and there we go come join us is right

4316
02:52:50,398 --> 02:52:54,478
inside of here and that is one great

4317
02:52:52,478 --> 02:52:56,397
thing about custom emails and custom

4318
02:52:54,478 --> 02:52:58,798
domain names if you purchase the

4319
02:52:56,398 --> 02:53:01,119
hostinger's shared hosting plan you're

4320
02:52:58,799 --> 02:53:03,039
going to get plenty of email addresses

4321
02:53:01,120 --> 02:53:05,919
completely for free and then you can

4322
02:53:03,040 --> 02:53:06,839
create your addresses such as info ad

4323
02:53:05,920 --> 02:53:08,399
and then

4324
02:53:06,840 --> 02:53:10,719
yourdomain.com

4325
02:53:08,398 --> 02:53:13,119
if you're building a serious site or a

4326
02:53:10,719 --> 02:53:15,438
portfolio website it definitely makes

4327
02:53:13,120 --> 02:53:18,240
sense to have this as it provides an

4328
02:53:15,439 --> 02:53:20,719
extra level of authenticity to your site

4329
02:53:18,239 --> 02:53:23,277
someone is much more likely to purchase

4330
02:53:20,719 --> 02:53:26,478
something or use your site if you have a

4331
02:53:23,279 --> 02:53:28,160
custom domain like cryptomastery.com

4332
02:53:26,478 --> 02:53:30,317
so if you haven't yet purchased the

4333
02:53:28,159 --> 02:53:31,918
hostinger plan you can still do that by

4334
02:53:30,318 --> 02:53:33,758
the end of this video

4335
02:53:31,920 --> 02:53:36,160
now let's continue and finish up our

4336
02:53:33,760 --> 02:53:41,200
footer by creating a self-closing div

4337
02:53:36,159 --> 02:53:45,198
tag with a class name equal to sm colon

4338
02:53:41,200 --> 02:53:47,039
w dash and then in square brackets 90

4339
02:53:45,200 --> 02:53:48,720
percent like this

4340
02:53:47,040 --> 02:53:52,200
with dash full

4341
02:53:48,719 --> 02:53:54,478
height dash in square brackets

4342
02:53:52,200 --> 02:53:59,240
0.25 pixels

4343
02:53:54,478 --> 02:54:00,878
and then vg dash gray dash 400

4344
02:53:59,239 --> 02:54:03,357
mt-5

4345
02:54:00,879 --> 02:54:05,758
this is going to create this nice line

4346
02:54:03,359 --> 02:54:08,160
right here and finally we have to have

4347
02:54:05,760 --> 02:54:09,1000
the last div of our footer

4348
02:54:08,159 --> 02:54:12,639
so let's create that div

4349
02:54:10,000 --> 02:54:13,600
this div is also going to have a class

4350
02:54:12,639 --> 02:54:15,918
name

4351
02:54:13,600 --> 02:54:18,880
and it's also going to start with small

4352
02:54:15,920 --> 02:54:20,719
width 90 so we can copy that

4353
02:54:18,879 --> 02:54:21,919
with dash full

4354
02:54:20,719 --> 02:54:24,158
flex

4355
02:54:21,920 --> 02:54:25,1000
justify dash between

4356
02:54:24,159 --> 02:54:27,918
items center

4357
02:54:26,000 --> 02:54:30,318
and mt-3

4358
02:54:27,920 --> 02:54:33,279
now inside of there we can copy this

4359
02:54:30,318 --> 02:54:34,558
paragraph where we say com join us

4360
02:54:33,279 --> 02:54:38,479
paste it here

4361
02:54:34,559 --> 02:54:41,519
and we're gonna say add cryptomastery

4362
02:54:38,478 --> 02:54:43,599
2022 and we can duplicate that one more

4363
02:54:41,520 --> 02:54:47,600
time and we're going to use that famous

4364
02:54:43,600 --> 02:54:50,080
line all rights reserved

4365
02:54:47,600 --> 02:54:51,278
there we go this is looking so much

4366
02:54:50,079 --> 02:54:54,079
better

4367
02:54:51,279 --> 02:54:56,559
this just concluded the entire design of

4368
02:54:54,079 --> 02:54:58,638
our website starting from the nice

4369
02:54:56,559 --> 02:55:01,278
welcome page with the form to send

4370
02:54:58,639 --> 02:55:04,318
ethereum across blockchain nice header

4371
02:55:01,279 --> 02:55:07,439
at the top the services page latest

4372
02:55:04,318 --> 02:55:09,358
transactions page and finally the footer

4373
02:55:07,439 --> 02:55:12,318
now is the time that we get back to some

4374
02:55:09,359 --> 02:55:14,960
blockchain work and actually retrieve

4375
02:55:12,318 --> 02:55:17,119
the list of all transactions that were

4376
02:55:14,959 --> 02:55:19,119
sent across our network

4377
02:55:17,120 --> 02:55:21,520
let's do that right away

4378
02:55:19,120 --> 02:55:24,479
to get our transactions we're going to

4379
02:55:21,520 --> 02:55:25,840
go into context and then transaction

4380
02:55:24,478 --> 02:55:29,277
context

4381
02:55:25,840 --> 02:55:32,080
now we can go just below our check if

4382
02:55:29,279 --> 02:55:34,719
wallet is connected function and right

4383
02:55:32,079 --> 02:55:36,638
here we can create one new function

4384
02:55:34,719 --> 02:55:37,998
which is called const

4385
02:55:36,639 --> 02:55:39,759
check if

4386
02:55:38,000 --> 02:55:40,960
transactions

4387
02:55:39,760 --> 02:55:43,199
exist

4388
02:55:40,959 --> 02:55:45,199
and that's going to be another async

4389
02:55:43,200 --> 02:55:48,478
function like this

4390
02:55:45,200 --> 02:55:50,959
it's going to have a try and catch block

4391
02:55:48,478 --> 02:55:53,599
and in here we also want to get that

4392
02:55:50,959 --> 02:55:55,678
ethereum contract so we can copy that

4393
02:55:53,600 --> 02:55:58,399
line from here khan's transaction

4394
02:55:55,680 --> 02:55:59,680
contract is equal to get ethereum

4395
02:55:58,398 --> 02:56:01,199
contract

4396
02:55:59,680 --> 02:56:03,760
paste it here

4397
02:56:01,200 --> 02:56:06,318
and then we want to get the transaction

4398
02:56:03,760 --> 02:56:08,800
count which we are already doing here so

4399
02:56:06,318 --> 02:56:10,879
we can copy that from here

4400
02:56:08,799 --> 02:56:13,518
that happens once we are sending the

4401
02:56:10,879 --> 02:56:16,079
transaction so we get the transaction

4402
02:56:13,520 --> 02:56:17,439
contract and then we get the number of

4403
02:56:16,079 --> 02:56:18,958
transactions

4404
02:56:17,439 --> 02:56:21,1000
the only thing that this function is

4405
02:56:18,959 --> 02:56:23,678
going to do is going to be window dot

4406
02:56:22,000 --> 02:56:26,960
local storage

4407
02:56:23,680 --> 02:56:29,1000
dot set item and in here we want to set

4408
02:56:26,959 --> 02:56:32,638
the transaction count to be equal to

4409
02:56:30,000 --> 02:56:35,120
transaction count that's going to be it

4410
02:56:32,639 --> 02:56:37,759
and we can copy the error from here

4411
02:56:35,120 --> 02:56:40,318
because it's going to be the same

4412
02:56:37,760 --> 02:56:44,160
now we can call this function just below

4413
02:56:40,318 --> 02:56:46,638
calling our check if wallet is connected

4414
02:56:44,159 --> 02:56:48,317
right here and that's going to be it

4415
02:56:46,639 --> 02:56:50,478
that's essentially just going to set up

4416
02:56:48,318 --> 02:56:52,798
the current number of transactions so

4417
02:56:50,478 --> 02:56:54,478
that for every new transaction we know

4418
02:56:52,799 --> 02:56:56,558
which one is it

4419
02:56:54,478 --> 02:56:59,277
and now finally the part you've been all

4420
02:56:56,559 --> 02:57:01,519
waiting for we can create a new function

4421
02:56:59,279 --> 02:57:02,399
just below our handle change which is on

4422
02:57:01,520 --> 02:57:03,439
top

4423
02:57:02,398 --> 02:57:04,478
called

4424
02:57:03,439 --> 02:57:07,599
const

4425
02:57:04,478 --> 02:57:10,079
get all transactions

4426
02:57:07,600 --> 02:57:12,720
that's another async function that's

4427
02:57:10,079 --> 02:57:15,277
going to have a try and catch block

4428
02:57:12,719 --> 02:57:17,438
inside of it we also have to check if

4429
02:57:15,279 --> 02:57:20,559
people have metamask installed so we can

4430
02:57:17,439 --> 02:57:23,278
say if no ethereum object then return

4431
02:57:20,559 --> 02:57:26,158
please install metamask and the only

4432
02:57:23,279 --> 02:57:29,439
thing we have to do is say const

4433
02:57:26,159 --> 02:57:32,159
available transactions is a weight

4434
02:57:29,439 --> 02:57:33,759
transaction contract and then

4435
02:57:32,159 --> 02:57:37,357
dot

4436
02:57:33,760 --> 02:57:39,359
get all transactions this is a special

4437
02:57:37,359 --> 02:57:41,519
function we created on our smart

4438
02:57:39,359 --> 02:57:42,879
contract that's going to return all the

4439
02:57:41,520 --> 02:57:44,240
transactions

4440
02:57:42,879 --> 02:57:46,798
but we first have to get this

4441
02:57:44,239 --> 02:57:50,158
transaction contract and to do that we

4442
02:57:46,799 --> 02:57:52,959
can simply copy this line construction

4443
02:57:50,159 --> 02:57:54,159
contract is equal to get ethereum

4444
02:57:52,959 --> 02:57:55,679
contract

4445
02:57:54,159 --> 02:57:57,918
let's paste it here

4446
02:57:55,680 --> 02:58:00,800
and that's going to be it now we can

4447
02:57:57,920 --> 02:58:02,080
console.log all available transactions

4448
02:58:00,799 --> 02:58:04,718
right here

4449
02:58:02,079 --> 02:58:07,438
and also for the error let's simply

4450
02:58:04,719 --> 02:58:08,638
console.log that error

4451
02:58:07,439 --> 02:58:10,479
there we go

4452
02:58:08,639 --> 02:58:13,198
we can reload the page

4453
02:58:10,478 --> 02:58:14,239
and we have to call get all transactions

4454
02:58:13,200 --> 02:58:16,160
somewhere

4455
02:58:14,239 --> 02:58:18,158
but of course we won't be able to see

4456
02:58:16,159 --> 02:58:19,679
this console log because this function

4457
02:58:18,159 --> 02:58:22,718
is never called

4458
02:58:19,680 --> 02:58:25,279
so in the check if wallet is connected

4459
02:58:22,719 --> 02:58:26,558
right here we want to get all available

4460
02:58:25,279 --> 02:58:29,519
transactions

4461
02:58:26,559 --> 02:58:30,719
great now we can reload the page go to

4462
02:58:29,520 --> 02:58:33,040
console

4463
02:58:30,719 --> 02:58:35,278
in the info right here we can see an

4464
02:58:33,040 --> 02:58:37,439
array with one element if i'm not

4465
02:58:35,279 --> 02:58:40,240
mistaken we only made one test

4466
02:58:37,439 --> 02:58:43,919
transaction and this is it you can see

4467
02:58:40,239 --> 02:58:46,078
it has keys from 0 to 5 and also it has

4468
02:58:43,920 --> 02:58:49,759
some object properties such as the

4469
02:58:46,079 --> 02:58:51,277
amount keyword message receiver sender

4470
02:58:49,760 --> 02:58:53,438
and timestamp

4471
02:58:51,279 --> 02:58:55,519
but this is in a bit of a weird format

4472
02:58:53,439 --> 02:58:58,240
here with the numbers as keys and then

4473
02:58:55,520 --> 02:59:01,199
the real keys so let's create a new

4474
02:58:58,239 --> 02:59:05,118
structured transaction we can do that by

4475
02:59:01,200 --> 02:59:07,839
saying const structured transactions is

4476
02:59:05,120 --> 02:59:09,200
going to be equal to available

4477
02:59:07,840 --> 02:59:11,520
transactions

4478
02:59:09,200 --> 02:59:12,720
dot map and then we're gonna get each

4479
02:59:11,520 --> 02:59:15,120
transaction

4480
02:59:12,719 --> 02:59:17,679
and we simply want to instantly return

4481
02:59:15,120 --> 02:59:20,318
an object you do that by putting

4482
02:59:17,680 --> 02:59:22,239
parentheses and then inside of them an

4483
02:59:20,318 --> 02:59:24,318
object sign so

4484
02:59:22,239 --> 02:59:25,759
what do we want to do we want to have

4485
02:59:24,318 --> 02:59:28,079
the address

4486
02:59:25,760 --> 02:59:29,1000
to property which is going to be equal

4487
02:59:28,079 --> 02:59:32,798
to transaction

4488
02:59:30,000 --> 02:59:35,679
dot receiver then we want to have the

4489
02:59:32,799 --> 02:59:41,039
address from property which is going to

4490
02:59:35,680 --> 02:59:43,359
be equal to transaction dot sender

4491
02:59:41,040 --> 02:59:46,959
then we want to have a timestamp which

4492
02:59:43,359 --> 02:59:50,240
is going to be equal to new date

4493
02:59:46,959 --> 02:59:52,959
transaction dot timestamp

4494
02:59:50,239 --> 02:59:55,199
and then dot 2 number

4495
02:59:52,959 --> 02:59:57,598
times 1000

4496
02:59:55,200 --> 02:59:58,959
and finally dot to

4497
02:59:57,600 --> 03:00:00,240
locale

4498
02:59:58,959 --> 03:00:02,398
string

4499
03:00:00,239 --> 03:00:04,559
this is going to give us that nice time

4500
03:00:02,398 --> 03:00:07,678
and date representation the thing i'm

4501
03:00:04,559 --> 03:00:09,759
referring to is this format right here

4502
03:00:07,680 --> 03:00:12,160
then we're gonna have a comma

4503
03:00:09,760 --> 03:00:14,479
then we need a message which is simply

4504
03:00:12,159 --> 03:00:15,918
going to be transaction

4505
03:00:14,478 --> 03:00:18,159
dot message

4506
03:00:15,920 --> 03:00:20,160
we need to have a keyword which is going

4507
03:00:18,159 --> 03:00:21,839
to be transaction

4508
03:00:20,159 --> 03:00:24,958
dot keyword

4509
03:00:21,840 --> 03:00:26,800
and finally the amount is going to be

4510
03:00:24,959 --> 03:00:28,079
parse int

4511
03:00:26,799 --> 03:00:31,358
transaction

4512
03:00:28,079 --> 03:00:34,559
dot amount dot underscore hex

4513
03:00:31,359 --> 03:00:37,599
and then we're going to multiply that by

4514
03:00:34,559 --> 03:00:39,599
10 to the power of 18

4515
03:00:37,600 --> 03:00:42,399
because if you think about it we already

4516
03:00:39,600 --> 03:00:45,359
discussed it that all values are written

4517
03:00:42,398 --> 03:00:48,878
in hexadecimal and not only hexadecimal

4518
03:00:45,359 --> 03:00:51,439
ethereum but hexadecimal wei which is

4519
03:00:48,879 --> 03:00:54,159
the subunit of ethereum so to get

4520
03:00:51,439 --> 03:00:57,839
ethereum we have to multiply it by

4521
03:00:54,159 --> 03:00:59,519
extremely large 10 to the power of 18.

4522
03:00:57,840 --> 03:01:02,559
that is going to give us the real

4523
03:00:59,520 --> 03:01:06,159
ethereum amount now that we have r i

4524
03:01:02,559 --> 03:01:08,879
have a typo here structured transactions

4525
03:01:06,159 --> 03:01:09,839
we can simply set them to the state by

4526
03:01:08,879 --> 03:01:12,959
saying

4527
03:01:09,840 --> 03:01:15,279
set transactions and that's going to be

4528
03:01:12,959 --> 03:01:17,999
structured transactions

4529
03:01:15,279 --> 03:01:20,639
great and let's also console log them so

4530
03:01:18,000 --> 03:01:21,680
we can see if everything is right if we

4531
03:01:20,639 --> 03:01:23,038
go back

4532
03:01:21,680 --> 03:01:24,640
reload the page

4533
03:01:23,040 --> 03:01:27,120
we should be able to see that one

4534
03:01:24,639 --> 03:01:29,039
transaction set transactions is not

4535
03:01:27,120 --> 03:01:31,919
defined let's see

4536
03:01:29,040 --> 03:01:35,358
that's because we don't yet have the use

4537
03:01:31,920 --> 03:01:37,359
state hook for our transactions so we

4538
03:01:35,359 --> 03:01:39,599
can create transactions and set

4539
03:01:37,359 --> 03:01:42,399
transactions and at the start that's

4540
03:01:39,600 --> 03:01:45,040
going to be set to an empty array if we

4541
03:01:42,398 --> 03:01:47,119
save that and reload the page you can

4542
03:01:45,040 --> 03:01:49,520
now see that we have an array with one

4543
03:01:47,120 --> 03:01:52,639
object and that is a nicely formatted

4544
03:01:49,520 --> 03:01:55,199
transaction but we have few issues one

4545
03:01:52,639 --> 03:01:57,999
is with the amount and the other one is

4546
03:01:55,200 --> 03:02:01,520
with the timestamp the amount seems too

4547
03:01:58,000 --> 03:02:04,399
big and the timestamp is an invalid date

4548
03:02:01,520 --> 03:02:08,640
so let's fix those right away for our

4549
03:02:04,398 --> 03:02:08,638
timestamp we need to say newdate

4550
03:02:08,840 --> 03:02:13,519
transaction.timestamp.2 number but this

4551
03:02:11,120 --> 03:02:15,600
here is supposed to be a function

4552
03:02:13,520 --> 03:02:17,920
so if we now save this

4553
03:02:15,600 --> 03:02:20,800
and reload the page now

4554
03:02:17,920 --> 03:02:23,920
our timestamp is going to be correct it

4555
03:02:20,799 --> 03:02:26,278
is right here and for the amount we have

4556
03:02:23,920 --> 03:02:29,279
to say parseint

4557
03:02:26,279 --> 03:02:31,279
transaction.amount dot underscore hex

4558
03:02:29,279 --> 03:02:34,319
and then this here is not going to be

4559
03:02:31,279 --> 03:02:37,439
times is going to be divided by 10 to

4560
03:02:34,318 --> 03:02:38,558
the power of 18. if we now save this

4561
03:02:37,439 --> 03:02:42,479
reload

4562
03:02:38,559 --> 03:02:43,679
you can see that the amount is 0.0005

4563
03:02:42,478 --> 03:02:46,079
ethereum

4564
03:02:43,680 --> 03:02:47,519
great so now we have the list of our

4565
03:02:46,079 --> 03:02:50,159
transactions

4566
03:02:47,520 --> 03:02:51,840
and we can go back to our transactions

4567
03:02:50,159 --> 03:02:54,958
page

4568
03:02:51,840 --> 03:02:56,960
and instead of rendering dummy data

4569
03:02:54,959 --> 03:03:00,239
we no longer need that

4570
03:02:56,959 --> 03:03:01,838
we can simply render real transactions

4571
03:03:00,239 --> 03:03:04,559
right here that we're going to get from

4572
03:03:01,840 --> 03:03:07,599
the context so transactions

4573
03:03:04,559 --> 03:03:10,398
we render those transactions right here

4574
03:03:07,600 --> 03:03:11,760
but don't forget we have to pass them

4575
03:03:10,398 --> 03:03:13,838
right here

4576
03:03:11,760 --> 03:03:15,119
into the context

4577
03:03:13,840 --> 03:03:17,920
so value

4578
03:03:15,120 --> 03:03:20,080
we're going to pass the transactions as

4579
03:03:17,920 --> 03:03:21,920
well as the is loading state because we

4580
03:03:20,079 --> 03:03:24,239
have to use that as well

4581
03:03:21,920 --> 03:03:26,559
now we can reload the page before

4582
03:03:24,239 --> 03:03:29,679
sending another test transaction let's

4583
03:03:26,559 --> 03:03:32,559
go to our welcome page and i remembered

4584
03:03:29,680 --> 03:03:34,720
that we forgot to implement the loading

4585
03:03:32,559 --> 03:03:36,879
because if you remember right now we

4586
03:03:34,719 --> 03:03:37,839
have this to false to never show a

4587
03:03:36,879 --> 03:03:40,718
loader

4588
03:03:37,840 --> 03:03:43,200
but at the top we can simply get the is

4589
03:03:40,719 --> 03:03:45,598
loading from context right now because

4590
03:03:43,200 --> 03:03:47,759
we're passing it through the context

4591
03:03:45,600 --> 03:03:50,800
so if we scroll down now we can simply

4592
03:03:47,760 --> 03:03:54,479
say if is loading render out the loader

4593
03:03:50,799 --> 03:03:56,718
else render out a send now button so now

4594
03:03:54,478 --> 03:03:59,357
if we scroll down we should be able to

4595
03:03:56,719 --> 03:04:00,799
see our test transaction

4596
03:03:59,359 --> 03:04:03,759
and there it is

4597
03:04:00,799 --> 03:04:05,839
from our own account and we can verify

4598
03:04:03,760 --> 03:04:08,479
that if we go to meta mask

4599
03:04:05,840 --> 03:04:11,519
0x53c

4600
03:04:08,478 --> 03:04:14,958
and there we go it starts with 0x53c

4601
03:04:11,520 --> 03:04:18,560
ends with 73aa and that seems correct

4602
03:04:14,959 --> 03:04:21,277
and we indeed sent 0.005 ethereum and

4603
03:04:18,559 --> 03:04:24,719
the message was test and here is a gif

4604
03:04:21,279 --> 03:04:27,679
representing our keyword of test as well

4605
03:04:24,719 --> 03:04:30,398
great now to verify that everything

4606
03:04:27,680 --> 03:04:31,680
absolutely works let's send a few more

4607
03:04:30,398 --> 03:04:34,398
transactions

4608
03:04:31,680 --> 03:04:37,040
i'm going to again go to metamask

4609
03:04:34,398 --> 03:04:39,758
accounts account two

4610
03:04:37,040 --> 03:04:40,959
click this miss right here and copy the

4611
03:04:39,760 --> 03:04:43,119
address

4612
03:04:40,959 --> 03:04:46,159
i'm gonna paste it right here

4613
03:04:43,120 --> 03:04:50,278
let's send another 0.005

4614
03:04:46,159 --> 03:04:52,159
or let's be generous and send a bit more

4615
03:04:50,279 --> 03:04:55,679
0.001

4616
03:04:52,159 --> 03:04:57,437
the gif can in this case be hello

4617
03:04:55,680 --> 03:05:01,199
and the message can be

4618
03:04:57,439 --> 03:05:03,278
hello from account one and let's go

4619
03:05:01,200 --> 03:05:06,079
ahead and click send now

4620
03:05:03,279 --> 03:05:07,920
we get that metamask notification

4621
03:05:06,079 --> 03:05:10,958
i'm gonna click confirm

4622
03:05:07,920 --> 03:05:13,920
and we get that contract interaction and

4623
03:05:10,959 --> 03:05:16,239
i'm again going to press confirm

4624
03:05:13,920 --> 03:05:19,359
the loading now works and this is

4625
03:05:16,239 --> 03:05:21,277
looking phenomenal in about 10 to 30

4626
03:05:19,359 --> 03:05:23,439
seconds the transaction should go

4627
03:05:21,279 --> 03:05:24,799
through and we should be able to see it

4628
03:05:23,439 --> 03:05:27,520
just below

4629
03:05:24,799 --> 03:05:29,438
and there we go the loading stopped i'm

4630
03:05:27,520 --> 03:05:32,478
gonna reload the page

4631
03:05:29,439 --> 03:05:35,839
and now if we scroll down

4632
03:05:32,478 --> 03:05:36,958
as you can see we have two transactions

4633
03:05:35,840 --> 03:05:40,160
right here

4634
03:05:36,959 --> 03:05:42,398
this one is saying hello as we specified

4635
03:05:40,159 --> 03:05:44,199
and the message hello from account one

4636
03:05:42,398 --> 03:05:47,999
is here

4637
03:05:44,200 --> 03:05:49,119
0.001 ethereum so that's looking good as

4638
03:05:48,000 --> 03:05:52,080
well

4639
03:05:49,120 --> 03:05:54,318
so there we go that's it we have our two

4640
03:05:52,079 --> 03:05:57,199
transactions and just for good measure

4641
03:05:54,318 --> 03:05:58,959
let's try to send one more

4642
03:05:57,200 --> 03:06:01,200
i'm again going to paste the same

4643
03:05:58,959 --> 03:06:03,277
address of the account too

4644
03:06:01,200 --> 03:06:04,079
let's do something incredibly big this

4645
03:06:03,279 --> 03:06:05,679
time

4646
03:06:04,079 --> 03:06:07,079
let's see how much do we have in our

4647
03:06:05,680 --> 03:06:08,640
account

4648
03:06:07,079 --> 03:06:11,438
0.14

4649
03:06:08,639 --> 03:06:14,238
so let's do 0.1

4650
03:06:11,439 --> 03:06:17,200
the 10th of one ethereum and in this

4651
03:06:14,239 --> 03:06:19,038
case instead of hello let's try with hi

4652
03:06:17,200 --> 03:06:21,839
and the message can be

4653
03:06:19,040 --> 03:06:23,759
here's a gift for you

4654
03:06:21,840 --> 03:06:25,840
and let's click send

4655
03:06:23,760 --> 03:06:27,359
again we'll have to verify it through

4656
03:06:25,840 --> 03:06:30,080
our meta mask

4657
03:06:27,359 --> 03:06:32,799
confirm and then contract interaction

4658
03:06:30,079 --> 03:06:35,519
confirm as well we have that nice

4659
03:06:32,799 --> 03:06:37,039
loading and as soon as it's done we can

4660
03:06:35,520 --> 03:06:39,840
reload the page

4661
03:06:37,040 --> 03:06:41,040
or we can also go to our transaction

4662
03:06:39,840 --> 03:06:43,840
context

4663
03:06:41,040 --> 03:06:46,200
right here and we also increment the

4664
03:06:43,840 --> 03:06:47,920
transaction number we can do

4665
03:06:46,200 --> 03:06:50,079
window.reload

4666
03:06:47,920 --> 03:06:52,160
that's going to reload the page as soon

4667
03:06:50,079 --> 03:06:54,718
as the transaction is done

4668
03:06:52,159 --> 03:06:57,758
and there we go hi there here's a gift

4669
03:06:54,719 --> 03:07:00,719
for you and let's check if our ethereum

4670
03:06:57,760 --> 03:07:05,319
wallet 2 actually received the ethereum

4671
03:07:00,719 --> 03:07:05,318
and there it is 0.1015

4672
03:07:05,840 --> 03:07:09,520
that is it

4673
03:07:07,359 --> 03:07:11,839
as i've said the other account could

4674
03:07:09,520 --> 03:07:14,560
have been on the other part of the world

4675
03:07:11,840 --> 03:07:16,880
and in just about 20 to 30 seconds you

4676
03:07:14,559 --> 03:07:19,999
can send any amount of money through the

4677
03:07:16,879 --> 03:07:22,239
blockchain network isn't that crazy

4678
03:07:20,000 --> 03:07:24,479
with that said we're slowly coming to

4679
03:07:22,239 --> 03:07:26,719
the end of this video this has been a

4680
03:07:24,478 --> 03:07:28,798
phenomenal project and i haven't been

4681
03:07:26,719 --> 03:07:31,199
this excited for a video in quite some

4682
03:07:28,799 --> 03:07:33,438
time now and for the end i'm going to

4683
03:07:31,200 --> 03:07:36,240
teach you how to deploy this project to

4684
03:07:33,439 --> 03:07:39,200
hostinger that way we're going to have a

4685
03:07:36,239 --> 03:07:42,559
custom domain and you can also create as

4686
03:07:39,200 --> 03:07:44,799
many custom emails as you want with that

4687
03:07:42,559 --> 03:07:47,198
said let's go ahead and deploy this

4688
03:07:44,799 --> 03:07:49,759
project together right away

4689
03:07:47,200 --> 03:07:52,879
and we are back on our hostingers

4690
03:07:49,760 --> 03:07:54,880
dashboard i already purchased the domain

4691
03:07:52,879 --> 03:07:56,798
cryptomastery.com

4692
03:07:54,879 --> 03:07:59,039
if you purchased yours it's going to be

4693
03:07:56,799 --> 03:08:01,358
right here as well if you haven't you

4694
03:07:59,040 --> 03:08:03,040
can do that right away again the link is

4695
03:08:01,359 --> 03:08:04,720
down in the description

4696
03:08:03,040 --> 03:08:06,560
if you haven't yet connected the domain

4697
03:08:04,719 --> 03:08:09,278
to your setup the setup is going to be

4698
03:08:06,559 --> 03:08:11,278
right here but if you already connected

4699
03:08:09,279 --> 03:08:13,359
it it's going to be right here under

4700
03:08:11,279 --> 03:08:15,599
premium shared hosting and then your

4701
03:08:13,359 --> 03:08:18,879
domain name right here

4702
03:08:15,600 --> 03:08:22,159
in this case we're going to go to manage

4703
03:08:18,879 --> 03:08:24,398
you can scroll all the way down and go

4704
03:08:22,159 --> 03:08:26,317
to the file manager

4705
03:08:24,398 --> 03:08:27,679
you can click this new file manager

4706
03:08:26,318 --> 03:08:29,679
right here

4707
03:08:27,680 --> 03:08:31,1000
that's going to lead you to your age

4708
03:08:29,680 --> 03:08:35,040
panel you can go into the public

4709
03:08:32,000 --> 03:08:37,519
underscore html document and right now

4710
03:08:35,040 --> 03:08:39,1000
we just have this default.php

4711
03:08:37,520 --> 03:08:42,800
which you can delete right here

4712
03:08:40,000 --> 03:08:45,439
and press yes now we have to put our

4713
03:08:42,799 --> 03:08:47,919
build folder right into here and we can

4714
03:08:45,439 --> 03:08:49,599
create our build folder by going back to

4715
03:08:47,920 --> 03:08:51,920
our application

4716
03:08:49,600 --> 03:08:54,239
we can close all of our files by holding

4717
03:08:51,920 --> 03:08:56,240
ctrl and then pressing w

4718
03:08:54,239 --> 03:08:58,239
collapse our file tree

4719
03:08:56,239 --> 03:09:00,719
and then open up the terminal by going

4720
03:08:58,239 --> 03:09:02,719
to view and then terminal

4721
03:09:00,719 --> 03:09:05,039
we can stop it from running by pressing

4722
03:09:02,719 --> 03:09:07,919
ctrl c and then y

4723
03:09:05,040 --> 03:09:12,959
we can clear it and while still staying

4724
03:09:07,920 --> 03:09:14,880
in the client we can run npm run build

4725
03:09:12,959 --> 03:09:17,678
this is going to create an optimized

4726
03:09:14,879 --> 03:09:20,159
version ready for production and there

4727
03:09:17,680 --> 03:09:21,279
we go with the white it's incredibly

4728
03:09:20,159 --> 03:09:24,639
quick

4729
03:09:21,279 --> 03:09:27,200
we have our deployed version under dist

4730
03:09:24,639 --> 03:09:29,518
so you can right click it and then click

4731
03:09:27,200 --> 03:09:31,600
reveal in file explorer

4732
03:09:29,520 --> 03:09:34,800
once you've done that you can simply

4733
03:09:31,600 --> 03:09:35,1000
drag and drop only the dist folder right

4734
03:09:34,799 --> 03:09:38,238
into here

4735
03:09:36,000 --> 03:09:40,000
once you open this in file explorer it

4736
03:09:38,238 --> 03:09:42,558
should look something like this and then

4737
03:09:40,000 --> 03:09:45,040
you can enter this folder

4738
03:09:42,559 --> 03:09:47,919
the only thing you have to do is drag

4739
03:09:45,040 --> 03:09:50,238
and drop the assets and the index.html

4740
03:09:47,920 --> 03:09:52,238
right into here that's going to take

4741
03:09:50,238 --> 03:09:54,879
just a moment and your files are going

4742
03:09:52,238 --> 03:09:57,758
to be right here right away

4743
03:09:54,879 --> 03:10:01,039
and that's about it if we now go back to

4744
03:09:57,760 --> 03:10:03,760
our hosting panel scroll to the top and

4745
03:10:01,040 --> 03:10:05,759
click your domain name right here you

4746
03:10:03,760 --> 03:10:07,679
should be able to see that it's going to

4747
03:10:05,760 --> 03:10:10,160
load out instantly

4748
03:10:07,680 --> 03:10:13,680
but there's one really important thing

4749
03:10:10,159 --> 03:10:15,918
left to do and that is to enable the ssl

4750
03:10:13,680 --> 03:10:17,760
certificate because our site is

4751
03:10:15,920 --> 03:10:19,759
currently not secure

4752
03:10:17,760 --> 03:10:22,720
so we can go back

4753
03:10:19,760 --> 03:10:23,1000
we can search for ssl right here

4754
03:10:22,719 --> 03:10:26,879
click it

4755
03:10:24,000 --> 03:10:29,120
and then hostinger just makes it so easy

4756
03:10:26,879 --> 03:10:31,678
the only thing we have to do is say

4757
03:10:29,120 --> 03:10:35,120
install ssl

4758
03:10:31,680 --> 03:10:37,279
ssl is being installed as we speak and

4759
03:10:35,120 --> 03:10:38,160
this process usually takes just about a

4760
03:10:37,279 --> 03:10:40,399
minute

4761
03:10:38,159 --> 03:10:43,199
i was wrong it actually took just about

4762
03:10:40,398 --> 03:10:44,159
five seconds i reload the page and there

4763
03:10:43,200 --> 03:10:46,478
it was

4764
03:10:44,159 --> 03:10:47,918
so now if we go back in here and if you

4765
03:10:46,478 --> 03:10:49,599
reload the page

4766
03:10:47,920 --> 03:10:52,238
as you can notice we have this lock

4767
03:10:49,600 --> 03:10:53,519
right here which means that connection

4768
03:10:52,238 --> 03:10:55,758
is secure

4769
03:10:53,520 --> 03:10:58,960
and again especially with cryptocurrency

4770
03:10:55,760 --> 03:11:00,639
applications having a custom domain name

4771
03:10:58,959 --> 03:11:03,838
ssl certificate

4772
03:11:00,639 --> 03:11:06,158
fast load times and a custom email

4773
03:11:03,840 --> 03:11:07,1000
definitely comes in handy because there

4774
03:11:06,159 --> 03:11:10,159
are a lot of cryptocurrency related

4775
03:11:08,000 --> 03:11:13,679
scams and you need your page to be

4776
03:11:10,159 --> 03:11:15,838
secure and reliable with that said let's

4777
03:11:13,680 --> 03:11:18,239
see if our blockchain transactions are

4778
03:11:15,840 --> 03:11:19,040
going to work on our deployed site as

4779
03:11:18,238 --> 03:11:20,959
well

4780
03:11:19,040 --> 03:11:23,599
as you can see we haven't yet connected

4781
03:11:20,959 --> 03:11:25,358
our metamask wallet to our deployed site

4782
03:11:23,600 --> 03:11:27,840
and that's why we have just these three

4783
03:11:25,359 --> 03:11:29,200
dots right here so let's click connect

4784
03:11:27,840 --> 03:11:31,439
wallet

4785
03:11:29,200 --> 03:11:33,520
a notification is going to appear

4786
03:11:31,439 --> 03:11:36,479
and in this case let's connect the

4787
03:11:33,520 --> 03:11:37,760
account number two

4788
03:11:36,478 --> 03:11:39,759
next

4789
03:11:37,760 --> 03:11:42,080
and connect

4790
03:11:39,760 --> 03:11:45,439
just like that our address appeared

4791
03:11:42,079 --> 03:11:47,678
right here we can open our meta mask

4792
03:11:45,439 --> 03:11:50,639
go to account number one

4793
03:11:47,680 --> 03:11:52,239
dismiss copy the account address

4794
03:11:50,639 --> 03:11:55,358
paste it here

4795
03:11:52,238 --> 03:11:58,799
let's send 0.1 back

4796
03:11:55,359 --> 03:12:00,399
let's do something like blockchain

4797
03:11:58,799 --> 03:12:02,558
and say

4798
03:12:00,398 --> 03:12:04,398
here take your

4799
03:12:02,559 --> 03:12:07,198
ethereum back

4800
03:12:04,398 --> 03:12:09,358
and a smiley face and let's press send

4801
03:12:07,200 --> 03:12:10,800
now sending ethereum

4802
03:12:09,359 --> 03:12:13,679
confirm

4803
03:12:10,799 --> 03:12:15,039
and then contract interaction confirm as

4804
03:12:13,680 --> 03:12:17,358
well

4805
03:12:15,040 --> 03:12:19,679
the loading is happening let's go to

4806
03:12:17,359 --> 03:12:22,639
account 1 and wait for the transaction

4807
03:12:19,680 --> 03:12:24,960
to happen and there we go in about 30

4808
03:12:22,639 --> 03:12:28,879
seconds the transaction went through and

4809
03:12:24,959 --> 03:12:31,518
we now have 0.14 ethereum on our account

4810
03:12:28,879 --> 03:12:34,238
1 on robsten test network

4811
03:12:31,520 --> 03:12:35,760
let's reload the page

4812
03:12:34,238 --> 03:12:37,678
scroll down

4813
03:12:35,760 --> 03:12:40,399
and there we go

4814
03:12:37,680 --> 03:12:42,239
our blockchain gif stored on the

4815
03:12:40,398 --> 03:12:45,199
blockchain forever

4816
03:12:42,238 --> 03:12:46,959
looks like ethereum is climbing to fight

4817
03:12:45,200 --> 03:12:49,680
the bitcoin king

4818
03:12:46,959 --> 03:12:52,398
and all of this is happening on our new

4819
03:12:49,680 --> 03:12:55,359
deployed domain which means that

4820
03:12:52,398 --> 03:12:58,398
absolutely everyone can create their own

4821
03:12:55,359 --> 03:13:01,040
metamask account wallet and send

4822
03:12:58,398 --> 03:13:04,878
ethereum through the application that

4823
03:13:01,040 --> 03:13:06,559
you created and deployed phenomenal job

4824
03:13:04,879 --> 03:13:09,119
thank you so much for watching this

4825
03:13:06,559 --> 03:13:11,437
video it's been a crazy experience at

4826
03:13:09,120 --> 03:13:13,999
least for me connecting a react

4827
03:13:11,439 --> 03:13:16,399
application to the blockchain it's a

4828
03:13:14,000 --> 03:13:19,120
revolutionary technology and it's going

4829
03:13:16,398 --> 03:13:21,598
to definitely take the world by storm in

4830
03:13:19,120 --> 03:13:24,160
the upcoming months or years

4831
03:13:21,600 --> 03:13:26,720
so if you'd like to see more web 3.0

4832
03:13:24,159 --> 03:13:28,958
videos just let me know in the comments

4833
03:13:26,719 --> 03:13:31,199
like this video and share it

4834
03:13:28,959 --> 03:13:36,277
with that said thank you so much for

4835
03:13:31,200 --> 03:13:36,278
watching and have a wonderful day

4836
03:13:36,479 --> 03:13:39,708
[Music]

4837
03:13:42,559 --> 03:13:49,198
[Music]

4838
03:13:47,120 --> 03:13:49,200
you

